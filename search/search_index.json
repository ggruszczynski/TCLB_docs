{
    "docs": [
        {
            "location": "/",
            "text": "The TCLB code is a parallel Lattice Boltzmann Method solver, able to run on multi-GPU\ncluster architectures.\n\n\nFor a quick start, please refer to the \nGetting Started\nguide\n.\n\n\nDetailed descriptions of configuration of the code and compilation, can be\nfound in the \"Installation\" part of this manual. The \"Running simulations\"\npart details the setup and execution of fluid flow simulations with TCLB.\nThe \"Post-processing\" details the way you can analyze the results. The\n\"Model development\" part is a reference for developers wanting to add or\nmodify models in TCLB.\n\n\nThe \"XML Reference\" is an automaticaly generated reference of all\nXML elements avaliable for usage in the TCLB configuration files. \"Models\"\nis also automaticaly generated and is a reference of all models currently\navaliable, with all apropriate data for each of them.\n\n\nFinnaly \"Tutorials\" section provides several step-by-step tutorials about\nmodel development and other things.",
            "title": "Welcome to TCLB"
        },
        {
            "location": "/1.-Getting-started/installation/",
            "text": "Installation\n\n\nDownloading files\n\n\ngit clone https://github.com/CFD-GO/TCLB.git\n\ncd\n TCLB\n\n\n\n\n\nDependencies\n\n\nIn order to use TCLB solver, the following tools are required:\n\n\n\n\nR\n\n\npackages for R: \noptparse\n, \nnumbers\n,  \ntemplate\n, \ngvector\n,  \npolyAlgebra\n\n\nnVidia CUDA\n (if you want to use GPU)\n\n\npython\n\n\nnumpy\n (if you want to use the integrated python interpreter)\n\n\npython\n, \npython\n \n\n\nrPython\n (if you want to develop a model using python in place or R)\n\n\nMPI\n (e.g. [OpenMPI](http://www.open-mpi.org\n\n\n\n\nMost of them can be installed using the script provided within the code(tools/install.sh):\n\n\nsudo tools/install.sh cuda \n6\n.5-14\nsudo tools/install.sh r\nsudo tools/install.sh openmpi\n     tools/install.sh rdep\nsudo tools/install.sh python-dev\n     tools/install.sh rpython\n\n\n\n\n\nCompilation\n\n\nAfter installing all required dependencies, the code is ready to be compiled. In order to do so:\n\n\nmake configure\n./configure\nmake -j \n10\n d2q9\n\n\n\n\n\nNotes: \n-j 10\n is used to speed up the compilation process, by running multiple threads. \nd2q9\n is the name of the model, this solver comes with multiple models(TODO:link), which can be compiled(and used) by substituting \nd2q9\n for desired model name(e.g. \nd3q27\n).",
            "title": "Installation"
        },
        {
            "location": "/1.-Getting-started/installation/#installation",
            "text": "",
            "title": "Installation"
        },
        {
            "location": "/1.-Getting-started/installation/#downloading-files",
            "text": "git clone https://github.com/CFD-GO/TCLB.git cd  TCLB",
            "title": "Downloading files"
        },
        {
            "location": "/1.-Getting-started/installation/#dependencies",
            "text": "In order to use TCLB solver, the following tools are required:   R  packages for R:  optparse ,  numbers ,   template ,  gvector ,   polyAlgebra  nVidia CUDA  (if you want to use GPU)  python  numpy  (if you want to use the integrated python interpreter)  python ,  python    rPython  (if you want to develop a model using python in place or R)  MPI  (e.g. [OpenMPI](http://www.open-mpi.org   Most of them can be installed using the script provided within the code(tools/install.sh):  sudo tools/install.sh cuda  6 .5-14\nsudo tools/install.sh r\nsudo tools/install.sh openmpi\n     tools/install.sh rdep\nsudo tools/install.sh python-dev\n     tools/install.sh rpython",
            "title": "Dependencies"
        },
        {
            "location": "/1.-Getting-started/installation/#compilation",
            "text": "After installing all required dependencies, the code is ready to be compiled. In order to do so:  make configure\n./configure\nmake -j  10  d2q9  Notes:  -j 10  is used to speed up the compilation process, by running multiple threads.  d2q9  is the name of the model, this solver comes with multiple models(TODO:link), which can be compiled(and used) by substituting  d2q9  for desired model name(e.g.  d3q27 ).",
            "title": "Compilation"
        },
        {
            "location": "/1.-Getting-started/running-simulation/",
            "text": "Usage\n\n\nCLB/MODEL_NAME/main case_path\n\n\n\n\n\nWhere \nMODEL_NAME\n is the name of the desired model(e.g.\nd2q9\n) and \ncase_path\n is the location of case file(.xml), relative to the TCLB folder.\n\n\nFor example, to run \nkarman.xml\n case, located in subfolder \nexample\\flow\\2d\n, using \nd2q9\n model:\n\n\nCLB/d2q9/main example/flow/2d/karman.xml\n\n\n\n\n\nCPU-based usage\n\n\nBy default the code will run on GPU, which requires a NVIDIA GPU with CUDA support. In order to run it on CPU, the code must be compiled using \n--disable-cuda\n option. In order to run the calculations on CPU in parallel, one need to start calculations using \nmpirun\n option:\n\n\nmpirun -np X CLB/MODEL_NAME/main case_path\n\n\n\n\n\nWhere \nX\n is number of threads that will be created. Usually max number of threads is equal to number of cores of a processor, with the exception of CPUs with multi-threading.\n\n\nTODO: Mo\u017ce te\u017c co\u015b o tym jak odpala\u0107 obliczenia na klastrze?(instrukcja z wiki github)",
            "title": "Running calculations"
        },
        {
            "location": "/1.-Getting-started/running-simulation/#usage",
            "text": "CLB/MODEL_NAME/main case_path  Where  MODEL_NAME  is the name of the desired model(e.g. d2q9 ) and  case_path  is the location of case file(.xml), relative to the TCLB folder.  For example, to run  karman.xml  case, located in subfolder  example\\flow\\2d , using  d2q9  model:  CLB/d2q9/main example/flow/2d/karman.xml",
            "title": "Usage"
        },
        {
            "location": "/1.-Getting-started/running-simulation/#cpu-based-usage",
            "text": "By default the code will run on GPU, which requires a NVIDIA GPU with CUDA support. In order to run it on CPU, the code must be compiled using  --disable-cuda  option. In order to run the calculations on CPU in parallel, one need to start calculations using  mpirun  option:  mpirun -np X CLB/MODEL_NAME/main case_path  Where  X  is number of threads that will be created. Usually max number of threads is equal to number of cores of a processor, with the exception of CPUs with multi-threading.  TODO: Mo\u017ce te\u017c co\u015b o tym jak odpala\u0107 obliczenia na klastrze?(instrukcja z wiki github)",
            "title": "CPU-based usage"
        },
        {
            "location": "/2.-Installation/ESYS-Particle/",
            "text": "ESYS-Particle\n\n\n\n\nWarning\n\n\nAll these features related to particles are supported only in the\n\nparticle\n branch\n\n\n\n\nESYS-Particle is a Discrete Element Method (DEM) code, which can be used to\nsimulate particle dynamics. It can be coupled with TCLB with the use od\nRemote Force Interface (RFI).\n\n\nGetting ESYS-Particle\n\n\nThe best way to install the ESYS-Particle version that supports RFI it to\ndownload the source code and compile it. The ESYS code is stored kept in a\nBazaar repository (similar to git), on launchpad. You can clone the\napropriate branch using:\n\n\nbzr clone lp:~llaniewski/esys-particle/remote-force\n\n\n\n\n\nThe main branch is at \nlp:esys-particle\n but it doesn't support RFI yet.\nAfter you cloned the repository, you can configure, compile and install the\nsolver.\n\n\nConfiguration and installation\n\n\nFirst we need to generate the \nconfigure\n script:\n\n\n./autogen.sh\n\n\n\n\n\nAs in most cases we will want to install the code without root privilages,\nwe need to specify the installation directory somewhere in our home\ndirectory (\n$HOME/esys_inst/\n):\n\n\n./configure --prefix\n=\n$HOME\n/esys_inst/ \nCC\n=\nmpicc \nCXX\n=\nmpic++\n\n\n\n\n\nAfter configuration, we can compile and install:\n\n\nmake -j 4\nmake install\n\n\n\n\n\nRunning ESYS\n\n\nTo be able to run ESYS from our special installation directory, we need to\nset apropriate envirnment variables:\n\n\nESPATH\n=\n$HOME\n/esys_inst\n\nexport\n \nPATH\n=\n$ESPATH\n/bin:\n$PATH\n\n\nexport\n \nLD_LIBRARY_PATH\n=\n$ESPATH\n/lib:\n$LD_LIBRARY_PATH\n\n\nexport\n \nPYTHONPATH\n=\n$ESPATH\n/lib/python2.7/site-packages:\n$PYTHONPATH\n\n\n\n\n\n\nThis can be placed in \n.bashrc\n file if we want it to persist. We can check in the right version of ESYS is executed with \nwhich\nesysparticle\n or \nls -l $(which esysparticle)\n.\n\n\nThe simulations can be executed with:\n\n\nmpirun -np \n2\n esysparticle script.py \n\n\n\n\n\n\n\nSimulation setup\n\n\nTo learn ESYS-Particle, we recommend their \ntutorial\n\n\n\n\n\n\nPost-Processing\n\n\nTo learn how to post-process results from ESYS-Particle please refer\nto \nanother section of this manual",
            "title": "ESYS-Particle"
        },
        {
            "location": "/2.-Installation/ESYS-Particle/#esys-particle",
            "text": "Warning  All these features related to particles are supported only in the particle  branch   ESYS-Particle is a Discrete Element Method (DEM) code, which can be used to\nsimulate particle dynamics. It can be coupled with TCLB with the use od\nRemote Force Interface (RFI).",
            "title": "ESYS-Particle"
        },
        {
            "location": "/2.-Installation/ESYS-Particle/#getting-esys-particle",
            "text": "The best way to install the ESYS-Particle version that supports RFI it to\ndownload the source code and compile it. The ESYS code is stored kept in a\nBazaar repository (similar to git), on launchpad. You can clone the\napropriate branch using:  bzr clone lp:~llaniewski/esys-particle/remote-force  The main branch is at  lp:esys-particle  but it doesn't support RFI yet.\nAfter you cloned the repository, you can configure, compile and install the\nsolver.",
            "title": "Getting ESYS-Particle"
        },
        {
            "location": "/2.-Installation/ESYS-Particle/#configuration-and-installation",
            "text": "First we need to generate the  configure  script:  ./autogen.sh  As in most cases we will want to install the code without root privilages,\nwe need to specify the installation directory somewhere in our home\ndirectory ( $HOME/esys_inst/ ):  ./configure --prefix = $HOME /esys_inst/  CC = mpicc  CXX = mpic++  After configuration, we can compile and install:  make -j 4\nmake install",
            "title": "Configuration and installation"
        },
        {
            "location": "/2.-Installation/ESYS-Particle/#running-esys",
            "text": "To be able to run ESYS from our special installation directory, we need to\nset apropriate envirnment variables:  ESPATH = $HOME /esys_inst export   PATH = $ESPATH /bin: $PATH  export   LD_LIBRARY_PATH = $ESPATH /lib: $LD_LIBRARY_PATH  export   PYTHONPATH = $ESPATH /lib/python2.7/site-packages: $PYTHONPATH   This can be placed in  .bashrc  file if we want it to persist. We can check in the right version of ESYS is executed with  which\nesysparticle  or  ls -l $(which esysparticle) .  The simulations can be executed with:  mpirun -np  2  esysparticle script.py    Simulation setup  To learn ESYS-Particle, we recommend their  tutorial    Post-Processing  To learn how to post-process results from ESYS-Particle please refer\nto  another section of this manual",
            "title": "Running ESYS"
        },
        {
            "location": "/2.-Installation/configuration-options/",
            "text": "Configuration options\n\n\n\n\n\n\n\n\nOption\n\n\nEffect\n\n\n\n\n\n\n\n\n\n\n--enable-graphics\n\n\nEnables the live visualization (only on CUDA).\n\n\n\n\n\n\n--disable-double\n\n\nSwitches to single precision (float in place of double).\n\n\n\n\n\n\n--disable-cuda\n\n\nDisables CUDA, thus compiling the code for CPU.\n\n\n\n\n\n\n--with-nlopt\n\n\nCompilation with NLopt library for optimization.\n\n\n\n\n\n\n--with-python\n\n\nCompilation with enabled Python integration(TODO:do u\u017cycia w XML).\n\n\n\n\n\n\n--with-r\n\n\nCompilation with enabled R integration(TODO:do u\u017cycia w XML).",
            "title": "Configuration options"
        },
        {
            "location": "/2.-Installation/configuration-options/#configuration-options",
            "text": "Option  Effect      --enable-graphics  Enables the live visualization (only on CUDA).    --disable-double  Switches to single precision (float in place of double).    --disable-cuda  Disables CUDA, thus compiling the code for CPU.    --with-nlopt  Compilation with NLopt library for optimization.    --with-python  Compilation with enabled Python integration(TODO:do u\u017cycia w XML).    --with-r  Compilation with enabled R integration(TODO:do u\u017cycia w XML).",
            "title": "Configuration options"
        },
        {
            "location": "/2.-Installation/dependencies/",
            "text": "Dependencies\n\n\nnVidia CUDA\n\n\nIf you want to use GPU you have to install \nnVidia CUDA\n.\n\n\nMessage Passing Interface (MPI)\n\n\nMPI\n library is\nrequired for communication between processes in TCLB. TCLB cannot be runned\nwithout it, even if you run only a single process. You for instance use\n\nOpenMPI\n (\nsudo tools/install.sh openmpi\n)\n\n\nR\n\n\nR\n is a scripting language mainly used for data\nanalysis. In TCLB is using TCLB for many things, including source\ngeneration. You can install R using eg. \nsudo tools/install.sh r\n.\n\n\nPackages\n\n\nFor many important parts of TCLB you need to install several packages (you\ncan use \ntools/install.sh rdep\n):\n\n\n\n\noptparse\n\n\nnumbers\n\n\nrtemplate\n\n\ngvector\n\n\npolyAlgebra\n\n\n\n\nIf you want to use R during your simulation with \n<RunR>\n element (\ntools/install.sh rinside\n):\n\n\n\n\npolyAlgebra\n\n\n\n\nIf you want to use python in source generation, please install (\ntools/install.sh\nrpython\n):\n\n\n\n\nrPython\n (if you want to develop a model using python in place or R)\n\n\n\n\nPython\n\n\nPython\n can be used for source generation in\nmodels, and it can be used in execution. With python you will need in most\ncases (\nsudo tools/install.sh python-dev\n):\n\n\n\n\nnumpy\n\n\nsympy",
            "title": "Dependencies"
        },
        {
            "location": "/2.-Installation/dependencies/#dependencies",
            "text": "",
            "title": "Dependencies"
        },
        {
            "location": "/2.-Installation/dependencies/#nvidia-cuda",
            "text": "If you want to use GPU you have to install  nVidia CUDA .",
            "title": "nVidia CUDA"
        },
        {
            "location": "/2.-Installation/dependencies/#message-passing-interface-mpi",
            "text": "MPI  library is\nrequired for communication between processes in TCLB. TCLB cannot be runned\nwithout it, even if you run only a single process. You for instance use OpenMPI  ( sudo tools/install.sh openmpi )",
            "title": "Message Passing Interface (MPI)"
        },
        {
            "location": "/2.-Installation/dependencies/#r",
            "text": "R  is a scripting language mainly used for data\nanalysis. In TCLB is using TCLB for many things, including source\ngeneration. You can install R using eg.  sudo tools/install.sh r .",
            "title": "R"
        },
        {
            "location": "/2.-Installation/dependencies/#packages",
            "text": "For many important parts of TCLB you need to install several packages (you\ncan use  tools/install.sh rdep ):   optparse  numbers  rtemplate  gvector  polyAlgebra   If you want to use R during your simulation with  <RunR>  element ( tools/install.sh rinside ):   polyAlgebra   If you want to use python in source generation, please install ( tools/install.sh\nrpython ):   rPython  (if you want to develop a model using python in place or R)",
            "title": "Packages"
        },
        {
            "location": "/2.-Installation/dependencies/#python",
            "text": "Python  can be used for source generation in\nmodels, and it can be used in execution. With python you will need in most\ncases ( sudo tools/install.sh python-dev ):   numpy  sympy",
            "title": "Python"
        },
        {
            "location": "/3.-Running-simulations/case-basics/",
            "text": "Case configuration\n\n\nAll case properties(geometry,BCs,model settings, etc.) are specified within XML files. Generally, the structure of the file should look like that:\n\n\n<?xml version=\"1.0\"?>\n\n\n<CLBConfig>\n\n        \n<Units>\n\n              \n<Params/>\n \n<!-- Specify relation between LB and real world units here -->\n\n        \n</Units>\n\n        \n<Geometry>\n  \n<!-- Domain size -->\n \n              \n<!-- Collision type, boundary conditions, creating/importing objects -->\n\n        \n</Geometry>\n\n        \n<Model>\n\n              \n<Params/>\n \n<!-- All parameters like velocity, density, viscosity -->\n\n        \n</Model>\n\n        \n<!-- Callbacks, python/r code -->\n\n\n</CLBConfig>\n\n\n\n\n\n\nWorking example with some sample values is shown below, along with explanation of each lines functionality.\n\n\n<?xml version=\"1.0\"?>\n\n\n<CLBConfig\n \nversion=\n\"2.0\"\n \noutput=\n\"output/test\"\n>\n\n        \n<Geometry\n \nnx=\n\"1024\"\n \nny=\n\"100\"\n>\n\n                \n<MRT><Box/></MRT>\n\n                \n<WVelocity\n \nname=\n\"Inlet\"\n><Box\n \nnx=\n\"1\"\n/></WVelocity>\n\n                \n<EPressure><Box\n \ndx=\n\"-1\"\n/></EPressure>\n\n                \n<Wall\n \nmask =\n \n\"ALL\"\n>\n\n                        \n<Box\n \nny=\n\"1\"\n/>\n\n                        \n<Box\n \ndy=\n\"-1\"\n/>\n\n                \n</Wall>\n\n        \n</Geometry>\n\n        \n<Model>\n\n                \n<Params\n \nVelocity-Inlet=\n\"0.01\"\n/>\n\n                \n<Params\n \nnu=\n\"0.05\"\n/>\n\n        \n</Model>\n\n        \n<Solve\n \nIterations=\n\"5000\"\n/>\n\n        \n<VTK\n \nIterations=\n\"50\"\n \nwhat =\n \n\"U,P\"\n/>\n\n        \n<Solve\n \nIterations=\n\"1000\"\n/>\n\n\n</CLBConfig>\n\n\n\n\n\n\n\n\n\n\n\n\nElement\n\n\nFunctionality\n\n\n\n\n\n\n\n\n\n\n<?xml version=\"1.0\"?>\n\n\nHeader required for all case files.\n\n\n\n\n\n\n<CLBConfig output=\"output/test\">\n\n\nAll configuration settings must be contained within this element, additionally it is possible to specify deisred output path and/or filename prefix here. In example all files will be saved in \n~TCLB/output\n folder, with all the filenames begining with \ntest\n prefix.\n\n\n\n\n\n\n<Geometry nx=\"1024\" ny=\"100\">\n\n\nElement containing all informations regarding geometry(domain size/shape, whats insinde domain). \nnx=\"1024\"\" ny=\"100\"\n specifies a domain containing 1024 elements in x-direction and 100 in y-direction. TODO: specyfikacja nx,dx,fx etc.\n\n\n\n\n\n\n<MRT><Box/></MRT>\n\n\nMRT\n is\n\n\n\n\n\n\n<WVelocity name=\"Inlet\"><Box nx=\"1\"/></WVelocity>\n\n\nCreates velocity inlet at western side of the domain(TODO: Orientation), with width equal to 1 element and assignes it name \nInlet\n(usefull for specifying zonal parameters later on).\n\n\n\n\n\n\n<EPressure><Box dx=\"-1\"/></EPressure>\n\n\nCreates pressure outlet at eastern side of the domain, with width equal to to 1 element.\n\n\n\n\n\n\n<Wall mask = \"ALL\">\n \n \n<Box ny=\"1\"/>\n \n \n<Box dy=\"-1\"/>\n \n \n</Wall>\n\n\nCreates \nwall\n elements. \nmask=\"ALL\"\n tells us that all types(also from other groups) will be overwritten by \nwall\n element type, e.g the collision enabled in \n<MRT><Box/></MRT>\n will be disabled.\n\n\n\n\n\n\n</Geometry>\n\n\nClosing tag for \n<Geometry>\n element.\n\n\n\n\n\n\n<Model>\n\n\nElement containing all desired model settings(\nParams\n)\n\n\n\n\n\n\n<Params Velocity-Inlet=\"0.01\"/>\n\n\nSetting the value of \nVelocity\n parameter to 0.01 in \nInlet\n element(specified in Geometry).\n\n\n\n\n\n\n<Params nu=\"0.05\"/>\n\n\nSetting the value of \nnu\n parametere to \n0.05\n.\n\n\n\n\n\n\n</Model>\n\n\nClosing tag for \n<Model>\n element. The case is initialized after this tag.\n\n\n\n\n\n\n<Solve Iterations=\"5000\"/>\n\n\nRuns 5000 iterations\n\n\n\n\n\n\n<VTK Iterations=\"50\"/>\n\n\nSpecifies that next \n<Solve>\n element will create an VTK output file every 50 iterations, saving there U and P quantities. By default everything is saved, creating rather large file for bigger cases.\n\n\n\n\n\n\n<Solve Iterations=\"1000\"/>\n\n\nRuns 1000 iterations, creating \nVTK\n output every 50 iterations, as specified earlier.\n\n\n\n\n\n\n</CLBConfig>\n\n\nClosing tag for \n<CLBConfig>\n element, finishing whole case file.\n\n\n\n\n\n\n\n\nAll case files start with \n<?xml version=\"1.0\"?>\n header.\n\n\nThe configuration must be in the \n<CLBConfig>\n element(\n<CLBConfig/>\n at start and \n</CLBConfig>\n at the end). In this element the output path and/or prefix can be specified. In example above all files will be saved in \n~TCLB/output\n folder, with all the filenames begining with \ntest\n prefix.\n\n\n<Geometry>\n element contains the definition of the domain and objects within it\n\n\nGeometry definition\n\n\nIt's easy to imagine how the geometry elements are defined, by thinking about it as \"painting\". Each geometry element must have 2 parameters \"what are we painting with\" and \"where are we painting\":\n\n\n<Wall\n \nmask=\n\"ALL\"\n>\n\n  \n<Box\n \ndx=\n\"4\"\n \nnx=\n\"10\"\n \nny=\n\"30\"\n/>\n\n\n</Wall>\n\n\n\n\n\n\nIn this example \"what\" is \nWall\n element and \"where\" is \n<Box dx=\"4\" nx=\"10\" ny=\"30\"/>\n. Defining \"where\" can be done in multiple ways, using \nnx\n,\ndx\n,\nfx\n arguments(similarly for \ny\n and \nz\n). To understand the geometry definition, you have to know that \nbox\n element by default spans the whole available space. Then by imposing \ndx\n, \nnx\n and \nfx\n attributes you cut it smaller. \ndx\n sets where the box starts, \nnx\n sets how \nlong\n is the box in the x direction, and \nfx\n sets where it ends. Additionally, if you set a negative value it means a value \nfrom the end\n. The same applies of course to \ny\n and \nz\n. For example:\n\n\n\n\n\n\n\n\nElement\n\n\nRegion\n\n\n\n\n\n\n\n\n\n\n<Box nx=\"1\"/>\n\n\nLeft border of the domain\n\n\n\n\n\n\n<Box dx=\"-1\"/>\n\n\nRight border of the domain\n\n\n\n\n\n\n<Box dx=\"10\"/>\n\n\nEverything starting from the 11th element (in x direction)\n\n\n\n\n\n\n<Box dx=\"-10\"/>\n\n\n10 last layers in the x direction\n\n\n\n\n\n\n<Box nx=\"10\" ny=\"10\"/>\n\n\nSquare 10x10 in the left bottom corner\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGeometry constrain\n\n\nXML Element\n\n\n\n\n\n\n\n\n\n\n\n\n<Box dx=\"4\"/>\n\n\n\n\n\n\n\n\n<Box dx=\"-4\"/>\n\n\n\n\n\n\n\n\n<Box dx=\"4\" nx=\"10\"/>\n\n\n\n\n\n\n\n\n<Box dx=\"4\" fx=\"10\"/>\n\n\n\n\n\n\n\n\nPossible geometry primitives\n\n\nBox\n Creates a box with corners defined by \nnx\n/\ndx\n/\nfx\n etc. parameters.\n\n\nWedge\n Creates a wedge within a \nbox\n, additionally \ndirection\n must be specified (\"LowerRight\", \"LowerLeft\", \"UpperRight\", \"UpperLeft\") e.g: \n<Wedge dx=\"4\" fx=\"10\" dy=\"1\" ny=\"10\" direction=\"LowerRight\"/>\n\n\nSphere\n Creates a sphere within a \nbox\n, can have different dimensions in x/y/z.\n\n\nNode Types\n\n\nNode type consists of several properties, which are organized in groups. Each node can have noly one property from each group. Additional groups can be",
            "title": "Case Basics"
        },
        {
            "location": "/3.-Running-simulations/case-basics/#case-configuration",
            "text": "All case properties(geometry,BCs,model settings, etc.) are specified within XML files. Generally, the structure of the file should look like that:  <?xml version=\"1.0\"?>  <CLBConfig> \n         <Units> \n               <Params/>   <!-- Specify relation between LB and real world units here --> \n         </Units> \n         <Geometry>    <!-- Domain size -->  \n               <!-- Collision type, boundary conditions, creating/importing objects --> \n         </Geometry> \n         <Model> \n               <Params/>   <!-- All parameters like velocity, density, viscosity --> \n         </Model> \n         <!-- Callbacks, python/r code -->  </CLBConfig>   Working example with some sample values is shown below, along with explanation of each lines functionality.  <?xml version=\"1.0\"?>  <CLBConfig   version= \"2.0\"   output= \"output/test\" > \n         <Geometry   nx= \"1024\"   ny= \"100\" > \n                 <MRT><Box/></MRT> \n                 <WVelocity   name= \"Inlet\" ><Box   nx= \"1\" /></WVelocity> \n                 <EPressure><Box   dx= \"-1\" /></EPressure> \n                 <Wall   mask =   \"ALL\" > \n                         <Box   ny= \"1\" /> \n                         <Box   dy= \"-1\" /> \n                 </Wall> \n         </Geometry> \n         <Model> \n                 <Params   Velocity-Inlet= \"0.01\" /> \n                 <Params   nu= \"0.05\" /> \n         </Model> \n         <Solve   Iterations= \"5000\" /> \n         <VTK   Iterations= \"50\"   what =   \"U,P\" /> \n         <Solve   Iterations= \"1000\" />  </CLBConfig>      Element  Functionality      <?xml version=\"1.0\"?>  Header required for all case files.    <CLBConfig output=\"output/test\">  All configuration settings must be contained within this element, additionally it is possible to specify deisred output path and/or filename prefix here. In example all files will be saved in  ~TCLB/output  folder, with all the filenames begining with  test  prefix.    <Geometry nx=\"1024\" ny=\"100\">  Element containing all informations regarding geometry(domain size/shape, whats insinde domain).  nx=\"1024\"\" ny=\"100\"  specifies a domain containing 1024 elements in x-direction and 100 in y-direction. TODO: specyfikacja nx,dx,fx etc.    <MRT><Box/></MRT>  MRT  is    <WVelocity name=\"Inlet\"><Box nx=\"1\"/></WVelocity>  Creates velocity inlet at western side of the domain(TODO: Orientation), with width equal to 1 element and assignes it name  Inlet (usefull for specifying zonal parameters later on).    <EPressure><Box dx=\"-1\"/></EPressure>  Creates pressure outlet at eastern side of the domain, with width equal to to 1 element.    <Wall mask = \"ALL\">     <Box ny=\"1\"/>     <Box dy=\"-1\"/>     </Wall>  Creates  wall  elements.  mask=\"ALL\"  tells us that all types(also from other groups) will be overwritten by  wall  element type, e.g the collision enabled in  <MRT><Box/></MRT>  will be disabled.    </Geometry>  Closing tag for  <Geometry>  element.    <Model>  Element containing all desired model settings( Params )    <Params Velocity-Inlet=\"0.01\"/>  Setting the value of  Velocity  parameter to 0.01 in  Inlet  element(specified in Geometry).    <Params nu=\"0.05\"/>  Setting the value of  nu  parametere to  0.05 .    </Model>  Closing tag for  <Model>  element. The case is initialized after this tag.    <Solve Iterations=\"5000\"/>  Runs 5000 iterations    <VTK Iterations=\"50\"/>  Specifies that next  <Solve>  element will create an VTK output file every 50 iterations, saving there U and P quantities. By default everything is saved, creating rather large file for bigger cases.    <Solve Iterations=\"1000\"/>  Runs 1000 iterations, creating  VTK  output every 50 iterations, as specified earlier.    </CLBConfig>  Closing tag for  <CLBConfig>  element, finishing whole case file.     All case files start with  <?xml version=\"1.0\"?>  header.  The configuration must be in the  <CLBConfig>  element( <CLBConfig/>  at start and  </CLBConfig>  at the end). In this element the output path and/or prefix can be specified. In example above all files will be saved in  ~TCLB/output  folder, with all the filenames begining with  test  prefix.  <Geometry>  element contains the definition of the domain and objects within it",
            "title": "Case configuration"
        },
        {
            "location": "/3.-Running-simulations/case-basics/#geometry-definition",
            "text": "It's easy to imagine how the geometry elements are defined, by thinking about it as \"painting\". Each geometry element must have 2 parameters \"what are we painting with\" and \"where are we painting\":  <Wall   mask= \"ALL\" > \n   <Box   dx= \"4\"   nx= \"10\"   ny= \"30\" />  </Wall>   In this example \"what\" is  Wall  element and \"where\" is  <Box dx=\"4\" nx=\"10\" ny=\"30\"/> . Defining \"where\" can be done in multiple ways, using  nx , dx , fx  arguments(similarly for  y  and  z ). To understand the geometry definition, you have to know that  box  element by default spans the whole available space. Then by imposing  dx ,  nx  and  fx  attributes you cut it smaller.  dx  sets where the box starts,  nx  sets how  long  is the box in the x direction, and  fx  sets where it ends. Additionally, if you set a negative value it means a value  from the end . The same applies of course to  y  and  z . For example:     Element  Region      <Box nx=\"1\"/>  Left border of the domain    <Box dx=\"-1\"/>  Right border of the domain    <Box dx=\"10\"/>  Everything starting from the 11th element (in x direction)    <Box dx=\"-10\"/>  10 last layers in the x direction    <Box nx=\"10\" ny=\"10\"/>  Square 10x10 in the left bottom corner        Geometry constrain  XML Element       <Box dx=\"4\"/>     <Box dx=\"-4\"/>     <Box dx=\"4\" nx=\"10\"/>     <Box dx=\"4\" fx=\"10\"/>",
            "title": "Geometry definition"
        },
        {
            "location": "/3.-Running-simulations/case-basics/#possible-geometry-primitives",
            "text": "Box  Creates a box with corners defined by  nx / dx / fx  etc. parameters.  Wedge  Creates a wedge within a  box , additionally  direction  must be specified (\"LowerRight\", \"LowerLeft\", \"UpperRight\", \"UpperLeft\") e.g:  <Wedge dx=\"4\" fx=\"10\" dy=\"1\" ny=\"10\" direction=\"LowerRight\"/>  Sphere  Creates a sphere within a  box , can have different dimensions in x/y/z.",
            "title": "Possible geometry primitives"
        },
        {
            "location": "/3.-Running-simulations/case-basics/#node-types",
            "text": "Node type consists of several properties, which are organized in groups. Each node can have noly one property from each group. Additional groups can be",
            "title": "Node Types"
        },
        {
            "location": "/3.-Running-simulations/examples/",
            "text": "Example cases\n\n\nIn this section, a few case files will be presented, along with notes on their structure and usage of most popular functions. All of them(and some others) can be found in \nTCLB/examples\n catalogue(TODO: powrzuca\u0107 te przyk\u0142ady).\n\n\nSimple case\n\n\nBelow is presented a simple 3-Dimensional case, with a ball in the middle of the domain. Velocity inlet is used on one side and pressure outlet on the another one(TODO:Orientacja NEWS). Notice how each dimension of the ball is specified in different way, yet it is still placed exactly in the middle of the domain:\n\n\n<?xml version=\"1.0\"?>\n\n\n<CLBConfig\n \nversion=\n\"2.0\"\n \noutput=\n\"output/test\"\n>\n\n    \n<Geometry\n \nnx=\n\"128\"\n \nny=\n\"128\"\n \nnz=\n\"128\"\n>\n\n        \n<MRT><Box/></MRT>\n\n        \n<WVelocity\n \nname=\n\"Inlet\"\n><Box\n \nnx=\n\"1\"\n/></WVelocity>\n\n        \n<EPressure><Box\n \ndx=\n\"-1\"\n/></EPressure>\n\n        \n<Wall\n \nmask =\n \n\"ALL\"\n>\n\n            \n<Sphere\n \ndx=\n\"54\"\n \nnx=\n\"20\"\n \ndy=\n\"54\"\n \nfy=\n\"74\"\n \ndz=\n\"-74\"\n \nnz=\n\"20\"\n/>\n\n        \n</Wall>\n\n    \n</Geometry>\n\n    \n<Model>\n\n        \n<Params\n \nVelocity-Inlet=\n\"0.1\"\n/>\n\n        \n<Params\n \nnu=\n\"0.05\"\n/>\n\n    \n</Model>\n\n    \n<VTK\n \nIterations=\n\"100\"\n \nwhat =\n \n\"U,P\"\n/>\n\n    \n<Solve\n \nIterations=\n\"1000\"\n/>\n\n\n</CLBConfig>\n\n\n\n\n\n\nNote: It is not necessary to specify \n<Box nx=\"1\">\n for Inlet/Outlet, as it is default value. \n\n\nDefining Units\n\n\n<?xml version=\"1.0\"?>\n\n\n<CLBConfig\n \nversion=\n\"2.0\"\n \noutput=\n\"output/test\"\n>\n\n    \n<Units>\n\n        \n<Params\n \nVelocity=\n\"1m/s\"\n \ngauge=\n\"0.1\"\n/>\n\n        \n<Params\n \nViscosity=\n\"0.01m2/s\"\n \ngauge=\n\"0.01\"\n/>\n\n    \n</Units>\n\n    \n<Geometry\n \nnx=\n\"12.8m\"\n \nny=\n\"12.8m\"\n \nnz=\n\"12.8m\"\n>\n\n        \n<MRT><Box/></MRT>\n\n        \n<WVelocity\n \nname=\n\"Inlet\"\n><Box\n \nnx=\n\"1\"\n/></WVelocity>\n\n        \n<EPressure><Box\n \ndx=\n\"-1\"\n/></EPressure>\n\n        \n<Wall\n \nmask =\n \n\"ALL\"\n>\n\n            \n<Sphere\n \ndx=\n\"54\"\n \nnx=\n\"20\"\n \ndy=\n\"54\"\n \nfy=\n\"74\"\n \ndz=\n\"-74\"\n \nnz=\n\"20\"\n/>\n\n        \n</Wall>\n\n    \n</Geometry>\n\n    \n<Model>\n\n        \n<Params\n \nVelocity-Inlet=\n\"1m/s\"\n/>\n\n        \n<Params\n \nnu=\n\"0.05m2/s\"\n/>\n\n    \n</Model>\n\n    \n<VTK\n \nIterations=\n\"100\"\n \nwhat =\n \n\"U,P\"\n/>\n\n    \n<Solve\n \nIterations=\n\"1000\"\n/>\n\n\n</CLBConfig>\n\n\n\n\n\n\nSets units in such a way that real-world units agree with LB units. Here $1m = 1/0.1=10$, which means that each meter is equal to 10 elements in grid and $0.01[\\frac{m^2}{s}]  = \\frac{0.01}{0.01} = 1 => 1 Iteration[s] = \\frac{1}{10^2}$, so 1 second in real world is equal to 100 iterations. \n\n\nNotice how parameters in \n<Model>\n and \nGeometry\n are specified and how generated case is the same as in previous example.\n\n\nIt is important not to over-construct gauge variables. If \n<Params Size=\"1m\" gauge = \"10\"/>\n would be added to the example above it would result in an error, as too many gauge gauges would be assigned.\n\n\nControl elements\n\n\n<?xml version=\"1.0\"?>\n\n\n<CLBConfig\n \nversion=\n\"2.0\"\n \noutput=\n\"output/test\"\n>\n\n    \n<Geometry\n \nnx=\n\"128\"\n \nny=\n\"128\"\n \nnz=\n\"128\"\n>\n\n        \n<MRT><Box/></MRT>\n\n        \n<WVelocity\n \nname=\n\"Inlet\"\n><Box\n \nnx=\n\"1\"\n/></WVelocity>\n\n        \n<EPressure><Box\n \ndx=\n\"-1\"\n/></EPressure>\n\n        \n<Wall\n \nmask =\n \n\"ALL\"\n>\n\n            \n<Sphere\n \ndx=\n\"54\"\n \nnx=\n\"20\"\n \ndy=\n\"54\"\n \nfy=\n\"74\"\n \ndz=\n\"-74\"\n \nnz=\n\"20\"\n/>\n\n        \n</Wall>\n\n    \n</Geometry>\n\n    \n<Model>\n\n        \n<Params\n \nVelocity-Inlet=\n\"0.1\"\n\n                \nnu=\n\"0.05\"\n/>\n\n    \n</Model>\n\n    \n<VTK\n \nIterations=\n\"100\"\n \nwhat =\n \n\"U,P\"\n/>\n\n    \n<Solve\n \nIterations=\n\"1000\"\n/>\n\n    \n<Control\n \nIterations=\n\"1000\"\n>\n\n        \n<CSV\n \nfile=\n\"file.csv\"\n \nTime=\n\"x*1000\"\n>\n\n        \n<Params\n \nVelocity=\n\"y*0.02+0.05\"\n/>\n\n    \n</CSV>\n\n\n</Control>\n\n\n</CLBConfig>\n\n\n\n\n\n\nChanges \nVelocity\n according to the contents of \nfile.csv\n. Here column 'x' is used to compute time and 'y' is used to calculate 'Velocity' value. Notice also that \nVelocity\n and \nnu\n parameters are given in \n<Model>\n container, without the need of creating separate tags for each parameter.\n\n\nImporting geometry\n\n\nIt is possible to import geometry from \n.stl\n files. It can be done by using \n<STL file=\"path_to_file\"/>\n. Additional arguments allow user to resize, rotate, and translate geometry. ParaView(TODO: podlinkowa\u0107 odpowiedni podrozdzia\u0142) can open \n.stl\n files and provides a fast way of estabilishing correct import parameters. Imported geometry can be used along with geometry primitives, shown in other examples.\n\n\n<?xml version=\"1.0\"?>\n\n\n<CLBConfig\n \nversion=\n\"2.0\"\n \noutput=\n\"output/\"\n>\n\n        \n<Units>\n\n                \n<Params\n \nsize=\n\"1m\"\n \ngauge=\n\"70\"\n \n/>\n\n                \n<Params\n \nnu=\n\"1.4e-5m2/s\"\n \ngauge=\n\"0.0001\"\n/>\n  (TODO: nie dzia\u0142a jak usunie wpisze si\u0119 w jednym \n<Params/>\n - dlaczego?)\n        \n</Units>\n\n        \n<Geometry\n \nnx=\n\"6m\"\n \nny=\n\"1m\"\n \nnz=\n\"1m\"\n>\n\n                \n<MRT><Box/></MRT>\n\n                \n<WVelocity><Inlet/></WVelocity>\n\n                \n<EPressure><Outlet/></EPressure>\n\n                \n<Wall\n \nmask=\n\"ALL\"\n>\n\n                        \n<Channel/>\n\n                        \n<STL\n \nfile=\n\"example/data/ahmed.stl\"\n \nscale=\n\"1mm\"\n \nXrot=\n\"-90d\"\n \nx=\n\"70\"\n \ny=\n\"5cm\"\n \nz=\n\"0.5m\"\n \nside =\n \n\"out\"\n/>\n\n                \n</Wall>\n\n        \n</Geometry>\n\n        \n<Model>\n\n                \n<Params\n \nVelocity=\n\"0.01\"\n/>\n\n        \n</Model>\n\n        \n<VTK\n \nIterations=\n\"1000\"\n/>\n\n        \n<Solve\n \nIterations=\n\"10000\"\n/>\n\n\n</CLBConfig>\n\n\n\n\n\n\n\n\n\n\n\n\nAttribute\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nscale\n\n\nUsed to resize \n.stl\n file, can be specified with units, or as a fraction(e.g. 1/100).\n\n\n\n\n\n\nXrot,Yrot,Zrot\n\n\nRotates geometry aroun X/Y/Z axis by given amount in degrees.\n\n\n\n\n\n\nx,y,z\n\n\nTranslates geometry along X/Y/Z axis  by given amount.  Distance can be specified in real-world units or number of grid points(without unit).\n\n\n\n\n\n\nside\n\n\nChose if geometry will be treated as wall, possible arguments: \n\"in\"\n,\n\"out\"\n\n\n\n\n\n\n\n\nSymmetry\n\n\nTODO:ustali\u0107 jak by\u0142o z przesuni\u0119ciem przy symetri, czy ma ona by\u0107 na ostatnim elemencie cia\u0142a czy jedno za nim. \n\n\nSynthetic Turbulence\n\n\nA synthetic turbulence generator is implemented in TCLB solver. It is based on modified von Karman-Pao spectrum(\nBailly and Juve, 1999\n) \n\n\n<?xml version=\"1.0\"?>\n\n\n<CLBConfig\n \nversion=\n\"2.0\"\n \noutput=\n\"output/test\"\n>\n\n    \n<Units>\n\n        \n<Params\n \nVelocity=\n\"1m/s\"\n \ngauge=\n\"0.1\"\n/>\n\n        \n<Params\n \nViscosity=\n\"0.01m2/s\"\n \ngauge=\n\"0.01\"\n/>\n\n    \n</Units>\n\n    \n<Geometry\n \nnx=\n\"128\"\n \nny=\n\"128\"\n \nnz=\n\"128\"\n>\n\n        \n<MRT><Box/></MRT>\n\n        \n<WVelocityTurbulent\n \nname=\n\"Inlet\"\n><Box\n \nnx=\n\"1\"\n/></WVelocityTurbulent>\n\n        \n<EPressure><Box\n \ndx=\n\"-1\"\n/></EPressure>\n\n        \n<Wall\n \nmask =\n \n\"ALL\"\n>\n\n            \n<Sphere\n \ndx=\n\"54\"\n \nnx=\n\"20\"\n \ndy=\n\"54\"\n \nfy=\n\"74\"\n \ndz=\n\"-74\"\n \nnz=\n\"20\"\n/>\n\n        \n</Wall>\n\n    \n</Geometry>\n\n    \n<Model>\n\n        \n<Params\n \nVelocity-Inlet=\n\"1m/s\"\n\n                \nnu=\n\"0.05m2/s\"\n\n                \nTurbulence=\n\"0.1m/s\"\n\n                \nMainWaveLength=\n\"10m\"\n\n                \nDiffusionWaveLength =\n \n\"100m\"\n/>\n\n    \n</Model>\n\n    \n<VTK\n \nIterations=\n\"100\"\n \nwhat =\n \n\"U,P\"\n/>\n\n    \n<Solve\n \nIterations=\n\"1000\"\n/>\n\n\n</CLBConfig>\n\n\n\n\n\n\nIt is important to remember that in order to use implemented turbulence generator it is required to change \nWVelocity\n to \nWVelocityTurbulent\n, e.g.: \n<WVelocityTurbulent><Box nx=\"1\"/></WVelocityTurbulent>\n. The generator has more customizable attributes, given in table below, but most of them is not required for generator to work. Only the mandatory ones are provided in example above.\n\n\n\n\n\n\n\n\nAttribute\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nModes\n\n\nNumber of harmonic modes to generate for the turbulence, default '100'.\n\n\n\n\n\n\nSpread\n\n\nThe way to divide the spectrum to a finite number of modes. Possible values: \nEven\n, \nLog\n, \nQuantile\n. Default is \nEven\n.\n\n\n\n\n\n\nSpectrum\n\n\nType of spectrum to use, possible values: \nVon Karman\n, \nOne Wave\n. Default is \nVon Karman\n.\n\n\n\n\n\n\nMainWaveLength\n\n\nMain wave-length in the Von Karman spectrum.\n\n\n\n\n\n\nDiffusionWaveLength\n\n\nDiffusion scale wave-length in the Von Karman spectrum.\n\n\n\n\n\n\nMinWaveLength\n\n\nMinimal space wave-length. TODO:Default value\n\n\n\n\n\n\nMaxWaveLength\n\n\nMaximal space wave-length.\n\n\n\n\n\n\nTimeWaveLength\n\n\nTime wave-length of the syntetic turbulence.\n\n\n\n\n\n\n\n\nIt is possible to specify \nWaveLength\n parameters in terms of \nWaveNumber\n or \nWaveFrequency\n.",
            "title": "Examples"
        },
        {
            "location": "/3.-Running-simulations/examples/#example-cases",
            "text": "In this section, a few case files will be presented, along with notes on their structure and usage of most popular functions. All of them(and some others) can be found in  TCLB/examples  catalogue(TODO: powrzuca\u0107 te przyk\u0142ady).",
            "title": "Example cases"
        },
        {
            "location": "/3.-Running-simulations/examples/#simple-case",
            "text": "Below is presented a simple 3-Dimensional case, with a ball in the middle of the domain. Velocity inlet is used on one side and pressure outlet on the another one(TODO:Orientacja NEWS). Notice how each dimension of the ball is specified in different way, yet it is still placed exactly in the middle of the domain:  <?xml version=\"1.0\"?>  <CLBConfig   version= \"2.0\"   output= \"output/test\" > \n     <Geometry   nx= \"128\"   ny= \"128\"   nz= \"128\" > \n         <MRT><Box/></MRT> \n         <WVelocity   name= \"Inlet\" ><Box   nx= \"1\" /></WVelocity> \n         <EPressure><Box   dx= \"-1\" /></EPressure> \n         <Wall   mask =   \"ALL\" > \n             <Sphere   dx= \"54\"   nx= \"20\"   dy= \"54\"   fy= \"74\"   dz= \"-74\"   nz= \"20\" /> \n         </Wall> \n     </Geometry> \n     <Model> \n         <Params   Velocity-Inlet= \"0.1\" /> \n         <Params   nu= \"0.05\" /> \n     </Model> \n     <VTK   Iterations= \"100\"   what =   \"U,P\" /> \n     <Solve   Iterations= \"1000\" />  </CLBConfig>   Note: It is not necessary to specify  <Box nx=\"1\">  for Inlet/Outlet, as it is default value.",
            "title": "Simple case"
        },
        {
            "location": "/3.-Running-simulations/examples/#defining-units",
            "text": "<?xml version=\"1.0\"?>  <CLBConfig   version= \"2.0\"   output= \"output/test\" > \n     <Units> \n         <Params   Velocity= \"1m/s\"   gauge= \"0.1\" /> \n         <Params   Viscosity= \"0.01m2/s\"   gauge= \"0.01\" /> \n     </Units> \n     <Geometry   nx= \"12.8m\"   ny= \"12.8m\"   nz= \"12.8m\" > \n         <MRT><Box/></MRT> \n         <WVelocity   name= \"Inlet\" ><Box   nx= \"1\" /></WVelocity> \n         <EPressure><Box   dx= \"-1\" /></EPressure> \n         <Wall   mask =   \"ALL\" > \n             <Sphere   dx= \"54\"   nx= \"20\"   dy= \"54\"   fy= \"74\"   dz= \"-74\"   nz= \"20\" /> \n         </Wall> \n     </Geometry> \n     <Model> \n         <Params   Velocity-Inlet= \"1m/s\" /> \n         <Params   nu= \"0.05m2/s\" /> \n     </Model> \n     <VTK   Iterations= \"100\"   what =   \"U,P\" /> \n     <Solve   Iterations= \"1000\" />  </CLBConfig>   Sets units in such a way that real-world units agree with LB units. Here $1m = 1/0.1=10$, which means that each meter is equal to 10 elements in grid and $0.01[\\frac{m^2}{s}]  = \\frac{0.01}{0.01} = 1 => 1 Iteration[s] = \\frac{1}{10^2}$, so 1 second in real world is equal to 100 iterations.   Notice how parameters in  <Model>  and  Geometry  are specified and how generated case is the same as in previous example.  It is important not to over-construct gauge variables. If  <Params Size=\"1m\" gauge = \"10\"/>  would be added to the example above it would result in an error, as too many gauge gauges would be assigned.",
            "title": "Defining Units"
        },
        {
            "location": "/3.-Running-simulations/examples/#control-elements",
            "text": "<?xml version=\"1.0\"?>  <CLBConfig   version= \"2.0\"   output= \"output/test\" > \n     <Geometry   nx= \"128\"   ny= \"128\"   nz= \"128\" > \n         <MRT><Box/></MRT> \n         <WVelocity   name= \"Inlet\" ><Box   nx= \"1\" /></WVelocity> \n         <EPressure><Box   dx= \"-1\" /></EPressure> \n         <Wall   mask =   \"ALL\" > \n             <Sphere   dx= \"54\"   nx= \"20\"   dy= \"54\"   fy= \"74\"   dz= \"-74\"   nz= \"20\" /> \n         </Wall> \n     </Geometry> \n     <Model> \n         <Params   Velocity-Inlet= \"0.1\" \n                 nu= \"0.05\" /> \n     </Model> \n     <VTK   Iterations= \"100\"   what =   \"U,P\" /> \n     <Solve   Iterations= \"1000\" /> \n     <Control   Iterations= \"1000\" > \n         <CSV   file= \"file.csv\"   Time= \"x*1000\" > \n         <Params   Velocity= \"y*0.02+0.05\" /> \n     </CSV>  </Control>  </CLBConfig>   Changes  Velocity  according to the contents of  file.csv . Here column 'x' is used to compute time and 'y' is used to calculate 'Velocity' value. Notice also that  Velocity  and  nu  parameters are given in  <Model>  container, without the need of creating separate tags for each parameter.",
            "title": "Control elements"
        },
        {
            "location": "/3.-Running-simulations/examples/#importing-geometry",
            "text": "It is possible to import geometry from  .stl  files. It can be done by using  <STL file=\"path_to_file\"/> . Additional arguments allow user to resize, rotate, and translate geometry. ParaView(TODO: podlinkowa\u0107 odpowiedni podrozdzia\u0142) can open  .stl  files and provides a fast way of estabilishing correct import parameters. Imported geometry can be used along with geometry primitives, shown in other examples.  <?xml version=\"1.0\"?>  <CLBConfig   version= \"2.0\"   output= \"output/\" > \n         <Units> \n                 <Params   size= \"1m\"   gauge= \"70\"   /> \n                 <Params   nu= \"1.4e-5m2/s\"   gauge= \"0.0001\" />   (TODO: nie dzia\u0142a jak usunie wpisze si\u0119 w jednym  <Params/>  - dlaczego?)\n         </Units> \n         <Geometry   nx= \"6m\"   ny= \"1m\"   nz= \"1m\" > \n                 <MRT><Box/></MRT> \n                 <WVelocity><Inlet/></WVelocity> \n                 <EPressure><Outlet/></EPressure> \n                 <Wall   mask= \"ALL\" > \n                         <Channel/> \n                         <STL   file= \"example/data/ahmed.stl\"   scale= \"1mm\"   Xrot= \"-90d\"   x= \"70\"   y= \"5cm\"   z= \"0.5m\"   side =   \"out\" /> \n                 </Wall> \n         </Geometry> \n         <Model> \n                 <Params   Velocity= \"0.01\" /> \n         </Model> \n         <VTK   Iterations= \"1000\" /> \n         <Solve   Iterations= \"10000\" />  </CLBConfig>      Attribute  Comment      scale  Used to resize  .stl  file, can be specified with units, or as a fraction(e.g. 1/100).    Xrot,Yrot,Zrot  Rotates geometry aroun X/Y/Z axis by given amount in degrees.    x,y,z  Translates geometry along X/Y/Z axis  by given amount.  Distance can be specified in real-world units or number of grid points(without unit).    side  Chose if geometry will be treated as wall, possible arguments:  \"in\" , \"out\"",
            "title": "Importing geometry"
        },
        {
            "location": "/3.-Running-simulations/examples/#symmetry",
            "text": "TODO:ustali\u0107 jak by\u0142o z przesuni\u0119ciem przy symetri, czy ma ona by\u0107 na ostatnim elemencie cia\u0142a czy jedno za nim.",
            "title": "Symmetry"
        },
        {
            "location": "/3.-Running-simulations/examples/#synthetic-turbulence",
            "text": "A synthetic turbulence generator is implemented in TCLB solver. It is based on modified von Karman-Pao spectrum( Bailly and Juve, 1999 )   <?xml version=\"1.0\"?>  <CLBConfig   version= \"2.0\"   output= \"output/test\" > \n     <Units> \n         <Params   Velocity= \"1m/s\"   gauge= \"0.1\" /> \n         <Params   Viscosity= \"0.01m2/s\"   gauge= \"0.01\" /> \n     </Units> \n     <Geometry   nx= \"128\"   ny= \"128\"   nz= \"128\" > \n         <MRT><Box/></MRT> \n         <WVelocityTurbulent   name= \"Inlet\" ><Box   nx= \"1\" /></WVelocityTurbulent> \n         <EPressure><Box   dx= \"-1\" /></EPressure> \n         <Wall   mask =   \"ALL\" > \n             <Sphere   dx= \"54\"   nx= \"20\"   dy= \"54\"   fy= \"74\"   dz= \"-74\"   nz= \"20\" /> \n         </Wall> \n     </Geometry> \n     <Model> \n         <Params   Velocity-Inlet= \"1m/s\" \n                 nu= \"0.05m2/s\" \n                 Turbulence= \"0.1m/s\" \n                 MainWaveLength= \"10m\" \n                 DiffusionWaveLength =   \"100m\" /> \n     </Model> \n     <VTK   Iterations= \"100\"   what =   \"U,P\" /> \n     <Solve   Iterations= \"1000\" />  </CLBConfig>   It is important to remember that in order to use implemented turbulence generator it is required to change  WVelocity  to  WVelocityTurbulent , e.g.:  <WVelocityTurbulent><Box nx=\"1\"/></WVelocityTurbulent> . The generator has more customizable attributes, given in table below, but most of them is not required for generator to work. Only the mandatory ones are provided in example above.     Attribute  Comment      Modes  Number of harmonic modes to generate for the turbulence, default '100'.    Spread  The way to divide the spectrum to a finite number of modes. Possible values:  Even ,  Log ,  Quantile . Default is  Even .    Spectrum  Type of spectrum to use, possible values:  Von Karman ,  One Wave . Default is  Von Karman .    MainWaveLength  Main wave-length in the Von Karman spectrum.    DiffusionWaveLength  Diffusion scale wave-length in the Von Karman spectrum.    MinWaveLength  Minimal space wave-length. TODO:Default value    MaxWaveLength  Maximal space wave-length.    TimeWaveLength  Time wave-length of the syntetic turbulence.     It is possible to specify  WaveLength  parameters in terms of  WaveNumber  or  WaveFrequency .",
            "title": "Synthetic Turbulence"
        },
        {
            "location": "/3.-Running-simulations/units/",
            "text": "Units\n provide a way to connect LB units to real ones. Currently, there are several units defined in the code. There are \n\n\nDefined units:\n\n\n\n\n\n\n\n\nUnit\n\n\nMeaning\n\n\n\n\n\n\n\n\n\n\nm\n\n\nmeter\n\n\n\n\n\n\ns\n\n\nsecond\n\n\n\n\n\n\nkg\n\n\nkilogram\n\n\n\n\n\n\nK\n\n\nKelvin\n\n\n\n\n\n\nA\n\n\nAmper\n\n\n\n\n\n\nt\n\n\nSecond time scale, needed in EOF in steady state simulations\n\n\n\n\n\n\nx,y,z\n\n\nArtificial units(?)\n\n\n\n\n\n\n\n\nDerrived units:\n\n\n\n\n\n\n\n\nUnit\n\n\nDefinition\n\n\nMeaning\n\n\n\n\n\n\n\n\n\n\nN\n\n\n1kgm/s2\n\n\nNewton\n\n\n\n\n\n\nPa\n\n\n1N/m2\n\n\nPascal\n\n\n\n\n\n\nJ\n\n\n1Nm\n\n\nJoul\n\n\n\n\n\n\nW\n\n\n1J/s\n\n\nWatt\n\n\n\n\n\n\nV\n\n\n1kgm2/t3/A\n\n\nVolt\n\n\n\n\n\n\nC\n\n\n1tA\n\n\nCoulomb\n\n\n\n\n\n\n\n\nPrefixes:\n\n\n\n\n\n\n\n\nPrefix\n\n\nDefinition\n\n\nMeaning\n\n\n\n\n\n\n\n\n\n\nnm\n\n\n1e-9m\n\n\nnanometre\n\n\n\n\n\n\num\n\n\n1e-6m\n\n\nmicrometre\n\n\n\n\n\n\ncm\n\n\n1e-2m\n\n\ncentimetre\n\n\n\n\n\n\nkm\n\n\n1e+3m\n\n\nkilometre\n\n\n\n\n\n\nh\n\n\n3600s\n\n\nhour\n\n\n\n\n\n\nns\n\n\n1e-9s\n\n\nnanosecond\n\n\n\n\n\n\nus\n\n\n1e-6s\n\n\nmicrosecond\n\n\n\n\n\n\nms\n\n\n1e-3s\n\n\nmilisecond\n\n\n\n\n\n\nmg\n\n\n1e-6s\n\n\nmiligram\n\n\n\n\n\n\ng\n\n\n1e-3s\n\n\ngram\n\n\n\n\n\n\nAn\n\n\n6.02e+23\n\n\nAvogadro number\n\n\n\n\n\n\nd\n\n\natan(1.)*4./180\n\n\ndegree\n\n\n\n\n\n\n\n\nDefining units\n\n\nIt is possible to define new units\n\n\nUsing gauge",
            "title": "Units"
        },
        {
            "location": "/3.-Running-simulations/units/#defined-units",
            "text": "Unit  Meaning      m  meter    s  second    kg  kilogram    K  Kelvin    A  Amper    t  Second time scale, needed in EOF in steady state simulations    x,y,z  Artificial units(?)",
            "title": "Defined units:"
        },
        {
            "location": "/3.-Running-simulations/units/#derrived-units",
            "text": "Unit  Definition  Meaning      N  1kgm/s2  Newton    Pa  1N/m2  Pascal    J  1Nm  Joul    W  1J/s  Watt    V  1kgm2/t3/A  Volt    C  1tA  Coulomb",
            "title": "Derrived units:"
        },
        {
            "location": "/3.-Running-simulations/units/#prefixes",
            "text": "Prefix  Definition  Meaning      nm  1e-9m  nanometre    um  1e-6m  micrometre    cm  1e-2m  centimetre    km  1e+3m  kilometre    h  3600s  hour    ns  1e-9s  nanosecond    us  1e-6s  microsecond    ms  1e-3s  milisecond    mg  1e-6s  miligram    g  1e-3s  gram    An  6.02e+23  Avogadro number    d  atan(1.)*4./180  degree",
            "title": "Prefixes:"
        },
        {
            "location": "/3.-Running-simulations/units/#defining-units",
            "text": "It is possible to define new units",
            "title": "Defining units"
        },
        {
            "location": "/3.-Running-simulations/units/#using-gauge",
            "text": "",
            "title": "Using gauge"
        },
        {
            "location": "/3.-Running-simulations/working-remotely/",
            "text": "Working on a remote host\n\n\nCopying files\n\n\nTo copy files you can use the \nscp\n tool:\n\n\nscp user@host:path/file.ext . \n# copy to host\n\nscp file.ext user@host:path/  \n# copy from host\n\n\n\n\n\n\nTo copy whole directory, like with \ncp\n you can use the \n-r\n option.\n\n\nFrequently one needs to copy only the files which changed. This can be\nachived using \nrsunc\n:\n\n\nrsync -az user@host:path/ .   \n# copy new files from host\n\n\n\n\n\n\nThis will synchronize the \npath/\n directory with the current directory.",
            "title": "Working on a remote host"
        },
        {
            "location": "/3.-Running-simulations/working-remotely/#working-on-a-remote-host",
            "text": "",
            "title": "Working on a remote host"
        },
        {
            "location": "/3.-Running-simulations/working-remotely/#copying-files",
            "text": "To copy files you can use the  scp  tool:  scp user@host:path/file.ext .  # copy to host \nscp file.ext user@host:path/   # copy from host   To copy whole directory, like with  cp  you can use the  -r  option.  Frequently one needs to copy only the files which changed. This can be\nachived using  rsunc :  rsync -az user@host:path/ .    # copy new files from host   This will synchronize the  path/  directory with the current directory.",
            "title": "Copying files"
        },
        {
            "location": "/4.-Post-processing/catalyst/",
            "text": "Catalyst\n\n\nTODO",
            "title": "Catalyst"
        },
        {
            "location": "/4.-Post-processing/catalyst/#catalyst",
            "text": "TODO",
            "title": "Catalyst"
        },
        {
            "location": "/4.-Post-processing/paraview/",
            "text": "Results of the calculations can be analyzed using \nParaView\n, an open-source, multi-platform data analysis and visualization application. It can be easily installed by running \n\n\nsudo apt-get install paraview\n\n\n\n\n\nOr, if you want to install newer version, it can be downloaded \nhere\n.\n\n\nParaview can open most of the files generated by the TCLB solver(\n.pvti\n,\n.csv\n) or required to run calculations(\n.stl\n). \n\n\n\n\n\n\n\n\nFile extension\n\n\nComment\n\n\n\n\n\n\n\n\n\n\n.vti\n\n\nVTK files generated by the \n<VTK>\n callback in \n.xml\n case files. Each solver thread creates its own \n.vti\n file when saving them. That's why (usually) you do not want to open files with this extension.\n\n\n\n\n\n\n.pvti\n\n\nFiles linking separate \n.vti\n files, opening them will allow navigation through whole domain/time.\n\n\n\n\n\n\n.csv\n\n\nLog files generated by the \n<Log>\n callback in \n.xml\n case files. Containing all the values of Settings and Globals defined in \nDynamics.R\n TODO:podlinkowa\u0107\n\n\n\n\n\n\n.xml\n\n\nConfiguration files, containing \n.xml\n case file and information about code version/compilation settings.\n\n\n\n\n\n\n.stl\n\n\nGeometry files.\n\n\n\n\n\n\n\n\nLoading file\n\n\nParaView can be started either from the start menu or the terminal. When using the latter it is possible to specify which file should be opened:\n\n\nparaview output/d2q9_poiseuille_VTK_P00_..pvti\n\n\n\n\n\nFile(s) can be opened by right clicking on icon in the left-top corner or using \nctrl+o\n, to choose multiple files hold \nctrl\n while picking. After chosing the file, click \nApply\n in the properties menu to load it. It is possible to chose at this point which data to load, which is especially usefull when analysing bigger cases. \n\n\n \n \n\n\nNote: What is displayed here depends on what is defined in Dynamics.R\n\n\nChanging display options\n\n\nAfter loading file you will see only the outline of the domain, as this is the default display option and default displayed data is 'Solid Color'. You can change it by choosing another option from the list.Let's try viewing pressure in the middle of the domain - to do this we need to switch display option to \nSlice\n and displayed data to \nP\n. (see images below)\n\n\n \n \n\n\n \n \n\n\nAfter that it should look like this:\n\n \n \n\n\nNotice how the presented colours are only on the one side of the spectrum. Spectrum can be rescaled either automatically to data range, or by manually providing the values.\n\n\n \n \n TODO: moze opisa\u0107 kt\u00f3ry to kt\u00f3ry\n\n\nIt is possible that sometimes the automatic rescaling is not working as expected, it is usually caused by elements inside/near inlet/outlet which have  enourmously high/low values. The same case after rescaling:\n\n\n \n \n\n\nUsing the \nSlice\n display option we can choose where to slice in the \nProperties\n menu:\n\n\n \n \n\n\nQ-Criterion\n\n\nFind \nGradient Of Unstructured DataSet\n in \nFilters\n menu( or use built in search function - \nctrl+spacebar\n). Chose velocity array(\nU\n) as \nScalar Array\n in \nProperties\n menu and mark the box labeled \nCompute QCriterion\n. You will now be able to display calculated \nQ-criterion\n by switching displayed array.\n\n \n  \n \n\n\nThreshold\n\n\nFind (\nctrl+spacebar\n) \nThreshold\n function, then pick which values will be checked. For example, to separate studied object from the rest of the flow pick \nBOUNDARY\n(it's equal to 1 for \nWall\n nodes and 0 for flow nodes). \n\n\n \n  \n \n\n\nIf you want to get rid of the walls you can use \nExtract  Subset\n filter to pick a portion of domain without walls and apply threshold later.\n\n\n \n \n\n\nPlot Over line\n\n\nAfter picking \nPlot Over Line\n filter you can either specify the end points in \nProperties\n menu or manipulute them using mouse. \n\n\n \n \n\n\nAfter clicking \nApply\n a new window will open with the plot. You can choose wchich variables to use in \nProperties\n menu(along other options).\n\n\n \n \n\n\nViewing STL geometry\n\n\nYou can use ParaView to view \n.stl\n files. This comes in handy when  you need to import \n.stl\n geometry in your case, but don't know which parameters to use. By loading \n.stl\n along with you generated domain(in \n.pvti\n file) \n.stl\n geometry can be quickly fitted to your domain. For this purpose use \nTransforming\n in \nProperties\n menu. The same values should work while loading \n.stl\n in \n.xml\n file.",
            "title": "Analyzing Results with ParaView"
        },
        {
            "location": "/4.-Post-processing/paraview/#loading-file",
            "text": "ParaView can be started either from the start menu or the terminal. When using the latter it is possible to specify which file should be opened:  paraview output/d2q9_poiseuille_VTK_P00_..pvti  File(s) can be opened by right clicking on icon in the left-top corner or using  ctrl+o , to choose multiple files hold  ctrl  while picking. After chosing the file, click  Apply  in the properties menu to load it. It is possible to chose at this point which data to load, which is especially usefull when analysing bigger cases.        Note: What is displayed here depends on what is defined in Dynamics.R",
            "title": "Loading file"
        },
        {
            "location": "/4.-Post-processing/paraview/#changing-display-options",
            "text": "After loading file you will see only the outline of the domain, as this is the default display option and default displayed data is 'Solid Color'. You can change it by choosing another option from the list.Let's try viewing pressure in the middle of the domain - to do this we need to switch display option to  Slice  and displayed data to  P . (see images below)            After that it should look like this:      Notice how the presented colours are only on the one side of the spectrum. Spectrum can be rescaled either automatically to data range, or by manually providing the values.       TODO: moze opisa\u0107 kt\u00f3ry to kt\u00f3ry  It is possible that sometimes the automatic rescaling is not working as expected, it is usually caused by elements inside/near inlet/outlet which have  enourmously high/low values. The same case after rescaling:       Using the  Slice  display option we can choose where to slice in the  Properties  menu:",
            "title": "Changing display options"
        },
        {
            "location": "/4.-Post-processing/paraview/#q-criterion",
            "text": "Find  Gradient Of Unstructured DataSet  in  Filters  menu( or use built in search function -  ctrl+spacebar ). Chose velocity array( U ) as  Scalar Array  in  Properties  menu and mark the box labeled  Compute QCriterion . You will now be able to display calculated  Q-criterion  by switching displayed array.",
            "title": "Q-Criterion"
        },
        {
            "location": "/4.-Post-processing/paraview/#threshold",
            "text": "Find ( ctrl+spacebar )  Threshold  function, then pick which values will be checked. For example, to separate studied object from the rest of the flow pick  BOUNDARY (it's equal to 1 for  Wall  nodes and 0 for flow nodes).           If you want to get rid of the walls you can use  Extract  Subset  filter to pick a portion of domain without walls and apply threshold later.",
            "title": "Threshold"
        },
        {
            "location": "/4.-Post-processing/paraview/#plot-over-line",
            "text": "After picking  Plot Over Line  filter you can either specify the end points in  Properties  menu or manipulute them using mouse.        After clicking  Apply  a new window will open with the plot. You can choose wchich variables to use in  Properties  menu(along other options).",
            "title": "Plot Over line"
        },
        {
            "location": "/4.-Post-processing/paraview/#viewing-stl-geometry",
            "text": "You can use ParaView to view  .stl  files. This comes in handy when  you need to import  .stl  geometry in your case, but don't know which parameters to use. By loading  .stl  along with you generated domain(in  .pvti  file)  .stl  geometry can be quickly fitted to your domain. For this purpose use  Transforming  in  Properties  menu. The same values should work while loading  .stl  in  .xml  file.",
            "title": "Viewing STL geometry"
        },
        {
            "location": "/4.-Post-processing/particles/",
            "text": "Post-processing of particle data\n\n\nESYS-Particle exports snapshot, which have to be transformed to the VTK\nformat. You can use the provided tool \ndump2vtk\n:\n\n\ndump2vtk -rot -i flow_data -o flow_data_vtk -t \n0\n \n200\n \n100\n\n\n\n\n\n\nThe options of the tool are:\n\n\n\n\n\n\n\n\nOption\n\n\nComment\n\n\n\n\n\n\n\n\n\n\n-rot\n\n\nThis option \nhave to be\n used if the simulation used RotParticles\n\n\n\n\n\n\n-i [fileprefix]\n\n\nSpecify the prefix of the snapshots (what was provided in \nfileNamePrefix\n in \nCheckPointPrms\n)\n\n\n\n\n\n\n-o [fileprefix]\n\n\nThe prefix for the created VTK files\n\n\n\n\n\n\n-t [i0] [di] [n]\n\n\nProvide the iteration number of the first snapshot \ni0\n, the number of iterations between snapshot \ndi\n, and the number of snapshots \nn\n\n\n\n\n\n\n-mesh\n\n\nExport the mesh in the VTK",
            "title": "Post-processing of particle data"
        },
        {
            "location": "/4.-Post-processing/particles/#post-processing-of-particle-data",
            "text": "ESYS-Particle exports snapshot, which have to be transformed to the VTK\nformat. You can use the provided tool  dump2vtk :  dump2vtk -rot -i flow_data -o flow_data_vtk -t  0   200   100   The options of the tool are:     Option  Comment      -rot  This option  have to be  used if the simulation used RotParticles    -i [fileprefix]  Specify the prefix of the snapshots (what was provided in  fileNamePrefix  in  CheckPointPrms )    -o [fileprefix]  The prefix for the created VTK files    -t [i0] [di] [n]  Provide the iteration number of the first snapshot  i0 , the number of iterations between snapshot  di , and the number of snapshots  n    -mesh  Export the mesh in the VTK",
            "title": "Post-processing of particle data"
        },
        {
            "location": "/5.-Model-development/basics/",
            "text": "TODO: Doda\u0107 rozwi\u0105zane tutoriale, sprawdzi\u0107 by dzia\u0142a\u0142o wszystko.\n\n\nBasic information needed to develop models will apear here. \n\n\nEvery model in TCLB is defined by a subdirectory of \nmodels\n.\nThe \nconf.mk\n file stores some additional settings for a model, but it also tells TCLB that this directory is in fact a model.\n\n\nGeneral information\n\n\nEach model consit\n2 most important files: Dynamics.c and Dynamics.R, what goes where(logic, settings, quantities)\n\n\nconf.mk\n\n\nADJOINT = 1\n\n\nThis file contains information needed during compilation. It allows compilation of diferent versions of a model(from the same \nDynamics.c\n and \nDynamics.R\n). To do so you need to set \nOPT\n variable in \nconf.mk\n first. E.g:\n\n\nOPT\n=\n\"(A+B)*C\"\n\n\n\n\n\n\nThis will add three optional functionalities: A,B, and C - called Options.  The summation means that two options are exclusive (you can have A or B), and multiplication allows for their combination (you can have A, C and both). The mechanism allows to compile a model for all the resulting combinations. The name of the model is created by adding the option after an underscore. In this case:\n\n\n\n\n\n\n\n\nModel\n\n\nA\n\n\nB\n\n\nC\n\n\n\n\n\n\n\n\n\n\nmodel\n\n\n\n\n\n\n\n\n\n\n\n\nmodel_A\n\n\nx\n\n\n\n\n\n\n\n\n\n\nmodel_B\n\n\n\n\nx\n\n\n\n\n\n\n\n\nmodel_C\n\n\n\n\n\n\nx\n\n\n\n\n\n\nmodel_A_C\n\n\nx\n\n\n\n\nx\n\n\n\n\n\n\nmodel_B_C\n\n\n\n\nx\n\n\nx\n\n\n\n\n\n\n\n\nAll these models are compiled from the same Dynamics.R and Dynamics.c, but with different options set to TRUE or FALSE in the Options R variable. One can switch on and off parts of the code with:\n\n\nif\n \n(\nOptions\n$\nA\n)\n \n{\n\n\n# code for option A\n\n\n}\n \nelse\n \n{\n\n\n# code without option A\n\n\n}\n\n\n\n\n\n\nor in pure C/C++, with:\n\n\n#ifdef OPTIONS_A\n\n\n// code for option A\n\n\n#else\n\n\n// code without option A\n\n\n#endif\n\n\n\n\n\n\nDynamics.R\n\n\nIn this file all \n\n\n\n\nAddField\n - Variables (for instance flow-variables, displacements, etc) that are stored in all mesh nodes. \nDynamics.c\n can access these fields with an offset (e.g. field_name(-1,0)). If the access pattern is repeating you can define a density that predefines a specific offset. Such densities are gathered, and the resulting memory access is optimized.\n\n\n\n\nAddField\n(\n name\n=\n\"Name\"\n,\n dx\n=\nc\n(\n-1\n,\n0\n),\n dy\n=\nc\n(\n0\n,\n0\n),\n dz\n=\nc\n(\n-1\n,\n1\n),\n comment\n=\n'Some comment'\n)\n\n\n\n\n\n\nIf there is -1,1 access pattern you can use a shortcut:\n\n\nAddField\n(\nname\n=\n\"u\"\n,\n dx\n=\nc\n(\n-1\n,\n1\n),\n dy\n=\nc\n(\n-1\n,\n1\n))\n \n\n# same as \n\nAddField\n(\nname\n=\n\"u\"\n,\n stencil2d\n=\n1\n)\n\n\n\n\n\n\n\n\nAddDensity\n - Variables loaded from \nFields\n with a predefined offset: \n\n\n\n\nAddDensity\n(\n name\n=\n\"Name\"\n,\n dx\n=\n1\n,\n dy\n=\n0\n,\n dz\n=\n0\n,\n comment\n=\n'Some comment'\n)\n\n\n\n\n\n\nIt is possible to automate the process and add \nDensity\n for each possible direction(here for d3q27 model):\n\n\nx \n=\n \nc\n(\n0\n,\n1\n,\n-1\n);\n\nP \n=\n \nexpand.grid\n(\nx\n=\n0\n:\n2\n,\ny\n=\n0\n:\n2\n,\nz\n=\n0\n:\n2\n)\n\nU \n=\n \nexpand.grid\n(\nx\n,\nx\n,\nx\n)\n\nAddDensity\n(\n\n        name \n=\n \npaste\n(\n\"f\"\n,\nP\n$\nx\n,\nP\n$\ny\n,\nP\n$\nz\n,\nsep\n=\n\"\"\n),\n\n        dx   \n=\n U\n[,\n1\n],\n\n        dy   \n=\n U\n[,\n2\n],\n\n        dz   \n=\n U\n[,\n3\n],\n\n        comment\n=\npaste\n(\n\"density F\"\n,\n1\n:\n27-1\n),\n\n        group\n=\n\"f\"\n\n\n)\n\n\n\n\n\n\n\n\nAddGlobal\n - Integrates variables and exports calculated value, useful for calculating forces/fluxes etc.\n\n\n\n\nAddGlobal\n(\nname\n=\n\"Name\"\n,\n comment\n=\n'Some comment'\n,\n unit\n=\n\"unit\"\n)\n\nAddGlobal\n(\nname\n=\n\"Flux\"\n,\n comment\n=\n'Volume flux'\n,\n unit\n=\n\"m3/s\"\n)\n\n\n\n\n\n\n\n\nAddSetting\n - Variables that can be set in the \n.xml\n and accessed by \nDynamics.c\n in all  nodes.\nSettings can be \nzonal\n, which means that they can be set to different values in different mesh zones, defined in \n.xml\n files. It is also possible to define a default value for a setting, this way even if it is not specified in \n.xml\n file code will run without trouble.\n\n\n\n\nAddSetting\n(\nname\n=\n\"Name\"\n,\n default \n=\n \n\"value\"\n,\n comment\n=\n\"some comment\"\n,\n zonal\n=\nTRUE\n/\nFALSE\n \n)\n\nAddSetting\n(\nname\n=\n\"Velocity\"\n,\n default\n=\n\"0m/s\"\n,\n comment\n=\n'Inlet velocity'\n,\n zonal\n=\nTRUE\n)\n\n\n\n\n\n\n\n\nAddQuantity\n - Values that can be exported to VTK files (and Catalyst). In most cases they are macroscopic human-readable quantites like velocity, pressure, displacement etc.\n\n\n\n\nAddQuantity\n(\nname\n=\n\"Name\"\n,\n unit\n=\n\"unit\"\n,\n comment\n=\n\"Some comment\"\n,\n \nvector\n \n=\n \nT\n/\nF\n)\n\nAddQuantity\n(\nname\n=\n\"U\"\n,\n unit\n=\n\"m/s\"\n,\n comment\n=\n\"macroscopic velocity\"\n,\n \nvector\n \n=\n \nT\n)\n\n\n\n\n\n\nvector\n should be set to \nT\n for properties like velocity, momentum etc. \nIn order to extract those values the \nGetName()\n function must be defined in \nDynamics.c\n.\n\n\n\n\nAddNodeType\n\n\nBGK\n\n\nMRT\n\n\nWall\n\n\nSolid\n\n\nWVelocity,WPressure,WPressureL\n\n\nEVelocity,EPressure,EPressureL\n\n\nInlet\n\n\nOutlet\n\n\n\n\n\n\n\n\nFile structure, what are quantities, globals, etc, whats needed in (almost) every model\n\n\nStages\n\n\nStages are specific functions in \nDynamics.c\n, for which we can define which \nDensities\n will be loaded and which \nFields\n will be saved. Stages can be defined in \nDynamics.R\n by:\n\n\nAddStage\n(\n\"BaseIteration\"\n,\n \n\"Run\"\n,\n save\n=\nFields\n$\ngroup \n==\n \n\"f\"\n,\n load\n=\nDensityAll\n$\ngroup \n==\n \n\"f\"\n)\n\nAddStage\n(\n\"CalcRho\"\n,\n save\n=\n\"rho\"\n,\n load\n=\nDensityAll\n$\ngroup \n==\n \n\"f\"\n)\n\nAddStage\n(\n\"CalcNu\"\n,\n save\n=\n\"nu\"\n,\n load\n=\nFALSE\n)\n\n\n\n\n\n\nAction\n  is a series of \nStages\n executed in a order. For now there are two meaningful actions:\n\n\n\n\nIteration\n, which defines a single (primal) iteration\n\n\nInit\n, which defines the initialization procedure in each node\n\n\n\n\nActions can be defined in \nDynamics.R\n by:\n\n\nAddAction\n(\n\"Iteration\"\n,\n \nc\n(\n\"BaseIteration\"\n,\n\"CalcRho\"\n,\n\"CalcNu\"\n))\n\n\n\n\n\n\nDynamics.C\n\n\nThis file contains the actual 'logic' behind the model. All the calculations are done here. It must contain at least 3 functions to work: \nInit()\n, \nColor()\n, and \nRun()\n. Since CUDA architecture is being used, all the functions need to be preceded by \"CudaDeviceFunction\".\n\n\nInit()\n\n\nFunction called to initialise velocity in each node\n\n\nCudaDeviceFunction\n \nvoid\n \nInit\n()\n \n{\n\n\n// Initialise the velocity at each node \n\n        \nreal_t\n \nu\n[\n2\n]\n \n=\n \n{\nVelocity\n,\n \n0.\n};\n\n        \nreal_t\n \nd\n    \n=\n \nDensity\n;\n\n        \nSetEquilibrium\n(\nd\n,\nu\n);\n\n\n}\n\n\n\n\n\n\nRun()\n\n\nThis function is called each iteration to perform calculations. It should contain instruction for each \nNodeType\n used in case. Its general structure looks like this:\n\n\nCudaDeviceFunction\n \nvoid\n \nRun\n(){\n\n    \nswitch\n \n(\nNodeType\n \n&\n \nNODE_GROUP\n){\n \n//Because of the NodeType structure checking must be done this way\n\n                                    \n// If any SYMMETRY nodes are present, they need to be 'done' first\n\n        \ncase\n \nNODE_A\n:\n\n            \nA\n();\n                    \n//Function with logic for this NodeType\n\n            \nbreak\n;\n\n        \ncase\n \nNODE_B\n:\n\n            \nB\n();\n\n            \nbreak\n;\n\n    \n}\n\n    \nswitch\n \n(\nNodeType\n \n&\n \nNODE_GROUP\n){\n \n//Boundary conditions(BOUNDARY group) must be calculated before collision/streaming\n\n        \n.\n\n        \n.\n\n        \n.\n\n    \n}\n\n    \nswitch\n \n(\nNodeType\n \n&\n \nNODE_GROUP\n){\n \n//Collision/streaming must be done as last step\n\n        \n.\n\n        \n.\n\n        \n.\n\n\n}\n\n\n\n\n\n\nColor()\n\n\nThis function is used to obtain preview during calculations, when not in use it can be only declared without any actual code inside.\n\n\nCudaDeviceFunction\n \nfloat2\n \nColor\n()\n \n{\n\n        \nfloat2\n \nret\n;\n\n        \nvector_t\n \nu\n \n=\n \ngetU\n();\n\n        \nret\n.\nx\n \n=\n \nsqrt\n(\nu\n.\nx\n*\nu\n.\nx\n \n+\n \nu\n.\ny\n*\nu\n.\ny\n);\n    \n        \nif\n \n(\nNodeType\n \n==\n \nNODE_Solid\n){\n\n                \nret\n.\ny\n \n=\n \n0\n;\n\n        \n}\n \nelse\n \n{\n\n                \nret\n.\ny\n \n=\n \n1\n;\n\n        \n}\n\n        \nreturn\n \nret\n;\n\n\n}\n\n\n\n\n\n\nGet()\n\n\nIn order to extract \nQuantities\n defined in \nDynamics.R\n we must create function that will compute desired value. Depending on values of \nvector\n argument, the \nGet()\n function will be either \nreal_t\n or \nvector_t\n type. Below are given examples for the \nQuantities\n used most often: \n\n\nCudaDeviceFunction\n \nreal_t\n \ngetRho\n()\n \n{\n\n\n// This function defines the macroscopic density at the current node.\n\n        \nreturn\n \nf\n[\n8\n]\n+\nf\n[\n7\n]\n+\nf\n[\n6\n]\n+\nf\n[\n5\n]\n+\nf\n[\n4\n]\n+\nf\n[\n3\n]\n+\nf\n[\n2\n]\n+\nf\n[\n1\n]\n+\nf\n[\n0\n];\n\n\n}\n\n\n\nCudaDeviceFunction\n \nvector_t\n \ngetU\n()\n \n{\n\n\n// This function defines the macroscopic velocity at the current node.\n\n        \nreal_t\n \nd\n \n=\n \nf\n[\n8\n]\n+\nf\n[\n7\n]\n+\nf\n[\n6\n]\n+\nf\n[\n5\n]\n+\nf\n[\n4\n]\n+\nf\n[\n3\n]\n+\nf\n[\n2\n]\n+\nf\n[\n1\n]\n+\nf\n[\n0\n];\n\n        \nvector_t\n \nu\n;\n\n        \n// pv = pu + G/2\n\n        \nu\n.\nx\n \n=\n \n((\n \nf\n[\n8\n]\n-\nf\n[\n7\n]\n-\nf\n[\n6\n]\n+\nf\n[\n5\n]\n-\nf\n[\n3\n]\n+\nf\n[\n1\n]\n \n)\n/\nd\n \n+\n \nGravitationX\n*\n0.5\n \n);\n\n        \nu\n.\ny\n \n=\n \n((\n-\nf\n[\n8\n]\n-\nf\n[\n7\n]\n+\nf\n[\n6\n]\n+\nf\n[\n5\n]\n-\nf\n[\n4\n]\n+\nf\n[\n2\n]\n \n)\n/\nd\n \n+\n \nGravitationY\n*\n0.5\n \n);\n\n        \nu\n.\nz\n \n=\n \n0\n;\n\n        \nreturn\n \nu\n;\n\n\n}",
            "title": "Model Information"
        },
        {
            "location": "/5.-Model-development/basics/#general-information",
            "text": "Each model consit\n2 most important files: Dynamics.c and Dynamics.R, what goes where(logic, settings, quantities)",
            "title": "General information"
        },
        {
            "location": "/5.-Model-development/basics/#confmk",
            "text": "ADJOINT = 1  This file contains information needed during compilation. It allows compilation of diferent versions of a model(from the same  Dynamics.c  and  Dynamics.R ). To do so you need to set  OPT  variable in  conf.mk  first. E.g:  OPT = \"(A+B)*C\"   This will add three optional functionalities: A,B, and C - called Options.  The summation means that two options are exclusive (you can have A or B), and multiplication allows for their combination (you can have A, C and both). The mechanism allows to compile a model for all the resulting combinations. The name of the model is created by adding the option after an underscore. In this case:     Model  A  B  C      model       model_A  x      model_B   x     model_C    x    model_A_C  x   x    model_B_C   x  x     All these models are compiled from the same Dynamics.R and Dynamics.c, but with different options set to TRUE or FALSE in the Options R variable. One can switch on and off parts of the code with:  if   ( Options $ A )   {  # code for option A  }   else   {  # code without option A  }   or in pure C/C++, with:  #ifdef OPTIONS_A  // code for option A  #else  // code without option A  #endif",
            "title": "conf.mk"
        },
        {
            "location": "/5.-Model-development/basics/#dynamicsr",
            "text": "In this file all    AddField  - Variables (for instance flow-variables, displacements, etc) that are stored in all mesh nodes.  Dynamics.c  can access these fields with an offset (e.g. field_name(-1,0)). If the access pattern is repeating you can define a density that predefines a specific offset. Such densities are gathered, and the resulting memory access is optimized.   AddField (  name = \"Name\" ,  dx = c ( -1 , 0 ),  dy = c ( 0 , 0 ),  dz = c ( -1 , 1 ),  comment = 'Some comment' )   If there is -1,1 access pattern you can use a shortcut:  AddField ( name = \"u\" ,  dx = c ( -1 , 1 ),  dy = c ( -1 , 1 ))   # same as  \nAddField ( name = \"u\" ,  stencil2d = 1 )    AddDensity  - Variables loaded from  Fields  with a predefined offset:    AddDensity (  name = \"Name\" ,  dx = 1 ,  dy = 0 ,  dz = 0 ,  comment = 'Some comment' )   It is possible to automate the process and add  Density  for each possible direction(here for d3q27 model):  x  =   c ( 0 , 1 , -1 ); \nP  =   expand.grid ( x = 0 : 2 , y = 0 : 2 , z = 0 : 2 ) \nU  =   expand.grid ( x , x , x ) \nAddDensity ( \n        name  =   paste ( \"f\" , P $ x , P $ y , P $ z , sep = \"\" ), \n        dx    =  U [, 1 ], \n        dy    =  U [, 2 ], \n        dz    =  U [, 3 ], \n        comment = paste ( \"density F\" , 1 : 27-1 ), \n        group = \"f\"  )    AddGlobal  - Integrates variables and exports calculated value, useful for calculating forces/fluxes etc.   AddGlobal ( name = \"Name\" ,  comment = 'Some comment' ,  unit = \"unit\" ) \nAddGlobal ( name = \"Flux\" ,  comment = 'Volume flux' ,  unit = \"m3/s\" )    AddSetting  - Variables that can be set in the  .xml  and accessed by  Dynamics.c  in all  nodes.\nSettings can be  zonal , which means that they can be set to different values in different mesh zones, defined in  .xml  files. It is also possible to define a default value for a setting, this way even if it is not specified in  .xml  file code will run without trouble.   AddSetting ( name = \"Name\" ,  default  =   \"value\" ,  comment = \"some comment\" ,  zonal = TRUE / FALSE   ) \nAddSetting ( name = \"Velocity\" ,  default = \"0m/s\" ,  comment = 'Inlet velocity' ,  zonal = TRUE )    AddQuantity  - Values that can be exported to VTK files (and Catalyst). In most cases they are macroscopic human-readable quantites like velocity, pressure, displacement etc.   AddQuantity ( name = \"Name\" ,  unit = \"unit\" ,  comment = \"Some comment\" ,   vector   =   T / F ) \nAddQuantity ( name = \"U\" ,  unit = \"m/s\" ,  comment = \"macroscopic velocity\" ,   vector   =   T )   vector  should be set to  T  for properties like velocity, momentum etc. \nIn order to extract those values the  GetName()  function must be defined in  Dynamics.c .   AddNodeType  BGK  MRT  Wall  Solid  WVelocity,WPressure,WPressureL  EVelocity,EPressure,EPressureL  Inlet  Outlet     File structure, what are quantities, globals, etc, whats needed in (almost) every model  Stages  Stages are specific functions in  Dynamics.c , for which we can define which  Densities  will be loaded and which  Fields  will be saved. Stages can be defined in  Dynamics.R  by:  AddStage ( \"BaseIteration\" ,   \"Run\" ,  save = Fields $ group  ==   \"f\" ,  load = DensityAll $ group  ==   \"f\" ) \nAddStage ( \"CalcRho\" ,  save = \"rho\" ,  load = DensityAll $ group  ==   \"f\" ) \nAddStage ( \"CalcNu\" ,  save = \"nu\" ,  load = FALSE )   Action   is a series of  Stages  executed in a order. For now there are two meaningful actions:   Iteration , which defines a single (primal) iteration  Init , which defines the initialization procedure in each node   Actions can be defined in  Dynamics.R  by:  AddAction ( \"Iteration\" ,   c ( \"BaseIteration\" , \"CalcRho\" , \"CalcNu\" ))",
            "title": "Dynamics.R"
        },
        {
            "location": "/5.-Model-development/basics/#dynamicsc",
            "text": "This file contains the actual 'logic' behind the model. All the calculations are done here. It must contain at least 3 functions to work:  Init() ,  Color() , and  Run() . Since CUDA architecture is being used, all the functions need to be preceded by \"CudaDeviceFunction\".",
            "title": "Dynamics.C"
        },
        {
            "location": "/5.-Model-development/basics/#init",
            "text": "Function called to initialise velocity in each node  CudaDeviceFunction   void   Init ()   {  // Initialise the velocity at each node  \n         real_t   u [ 2 ]   =   { Velocity ,   0. }; \n         real_t   d      =   Density ; \n         SetEquilibrium ( d , u );  }",
            "title": "Init()"
        },
        {
            "location": "/5.-Model-development/basics/#run",
            "text": "This function is called each iteration to perform calculations. It should contain instruction for each  NodeType  used in case. Its general structure looks like this:  CudaDeviceFunction   void   Run (){ \n     switch   ( NodeType   &   NODE_GROUP ){   //Because of the NodeType structure checking must be done this way \n                                     // If any SYMMETRY nodes are present, they need to be 'done' first \n         case   NODE_A : \n             A ();                      //Function with logic for this NodeType \n             break ; \n         case   NODE_B : \n             B (); \n             break ; \n     } \n     switch   ( NodeType   &   NODE_GROUP ){   //Boundary conditions(BOUNDARY group) must be calculated before collision/streaming \n         . \n         . \n         . \n     } \n     switch   ( NodeType   &   NODE_GROUP ){   //Collision/streaming must be done as last step \n         . \n         . \n         .  }",
            "title": "Run()"
        },
        {
            "location": "/5.-Model-development/basics/#color",
            "text": "This function is used to obtain preview during calculations, when not in use it can be only declared without any actual code inside.  CudaDeviceFunction   float2   Color ()   { \n         float2   ret ; \n         vector_t   u   =   getU (); \n         ret . x   =   sqrt ( u . x * u . x   +   u . y * u . y );     \n         if   ( NodeType   ==   NODE_Solid ){ \n                 ret . y   =   0 ; \n         }   else   { \n                 ret . y   =   1 ; \n         } \n         return   ret ;  }",
            "title": "Color()"
        },
        {
            "location": "/5.-Model-development/basics/#get",
            "text": "In order to extract  Quantities  defined in  Dynamics.R  we must create function that will compute desired value. Depending on values of  vector  argument, the  Get()  function will be either  real_t  or  vector_t  type. Below are given examples for the  Quantities  used most often:   CudaDeviceFunction   real_t   getRho ()   {  // This function defines the macroscopic density at the current node. \n         return   f [ 8 ] + f [ 7 ] + f [ 6 ] + f [ 5 ] + f [ 4 ] + f [ 3 ] + f [ 2 ] + f [ 1 ] + f [ 0 ];  }  CudaDeviceFunction   vector_t   getU ()   {  // This function defines the macroscopic velocity at the current node. \n         real_t   d   =   f [ 8 ] + f [ 7 ] + f [ 6 ] + f [ 5 ] + f [ 4 ] + f [ 3 ] + f [ 2 ] + f [ 1 ] + f [ 0 ]; \n         vector_t   u ; \n         // pv = pu + G/2 \n         u . x   =   ((   f [ 8 ] - f [ 7 ] - f [ 6 ] + f [ 5 ] - f [ 3 ] + f [ 1 ]   ) / d   +   GravitationX * 0.5   ); \n         u . y   =   (( - f [ 8 ] - f [ 7 ] + f [ 6 ] + f [ 5 ] - f [ 4 ] + f [ 2 ]   ) / d   +   GravitationY * 0.5   ); \n         u . z   =   0 ; \n         return   u ;  }",
            "title": "Get()"
        },
        {
            "location": "/XML-Reference/Callbacks/",
            "text": "Callbacks\n\n\nVTK\n\n\n<VTK\n \nIterations=\n\"1000\"\n \nwhat=\n\"U,Rho\"\n/>\n\n\n\n\n\n\nExport VTK data \n\n\n\n\n\n\n\n\nAttribute\n\n\nComment\n\n\nValue\n\n\n\n\n\n\n\n\n\n\nIterations=\n\n\n\n\nValue with unit (int)\n\n\n\n\n\n\nwhat=\n\n\nList of Quantities and Geometry Components to export.\n\n\nValue with unit (NULL)\n\n\n\n\n\n\nname=\n\n\nName of the VTK file.\n\n\nValue with unit (NULL)\n\n\n\n\n\n\n\n\nTXT\n\n\n<TXT\n \n...\n/>\n\n\n\n\n\n\nExport data to TXT file \n\n\n\n\n\n\n\n\nAttribute\n\n\nComment\n\n\nValue\n\n\n\n\n\n\n\n\n\n\nIterations=\n\n\n\n\nValue with unit (int)\n\n\n\n\n\n\nname=\n\n\nName of the TXT file.\n\n\nValue with unit (NULL)\n\n\n\n\n\n\ngzip=\n\n\nIf to compress the TXT output\n\n\nValue with unit (NULL)\n\n\n\n\n\n\n\n\nCatalyst\n\n\n<Catalyst\n \nscript=\n\"vis1.py\"\n \nIterations=\n\"1000\"\n/>\n\n\n\n\n\n\nRun Catalyst co-processor \n\n\n\n\n\n\n\n\nAttribute\n\n\nComment\n\n\nValue\n\n\n\n\n\n\n\n\n\n\nIterations=\n\n\n\n\nValue with unit (int)\n\n\n\n\n\n\nexport=\n\n\nSelect if to provide the Catalyst co-processor with VTK Cell of Point Data\n\n\nValue with unit (NULL)\n\n\n\n\n\n\nscript=\n\n\nCatalyst co-processing Python script\n\n\nValue with unit (NULL)\n\n\n\n\n\n\npreprocess=\n\n\nIf active, the Python script will be modified so that the files will be placed in the output directory\n\n\nValue with unit (NULL)\n\n\n\n\n\n\n\n\nLog\n\n\n<Log\n \n...\n/>\n\n\n\n\n\n\n\n\n\n\n\n\nAttribute\n\n\nComment\n\n\nValue\n\n\n\n\n\n\n\n\n\n\nIterations=\n\n\n\n\nValue with unit (int)\n\n\n\n\n\n\nname=\n\n\n\n\nValue with unit (NULL)\n\n\n\n\n\n\n\n\nStop\n\n\n<Stop\n \nFluxChange=\n\"1e-5\"\n \nTimes=\n\"5\"\n \nIterations=\n\"100\"\n/>\n\n\n\n\n\n\nAllows to stop the computatation if a change of some Global is small for a longer time \n\n\n\n\n\n\n\n\nAttribute\n\n\nComment\n\n\nValue\n\n\n\n\n\n\n\n\n\n\nIterations=\n\n\n\n\nValue with unit (int)\n\n\n\n\n\n\nUnknown=\n\n\nLimit on change of a specific Global\n\n\nValue with unit (NULL)\n\n\n\n\n\n\nTimes=\n\n\nNumer of times the change have to be below the limit to stop the computation.\n\n\nValue with unit (NULL)\n\n\n\n\n\n\n\n\nSample\n\n\n<Sample\n \nIterations=\n\"1000\"\n \nwhat=\n\"U,P\"\n \n><Point\n \ndx=\n\"10\"\n \ndy=\n\"20\"\n/></Sample>\n\n\n\n\n\n\nEffecient sampling of quantities on each iteration, without need for VTK \n\n\n\n\n\n\n\n\nAttribute\n\n\nComment\n\n\nValue\n\n\n\n\n\n\n\n\n\n\nIterations=\n\n\n\n\nValue with unit (int)\n\n\n\n\n\n\nIterations=\n\n\nIteration period after which the sampled data will be written to a file\n\n\nValue with unit (NULL)\n\n\n\n\n\n\nwhat=\n\n\nList of Quantities to be sampled. By default all are sampled.\n\n\nValue with unit (NULL)",
            "title": "Callbacks"
        },
        {
            "location": "/XML-Reference/Callbacks/#callbacks",
            "text": "",
            "title": "Callbacks"
        },
        {
            "location": "/XML-Reference/Callbacks/#vtk",
            "text": "<VTK   Iterations= \"1000\"   what= \"U,Rho\" />   Export VTK data      Attribute  Comment  Value      Iterations=   Value with unit (int)    what=  List of Quantities and Geometry Components to export.  Value with unit (NULL)    name=  Name of the VTK file.  Value with unit (NULL)",
            "title": "VTK"
        },
        {
            "location": "/XML-Reference/Callbacks/#txt",
            "text": "<TXT   ... />   Export data to TXT file      Attribute  Comment  Value      Iterations=   Value with unit (int)    name=  Name of the TXT file.  Value with unit (NULL)    gzip=  If to compress the TXT output  Value with unit (NULL)",
            "title": "TXT"
        },
        {
            "location": "/XML-Reference/Callbacks/#catalyst",
            "text": "<Catalyst   script= \"vis1.py\"   Iterations= \"1000\" />   Run Catalyst co-processor      Attribute  Comment  Value      Iterations=   Value with unit (int)    export=  Select if to provide the Catalyst co-processor with VTK Cell of Point Data  Value with unit (NULL)    script=  Catalyst co-processing Python script  Value with unit (NULL)    preprocess=  If active, the Python script will be modified so that the files will be placed in the output directory  Value with unit (NULL)",
            "title": "Catalyst"
        },
        {
            "location": "/XML-Reference/Callbacks/#log",
            "text": "<Log   ... />      Attribute  Comment  Value      Iterations=   Value with unit (int)    name=   Value with unit (NULL)",
            "title": "Log"
        },
        {
            "location": "/XML-Reference/Callbacks/#stop",
            "text": "<Stop   FluxChange= \"1e-5\"   Times= \"5\"   Iterations= \"100\" />   Allows to stop the computatation if a change of some Global is small for a longer time      Attribute  Comment  Value      Iterations=   Value with unit (int)    Unknown=  Limit on change of a specific Global  Value with unit (NULL)    Times=  Numer of times the change have to be below the limit to stop the computation.  Value with unit (NULL)",
            "title": "Stop"
        },
        {
            "location": "/XML-Reference/Callbacks/#sample",
            "text": "<Sample   Iterations= \"1000\"   what= \"U,P\"   ><Point   dx= \"10\"   dy= \"20\" /></Sample>   Effecient sampling of quantities on each iteration, without need for VTK      Attribute  Comment  Value      Iterations=   Value with unit (int)    Iterations=  Iteration period after which the sampled data will be written to a file  Value with unit (NULL)    what=  List of Quantities to be sampled. By default all are sampled.  Value with unit (NULL)",
            "title": "Sample"
        },
        {
            "location": "/XML-Reference/Container/",
            "text": "Container\n\n\nCLBConfig\n\n\n<CLBConfig\n \n...\n/>\n\n\n\n\n\n\nPossible children: \nGeometry\n (\n<Geometry/>\n), \nExecutions\n (\n<Solve/>\n, \n<Adjoint/>\n, \n<Optimize/>\n, \n<Threshold/>\n, \n<ThresholdNow/>\n, \n<Repeat/>\n, \n<LoadBinary/>\n, \n<SaveBinary/>\n, \n<LoadMemoryDump/>\n, \n<SaveMemoryDump/>\n), \nCallbacks\n (\n<VTK/>\n, \n<TXT/>\n, \n<Catalyst/>\n, \n<Log/>\n, \n<Stop/>\n, \n<Sample/>\n), \nContainer\n (\n<CLBConfig/>\n, \n<Model/>\n), \nParams\n (\n<Params/>\n), \nSetup Elements\n (\n<Control/>\n, \n<SyntheticTurbulence/>\n) \n\n\n\n\n\n\n\n\nAttribute\n\n\nComment\n\n\nValue\n\n\n\n\n\n\n\n\n\n\noutput=\n\n\n\n\nValue with unit (NULL)\n\n\n\n\n\n\n\n\nModel\n\n\n<Model\n \n...\n/>\n\n\n\n\n\n\nPossible children: \nParams\n (\n<Params/>\n), \nSetup Elements\n (\n<Control/>\n, \n<SyntheticTurbulence/>\n) \n\n\n\n\n\n\n\n\nAttribute\n\n\nComment\n\n\nValue\n\n\n\n\n\n\n\n\n\n\noutput=\n\n\n\n\nValue with unit (NULL)",
            "title": "Container"
        },
        {
            "location": "/XML-Reference/Container/#container",
            "text": "",
            "title": "Container"
        },
        {
            "location": "/XML-Reference/Container/#clbconfig",
            "text": "<CLBConfig   ... />   Possible children:  Geometry  ( <Geometry/> ),  Executions  ( <Solve/> ,  <Adjoint/> ,  <Optimize/> ,  <Threshold/> ,  <ThresholdNow/> ,  <Repeat/> ,  <LoadBinary/> ,  <SaveBinary/> ,  <LoadMemoryDump/> ,  <SaveMemoryDump/> ),  Callbacks  ( <VTK/> ,  <TXT/> ,  <Catalyst/> ,  <Log/> ,  <Stop/> ,  <Sample/> ),  Container  ( <CLBConfig/> ,  <Model/> ),  Params  ( <Params/> ),  Setup Elements  ( <Control/> ,  <SyntheticTurbulence/> )      Attribute  Comment  Value      output=   Value with unit (NULL)",
            "title": "CLBConfig"
        },
        {
            "location": "/XML-Reference/Container/#model",
            "text": "<Model   ... />   Possible children:  Params  ( <Params/> ),  Setup Elements  ( <Control/> ,  <SyntheticTurbulence/> )      Attribute  Comment  Value      output=   Value with unit (NULL)",
            "title": "Model"
        },
        {
            "location": "/XML-Reference/Executions/",
            "text": "Executions\n\n\nSolve\n\n\n<Solve\n \n...\n/>\n\n\n\n\n\n\nMain solution element. It runs a prescribed number of iterations.\n\n\nPossible children: \nParams\n (\n<Params/>\n) \n\n\n\n\n\n\n\n\nAttribute\n\n\nComment\n\n\nValue\n\n\n\n\n\n\n\n\n\n\nIterations=\n\n\n\n\nValue with unit (int)\n\n\n\n\n\n\n\n\nAdjoint\n\n\n<Adjoint\n \n...\n/>\n\n\n\n\n\n\nPossible children: \nParams\n (\n<Params/>\n), \nExecutions\n (\n<Solve/>\n, \n<Adjoint/>\n, \n<Optimize/>\n, \n<Threshold/>\n, \n<ThresholdNow/>\n, \n<Repeat/>\n, \n<LoadBinary/>\n, \n<SaveBinary/>\n, \n<LoadMemoryDump/>\n, \n<SaveMemoryDump/>\n) \n\n\n\n\n\n\n\n\nAttribute\n\n\nComment\n\n\nValue\n\n\n\n\n\n\n\n\n\n\nIterations=\n\n\n\n\nValue with unit (int)\n\n\n\n\n\n\n\n\nOptimize\n\n\n<Optimize\n \n...\n/>\n\n\n\n\n\n\nPossible children: \nParams\n (\n<Params/>\n), \nExecutions\n (\n<Solve/>\n, \n<Adjoint/>\n, \n<Optimize/>\n, \n<Threshold/>\n, \n<ThresholdNow/>\n, \n<Repeat/>\n, \n<LoadBinary/>\n, \n<SaveBinary/>\n, \n<LoadMemoryDump/>\n, \n<SaveMemoryDump/>\n) \n\n\n\n\n\n\n\n\nAttribute\n\n\nComment\n\n\nValue\n\n\n\n\n\n\n\n\n\n\nIterations=\n\n\n\n\nValue with unit (int)\n\n\n\n\n\n\nMethod=\n\n\nOptimization method\n\n\nValue with unit (NULL)\n\n\n\n\n\n\nMaterial=\n\n\nOptional constraint on \"amount of material\", which is the sum of Topological parameters\n\n\nValue with unit (NULL)\n\n\n\n\n\n\nXAbsTolerance=\n\n\n\n\nValue with unit (NULL)\n\n\n\n\n\n\nRelTolerance=\n\n\nRelative Tolerance\n\n\nValue with unit (NULL)\n\n\n\n\n\n\nAbsTolerance=\n\n\nAbsolute Tolerance\n\n\nValue with unit (NULL)\n\n\n\n\n\n\nStopAtValue=\n\n\nAt what value of the objective to stop\n\n\nValue with unit (NULL)\n\n\n\n\n\n\nMaxEvaluations=\n\n\nMaximal number of evalulations (optimizer iterations)\n\n\nValue with unit (NULL)\n\n\n\n\n\n\n\n\nThreshold\n\n\n<Threshold\n \n...\n/>\n\n\n\n\n\n\nGoes with a threshold from 0 to 1. Then for a specific threshold sets all the parameter below the threshold to 0 and above the threshold to 1. Then runs the calculation for the binary (0-1) parameter set.\n\n\nPossible children: \nParams\n (\n<Params/>\n) \n\n\n\n\n\n\n\n\nAttribute\n\n\nComment\n\n\nValue\n\n\n\n\n\n\n\n\n\n\nIterations=\n\n\n\n\nValue with unit (int)\n\n\n\n\n\n\nLevels=\n\n\nNumber of Levels to calculate between 0 and 1\n\n\nValue with unit (NULL)\n\n\n\n\n\n\n\n\nThresholdNow\n\n\n<ThresholdNow\n \n...\n/>\n\n\n\n\n\n\nFor a specific threshold sets all the parameter below the threshold to 0 and above the threshold to 1. Then runs the calculation for the binary (0-1) parameter set.\n\n\nPossible children: \nParams\n (\n<Params/>\n) \n\n\n\n\n\n\n\n\nAttribute\n\n\nComment\n\n\nValue\n\n\n\n\n\n\n\n\n\n\nIterations=\n\n\n\n\nValue with unit (int)\n\n\n\n\n\n\nLevel=\n\n\nThreshold level to apply\n\n\nValue with unit (NULL)\n\n\n\n\n\n\n\n\nRepeat\n\n\n<Repeat\n \nTimes=\n\"5\"\n>\n\n  \n<Init/>\n\n  \n<Solve\n \nIterations=\n\"1000\"\n/>\n\n  \n<VTK/>\n\n\n</Repeat>\n\n\n\n\n\n\nA loop element \nPossible children: \nParams\n (\n<Params/>\n) \n\n\n\n\n\n\n\n\nAttribute\n\n\nComment\n\n\nValue\n\n\n\n\n\n\n\n\n\n\nIterations=\n\n\n\n\nValue with unit (int)\n\n\n\n\n\n\nTimes=\n\n\nNumer of Times to repeat a segment\n\n\nValue with unit (NULL)\n\n\n\n\n\n\n\n\nLoadBinary\n\n\n<LoadBinary\n \n...\n/>\n\n\n\n\n\n\nLoad a Field from a binary file (low level) \nPossible children: \nParams\n (\n<Params/>\n) \n\n\n\n\n\n\n\n\nAttribute\n\n\nComment\n\n\nValue\n\n\n\n\n\n\n\n\n\n\nIterations=\n\n\n\n\nValue with unit (int)\n\n\n\n\n\n\nfile=\n\n\npath to a binary file (without the suffix)\n\n\nValue with unit (NULL)\n\n\n\n\n\n\ncomp=\n\n\nField to load from the binary file\n\n\nValue with unit (NULL)\n\n\n\n\n\n\n\n\nSaveBinary\n\n\n<SaveBinary\n \n...\n/>\n\n\n\n\n\n\nSave a Field to a binary file (low level) \nPossible children: \nParams\n (\n<Params/>\n) \n\n\n\n\n\n\n\n\nAttribute\n\n\nComment\n\n\nValue\n\n\n\n\n\n\n\n\n\n\nIterations=\n\n\n\n\nValue with unit (int)\n\n\n\n\n\n\nfile=\n\n\nthe name of the binary file\n\n\nValue with unit (NULL)\n\n\n\n\n\n\nfilename=\n\n\nfull path to the binary file\n\n\nValue with unit (NULL)\n\n\n\n\n\n\ncomp=\n\n\nField to save to the binary file\n\n\nValue with unit (NULL)\n\n\n\n\n\n\n\n\nLoadMemoryDump\n\n\n<LoadMemoryDump\n \n...\n/>\n\n\n\n\n\n\nLoad all fields from a dump created by Save element \nPossible children: \nParams\n (\n<Params/>\n) \n\n\n\n\n\n\n\n\nAttribute\n\n\nComment\n\n\nValue\n\n\n\n\n\n\n\n\n\n\nIterations=\n\n\n\n\nValue with unit (int)\n\n\n\n\n\n\nfile=\n\n\npath to a binary file (without the suffix)\n\n\nValue with unit (NULL)\n\n\n\n\n\n\n\n\nSaveMemoryDump\n\n\n<SaveMemoryDump\n \n...\n/>\n\n\n\n\n\n\nSave all fields, to be loaded later on with LoadMemoryDump\nWarning: Save and Load Memory Dump have to be used on the \nsame number of cores\n, same model and same precision.\n\n\nPossible children: \nParams\n (\n<Params/>\n) \n\n\n\n\n\n\n\n\nAttribute\n\n\nComment\n\n\nValue\n\n\n\n\n\n\n\n\n\n\nIterations=\n\n\n\n\nValue with unit (int)\n\n\n\n\n\n\nfile=\n\n\nthe name of the binary file\n\n\nValue with unit (NULL)\n\n\n\n\n\n\nfilename=\n\n\nfull path to the binary file\n\n\nValue with unit (NULL)",
            "title": "Executions"
        },
        {
            "location": "/XML-Reference/Executions/#executions",
            "text": "",
            "title": "Executions"
        },
        {
            "location": "/XML-Reference/Executions/#solve",
            "text": "<Solve   ... />   Main solution element. It runs a prescribed number of iterations.  Possible children:  Params  ( <Params/> )      Attribute  Comment  Value      Iterations=   Value with unit (int)",
            "title": "Solve"
        },
        {
            "location": "/XML-Reference/Executions/#adjoint",
            "text": "<Adjoint   ... />   Possible children:  Params  ( <Params/> ),  Executions  ( <Solve/> ,  <Adjoint/> ,  <Optimize/> ,  <Threshold/> ,  <ThresholdNow/> ,  <Repeat/> ,  <LoadBinary/> ,  <SaveBinary/> ,  <LoadMemoryDump/> ,  <SaveMemoryDump/> )      Attribute  Comment  Value      Iterations=   Value with unit (int)",
            "title": "Adjoint"
        },
        {
            "location": "/XML-Reference/Executions/#optimize",
            "text": "<Optimize   ... />   Possible children:  Params  ( <Params/> ),  Executions  ( <Solve/> ,  <Adjoint/> ,  <Optimize/> ,  <Threshold/> ,  <ThresholdNow/> ,  <Repeat/> ,  <LoadBinary/> ,  <SaveBinary/> ,  <LoadMemoryDump/> ,  <SaveMemoryDump/> )      Attribute  Comment  Value      Iterations=   Value with unit (int)    Method=  Optimization method  Value with unit (NULL)    Material=  Optional constraint on \"amount of material\", which is the sum of Topological parameters  Value with unit (NULL)    XAbsTolerance=   Value with unit (NULL)    RelTolerance=  Relative Tolerance  Value with unit (NULL)    AbsTolerance=  Absolute Tolerance  Value with unit (NULL)    StopAtValue=  At what value of the objective to stop  Value with unit (NULL)    MaxEvaluations=  Maximal number of evalulations (optimizer iterations)  Value with unit (NULL)",
            "title": "Optimize"
        },
        {
            "location": "/XML-Reference/Executions/#threshold",
            "text": "<Threshold   ... />   Goes with a threshold from 0 to 1. Then for a specific threshold sets all the parameter below the threshold to 0 and above the threshold to 1. Then runs the calculation for the binary (0-1) parameter set.  Possible children:  Params  ( <Params/> )      Attribute  Comment  Value      Iterations=   Value with unit (int)    Levels=  Number of Levels to calculate between 0 and 1  Value with unit (NULL)",
            "title": "Threshold"
        },
        {
            "location": "/XML-Reference/Executions/#thresholdnow",
            "text": "<ThresholdNow   ... />   For a specific threshold sets all the parameter below the threshold to 0 and above the threshold to 1. Then runs the calculation for the binary (0-1) parameter set.  Possible children:  Params  ( <Params/> )      Attribute  Comment  Value      Iterations=   Value with unit (int)    Level=  Threshold level to apply  Value with unit (NULL)",
            "title": "ThresholdNow"
        },
        {
            "location": "/XML-Reference/Executions/#repeat",
            "text": "<Repeat   Times= \"5\" > \n   <Init/> \n   <Solve   Iterations= \"1000\" /> \n   <VTK/>  </Repeat>   A loop element \nPossible children:  Params  ( <Params/> )      Attribute  Comment  Value      Iterations=   Value with unit (int)    Times=  Numer of Times to repeat a segment  Value with unit (NULL)",
            "title": "Repeat"
        },
        {
            "location": "/XML-Reference/Executions/#loadbinary",
            "text": "<LoadBinary   ... />   Load a Field from a binary file (low level) \nPossible children:  Params  ( <Params/> )      Attribute  Comment  Value      Iterations=   Value with unit (int)    file=  path to a binary file (without the suffix)  Value with unit (NULL)    comp=  Field to load from the binary file  Value with unit (NULL)",
            "title": "LoadBinary"
        },
        {
            "location": "/XML-Reference/Executions/#savebinary",
            "text": "<SaveBinary   ... />   Save a Field to a binary file (low level) \nPossible children:  Params  ( <Params/> )      Attribute  Comment  Value      Iterations=   Value with unit (int)    file=  the name of the binary file  Value with unit (NULL)    filename=  full path to the binary file  Value with unit (NULL)    comp=  Field to save to the binary file  Value with unit (NULL)",
            "title": "SaveBinary"
        },
        {
            "location": "/XML-Reference/Executions/#loadmemorydump",
            "text": "<LoadMemoryDump   ... />   Load all fields from a dump created by Save element \nPossible children:  Params  ( <Params/> )      Attribute  Comment  Value      Iterations=   Value with unit (int)    file=  path to a binary file (without the suffix)  Value with unit (NULL)",
            "title": "LoadMemoryDump"
        },
        {
            "location": "/XML-Reference/Executions/#savememorydump",
            "text": "<SaveMemoryDump   ... />   Save all fields, to be loaded later on with LoadMemoryDump\nWarning: Save and Load Memory Dump have to be used on the  same number of cores , same model and same precision.  Possible children:  Params  ( <Params/> )      Attribute  Comment  Value      Iterations=   Value with unit (int)    file=  the name of the binary file  Value with unit (NULL)    filename=  full path to the binary file  Value with unit (NULL)",
            "title": "SaveMemoryDump"
        },
        {
            "location": "/XML-Reference/Geometry-Boolean-Operation/",
            "text": "Geometry Boolean Operation",
            "title": "Geometry Boolean Operation"
        },
        {
            "location": "/XML-Reference/Geometry-Boolean-Operation/#geometry-boolean-operation",
            "text": "",
            "title": "Geometry Boolean Operation"
        },
        {
            "location": "/XML-Reference/Geometry-Primitive/",
            "text": "Geometry Primitive\n\n\nBox\n\n\n<Box\n \n...\n/>\n\n\n\n\n\n\n\n\n\n\n\n\nAttribute\n\n\nComment\n\n\nValue\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPipe\n\n\n<Pipe\n \n...\n/>\n\n\n\n\n\n\n\n\n\n\n\n\nAttribute\n\n\nComment\n\n\nValue\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWedge\n\n\n<Wedge\n \n...\n/>\n\n\n\n\n\n\n\n\n\n\n\n\nAttribute\n\n\nComment\n\n\nValue\n\n\n\n\n\n\n\n\n\n\ndirection=\n\n\n\n\nValue with unit (NULL)\n\n\n\n\n\n\n\n\nSTL\n\n\n<STL\n \n...\n/>\n\n\n\n\n\n\n\n\n\n\n\n\nAttribute\n\n\nComment\n\n\nValue\n\n\n\n\n\n\n\n\n\n\nfile=\n\n\n\n\nValue with unit (NA)",
            "title": "Geometry Primitive"
        },
        {
            "location": "/XML-Reference/Geometry-Primitive/#geometry-primitive",
            "text": "",
            "title": "Geometry Primitive"
        },
        {
            "location": "/XML-Reference/Geometry-Primitive/#box",
            "text": "<Box   ... />      Attribute  Comment  Value",
            "title": "Box"
        },
        {
            "location": "/XML-Reference/Geometry-Primitive/#pipe",
            "text": "<Pipe   ... />      Attribute  Comment  Value",
            "title": "Pipe"
        },
        {
            "location": "/XML-Reference/Geometry-Primitive/#wedge",
            "text": "<Wedge   ... />      Attribute  Comment  Value      direction=   Value with unit (NULL)",
            "title": "Wedge"
        },
        {
            "location": "/XML-Reference/Geometry-Primitive/#stl",
            "text": "<STL   ... />      Attribute  Comment  Value      file=   Value with unit (NA)",
            "title": "STL"
        },
        {
            "location": "/XML-Reference/Geometry/",
            "text": "Geometry\n\n\nGeometry\n\n\n<Geometry\n \n...\n/>\n\n\n\n\n\n\nPossible children: \nNode Type Brush",
            "title": "Geometry"
        },
        {
            "location": "/XML-Reference/Geometry/#geometry",
            "text": "",
            "title": "Geometry"
        },
        {
            "location": "/XML-Reference/Geometry/#geometry_1",
            "text": "<Geometry   ... />   Possible children:  Node Type Brush",
            "title": "Geometry"
        },
        {
            "location": "/XML-Reference/Node-Type-Brush/",
            "text": "Node Type Brush",
            "title": "Node Type Brush"
        },
        {
            "location": "/XML-Reference/Node-Type-Brush/#node-type-brush",
            "text": "",
            "title": "Node Type Brush"
        },
        {
            "location": "/XML-Reference/Optimization-and-Optimal-Control/",
            "text": "Optimization and Optimal Control\n\n\nOptimalControl\n\n\n<OptimalControl\n \n...\n/>\n\n\n\n\n\n\n\n\n\n\n\n\nAttribute\n\n\nComment\n\n\nValue\n\n\n\n\n\n\n\n\n\n\nwhat=\n\n\nSelect a time-dependent setting to optimize\n\n\nValue with unit (NULL)\n\n\n\n\n\n\n\n\nOptimalControlSecond\n\n\n<OptimalControlSecond\n \nwhat=\n\"Velocity-inlet\"\n \nlower=\n\"0.0\"\n \nupper=\n\"0.05\"\n/>\n\n\n\n\n\n\nParametrises a time-dependend Setting with the value of every second iteration. Values inbetween are interpolated.\n\n\n\n\n\n\n\n\nAttribute\n\n\nComment\n\n\nValue\n\n\n\n\n\n\n\n\n\n\nwhat=\n\n\nSelect a time-dependent setting to optimize\n\n\nValue with unit (NULL)\n\n\n\n\n\n\nlower=\n\n\nLower limit on the value of the Setting\n\n\nValue with unit (float)\n\n\n\n\n\n\nupper=\n\n\nUpper limit on the value of the Setting\n\n\nValue with unit (float)\n\n\n\n\n\n\n\n\nFourier\n\n\n<Fourier>\n\n  \n<OptimalControlSecond\n \nwhat=\n\"Velocity-inlet\"\n/>\n\n\n</Fourier>\n\n\n\n\n\n\nMakes a truncated Fourier transform of a time-dependent Setting (OptimalControl)\n\n\n\n\n\n\n\n\nAttribute\n\n\nComment\n\n\nValue\n\n\n\n\n\n\n\n\n\n\nmodes=\n\n\nNumber of Fourier modes to use for the parametrization\n\n\nValue with unit (NULL)\n\n\n\n\n\n\nlower=\n\n\nLower limit on the Fourier coefficients\n\n\nValue with unit (float)\n\n\n\n\n\n\nupper=\n\n\nUpper limit on the Fourier coefficients\n\n\nValue with unit (float)\n\n\n\n\n\n\n\n\nBSpline\n\n\n<BSpline\n \nnodes=\n\"10\"\n \nlower=\n\"-1\"\n \nupper=\n\"1\"\n>\n\n  \n<OptimalControlSecond\n \nwhat=\n\"Velocity-inlet\"\n/>\n\n\n</BSpline>\n\n\n\n\n\n\nMakes B-Spline transform/smoothing of a time-dependent Setting (OptimalControl)\n\n\n\n\n\n\n\n\nAttribute\n\n\nComment\n\n\nValue\n\n\n\n\n\n\n\n\n\n\nnodes=\n\n\nNumber of degrees of freedom (parameters) of the b-spline\n\n\nValue with unit (NULL)\n\n\n\n\n\n\nperiodic=\n\n\nIf the b-spline should be periotic in the control period\n\n\nValue with unit (NULL)\n\n\n\n\n\n\nlower=\n\n\nLower limit on the values\n\n\nValue with unit (float)\n\n\n\n\n\n\nupper=\n\n\nUpper limit on the values\n\n\nValue with unit (float)\n\n\n\n\n\n\n\n\nRepeatControl\n\n\n<RepeatControl\n \nlength=\n\"100\"\n \nlower=\n\"-1\"\n \nupper=\n\"1\"\n>\n\n  \n<OptimalControl\n \nwhat=\n\"Velocity-inlet\"\n/>\n\n\n</RepeatControl>\n\n\n\n\n\n\nRepeats a control for optimal control\n\n\n\n\n\n\n\n\nAttribute\n\n\nComment\n\n\nValue\n\n\n\n\n\n\n\n\n\n\nlength=\n\n\nLength of the control to repeat\n\n\nValue with unit (int)\n\n\n\n\n\n\nlower=\n\n\nLower limit on the values\n\n\nValue with unit (float)\n\n\n\n\n\n\nupper=\n\n\nUpper limit on the values\n\n\nValue with unit (float)",
            "title": "Optimization and Optimal Control"
        },
        {
            "location": "/XML-Reference/Optimization-and-Optimal-Control/#optimization-and-optimal-control",
            "text": "",
            "title": "Optimization and Optimal Control"
        },
        {
            "location": "/XML-Reference/Optimization-and-Optimal-Control/#optimalcontrol",
            "text": "<OptimalControl   ... />      Attribute  Comment  Value      what=  Select a time-dependent setting to optimize  Value with unit (NULL)",
            "title": "OptimalControl"
        },
        {
            "location": "/XML-Reference/Optimization-and-Optimal-Control/#optimalcontrolsecond",
            "text": "<OptimalControlSecond   what= \"Velocity-inlet\"   lower= \"0.0\"   upper= \"0.05\" />   Parametrises a time-dependend Setting with the value of every second iteration. Values inbetween are interpolated.     Attribute  Comment  Value      what=  Select a time-dependent setting to optimize  Value with unit (NULL)    lower=  Lower limit on the value of the Setting  Value with unit (float)    upper=  Upper limit on the value of the Setting  Value with unit (float)",
            "title": "OptimalControlSecond"
        },
        {
            "location": "/XML-Reference/Optimization-and-Optimal-Control/#fourier",
            "text": "<Fourier> \n   <OptimalControlSecond   what= \"Velocity-inlet\" />  </Fourier>   Makes a truncated Fourier transform of a time-dependent Setting (OptimalControl)     Attribute  Comment  Value      modes=  Number of Fourier modes to use for the parametrization  Value with unit (NULL)    lower=  Lower limit on the Fourier coefficients  Value with unit (float)    upper=  Upper limit on the Fourier coefficients  Value with unit (float)",
            "title": "Fourier"
        },
        {
            "location": "/XML-Reference/Optimization-and-Optimal-Control/#bspline",
            "text": "<BSpline   nodes= \"10\"   lower= \"-1\"   upper= \"1\" > \n   <OptimalControlSecond   what= \"Velocity-inlet\" />  </BSpline>   Makes B-Spline transform/smoothing of a time-dependent Setting (OptimalControl)     Attribute  Comment  Value      nodes=  Number of degrees of freedom (parameters) of the b-spline  Value with unit (NULL)    periodic=  If the b-spline should be periotic in the control period  Value with unit (NULL)    lower=  Lower limit on the values  Value with unit (float)    upper=  Upper limit on the values  Value with unit (float)",
            "title": "BSpline"
        },
        {
            "location": "/XML-Reference/Optimization-and-Optimal-Control/#repeatcontrol",
            "text": "<RepeatControl   length= \"100\"   lower= \"-1\"   upper= \"1\" > \n   <OptimalControl   what= \"Velocity-inlet\" />  </RepeatControl>   Repeats a control for optimal control     Attribute  Comment  Value      length=  Length of the control to repeat  Value with unit (int)    lower=  Lower limit on the values  Value with unit (float)    upper=  Upper limit on the values  Value with unit (float)",
            "title": "RepeatControl"
        },
        {
            "location": "/XML-Reference/Params/",
            "text": "Params\n\n\nParams\n\n\n<Params\n \n...\n/>\n\n\n\n\n\n\n\n\n\n\n\n\nAttribute\n\n\nComment\n\n\nValue\n\n\n\n\n\n\n\n\n\n\nUnknown=\n\n\n\n\nValue with unit (float)\n\n\n\n\n\n\ngauge=\n\n\n\n\nValue with unit (float)",
            "title": "Params"
        },
        {
            "location": "/XML-Reference/Params/#params",
            "text": "",
            "title": "Params"
        },
        {
            "location": "/XML-Reference/Params/#params_1",
            "text": "<Params   ... />      Attribute  Comment  Value      Unknown=   Value with unit (float)    gauge=   Value with unit (float)",
            "title": "Params"
        },
        {
            "location": "/XML-Reference/Setup-Elements/",
            "text": "Setup Elements\n\n\nControl\n\n\n<Control\n \nIterations=\n\"1s\"\n>\n\n  \n<CSV\n \nfile=\n\"example/sin.csv\"\n \nTime=\n\"x*1s\"\n>\n\n    \n<Params\n \nPY=\n\"Sin*0.5m+1m\"\n/>\n\n    \n<Params\n \nPR=\n\"Cos*2+1\"\n/>\n\n  \n</CSV>\n\n\n</Control>\n\n\n\n\n\n\nElement prescribing time-dependent Settings \n\n\n\n\n\n\n\n\nAttribute\n\n\nComment\n\n\nValue\n\n\n\n\n\n\n\n\n\n\nIterations=\n\n\nLength of the time-dependentcy\n\n\nValue with unit (int)\n\n\n\n\n\n\n\n\nSyntheticTurbulence\n\n\n<SyntheticTurbulence\n \n...\n/>\n\n\n\n\n\n\nPrescribe properties of the synthetic turbulence generated for initialization and boundary conditions \n\n\n\n\n\n\n\n\nAttribute\n\n\nComment\n\n\nValue\n\n\n\n\n\n\n\n\n\n\nModes=\n\n\nNumber of harmonic modes to generate for the turbulence\n\n\nValue with unit (NULL)\n\n\n\n\n\n\nSpread=\n\n\nThe way to divide the spectrum to a finite number of modes\n\n\nValue with unit (NULL)\n\n\n\n\n\n\nSpectrum=\n\n\nType of spectrum to use\n\n\nValue with unit (NULL)\n\n\n\n\n\n\nMainWaveLength=\n\n\nMain wave-length in the Von Karman spectrum\n\n\nValue with unit (float)\n\n\n\n\n\n\nDiffusionWaveLength=\n\n\nDiffusion scale wave-length in the Von Karman spectrum\n\n\nValue with unit (float)\n\n\n\n\n\n\nMinWaveLength=\n\n\nMinimal space wave-length\n\n\nValue with unit (float)\n\n\n\n\n\n\nMaxWaveLength=\n\n\nMaximal space wave-length\n\n\nValue with unit (float)\n\n\n\n\n\n\nTimeWaveLength=\n\n\nTime wave-length of the syntetic turbulence (can be also \nTimeWaveNumber\n or \nTimeWaveFrequency\n)\n\n\nValue with unit (float)",
            "title": "Setup Elements"
        },
        {
            "location": "/XML-Reference/Setup-Elements/#setup-elements",
            "text": "",
            "title": "Setup Elements"
        },
        {
            "location": "/XML-Reference/Setup-Elements/#control",
            "text": "<Control   Iterations= \"1s\" > \n   <CSV   file= \"example/sin.csv\"   Time= \"x*1s\" > \n     <Params   PY= \"Sin*0.5m+1m\" /> \n     <Params   PR= \"Cos*2+1\" /> \n   </CSV>  </Control>   Element prescribing time-dependent Settings      Attribute  Comment  Value      Iterations=  Length of the time-dependentcy  Value with unit (int)",
            "title": "Control"
        },
        {
            "location": "/XML-Reference/Setup-Elements/#syntheticturbulence",
            "text": "<SyntheticTurbulence   ... />   Prescribe properties of the synthetic turbulence generated for initialization and boundary conditions      Attribute  Comment  Value      Modes=  Number of harmonic modes to generate for the turbulence  Value with unit (NULL)    Spread=  The way to divide the spectrum to a finite number of modes  Value with unit (NULL)    Spectrum=  Type of spectrum to use  Value with unit (NULL)    MainWaveLength=  Main wave-length in the Von Karman spectrum  Value with unit (float)    DiffusionWaveLength=  Diffusion scale wave-length in the Von Karman spectrum  Value with unit (float)    MinWaveLength=  Minimal space wave-length  Value with unit (float)    MaxWaveLength=  Maximal space wave-length  Value with unit (float)    TimeWaveLength=  Time wave-length of the syntetic turbulence (can be also  TimeWaveNumber  or  TimeWaveFrequency )  Value with unit (float)",
            "title": "SyntheticTurbulence"
        },
        {
            "location": "/models/PDE/wave/",
            "text": "Description\n\n\nwave\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nValue\n\n\nValue\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nSpeed\n\n\n\n\nSpeed\n\n\n\n\n\n\nViscosity\n\n\n\n\nViscosity\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nU\n\n\n1\n\n\nU\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, Dirichlet\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nu\n\n\n\n\nu\n\n\n\n\n\n\nv\n\n\n\n\nv\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nBaseIteration\n\n\nRun\n\n\nnone\n\n\nu, v\n\n\n\n\n\n\nBaseInit\n\n\nInit\n\n\nnone\n\n\nu, v\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIteration\n\n\n\n\n\n\nInit\n\n\nBaseInit",
            "title": "Wave"
        },
        {
            "location": "/models/PDE/wave/#description",
            "text": "wave",
            "title": "Description"
        },
        {
            "location": "/models/PDE/wave/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/PDE/wave/#zonal-settings",
            "text": "Name  Comment      Value  Value",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/PDE/wave/#global-settings",
            "text": "Name  Derived  Comment      Speed   Speed    Viscosity   Viscosity    Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/PDE/wave/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      U  1  U",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/PDE/wave/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/PDE/wave/#node-types",
            "text": "Group  Types      BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, Dirichlet    COLLISION  BGK, MRT    DESIGNSPACE  DesignSpace    NONE  None    OBJECTIVE  Inlet, Outlet    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/PDE/wave/#solved-fields",
            "text": "Name  Access pattern  Comment      u   u    v   v",
            "title": "Solved fields"
        },
        {
            "location": "/models/PDE/wave/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/PDE/wave/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      BaseIteration  Run  none  u, v    BaseInit  Init  none  u, v",
            "title": "Action stages"
        },
        {
            "location": "/models/PDE/wave/#actions",
            "text": "Name  Stages      Iteration  BaseIteration    Init  BaseInit",
            "title": "Actions"
        },
        {
            "location": "/models/PDE/wave2d/",
            "text": "Description\n\n\nwave2d\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nTotalDiffInObj\n\n\nWeight of [total diff] in objective\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nWaveK\n\n\n\n\ncoeff\n\n\n\n\n\n\nSolidH\n\n\n\n\nH of solid\n\n\n\n\n\n\nLoss\n\n\n\n\nu multipiler\n\n\n\n\n\n\nDescent\n\n\n\n\nOptimization Descent\n\n\n\n\n\n\nGradientSmooth\n\n\n\n\nGradient smoothing in OptSolve\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nH\n\n\n1\n\n\nH\n\n\n\n\n\n\nW\n\n\n1\n\n\nW\n\n\n\n\n\n\nWB\n\n\n1\n\n\nWB\n\n\n\n\n\n\nHB\n\n\n1\n\n\nHB\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nTotalDiff\n\n\n1\n\n\ntotal diff\n\n\n\n\n\n\nWaveK_D\n\n\n1\n\n\nGradient of objective with respect to [coeff]\n\n\n\n\n\n\nSolidH_D\n\n\n1\n\n\nGradient of objective with respect to [H of solid]\n\n\n\n\n\n\nLoss_D\n\n\n1\n\n\nGradient of objective with respect to [u multipiler]\n\n\n\n\n\n\nAdjointRes\n\n\n1\n\n\nsquare L2 norm of adjoint change\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nh\n\n\n\n\nh\n\n\n\n\n\n\nu\n\n\n\n\nu\n\n\n\n\n\n\nh1\n\n\n\n\nh1\n\n\n\n\n\n\nh2\n\n\n\n\nh2\n\n\n\n\n\n\nh3\n\n\n\n\nh3\n\n\n\n\n\n\nh4\n\n\n\n\nh4\n\n\n\n\n\n\nw\n\n\n\n\nw\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nh\n\n\nh\n\n\n\n\nh\n\n\n\n\n\n\nu\n\n\nu\n\n\n\n\nu\n\n\n\n\n\n\nh1\n\n\nh1\n\n\n\n\nh1\n\n\n\n\n\n\nh2\n\n\nh2\n\n\n\n\nh2\n\n\n\n\n\n\nh3\n\n\nh3\n\n\n\n\nh3\n\n\n\n\n\n\nh4\n\n\nh4\n\n\n\n\nh4\n\n\n\n\n\n\nw\n\n\nw\n\n\n\n\nw\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nBaseIteration\n\n\nRun\n\n\nh, u, h1, h2, h3, h4, w\n\n\nh, u, h1, h2, h3, h4, w\n\n\n\n\n\n\nBaseInit\n\n\nInit\n\n\nnone\n\n\nh, u, h1, h2, h3, h4, w\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIteration\n\n\n\n\n\n\nInit\n\n\nBaseInit",
            "title": "Wave2d"
        },
        {
            "location": "/models/PDE/wave2d/#description",
            "text": "wave2d",
            "title": "Description"
        },
        {
            "location": "/models/PDE/wave2d/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/PDE/wave2d/#zonal-settings",
            "text": "Name  Comment      TotalDiffInObj  Weight of [total diff] in objective",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/PDE/wave2d/#global-settings",
            "text": "Name  Derived  Comment      WaveK   coeff    SolidH   H of solid    Loss   u multipiler    Descent   Optimization Descent    GradientSmooth   Gradient smoothing in OptSolve    Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/PDE/wave2d/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      H  1  H    W  1  W    WB  1  WB    HB  1  HB",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/PDE/wave2d/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      TotalDiff  1  total diff    WaveK_D  1  Gradient of objective with respect to [coeff]    SolidH_D  1  Gradient of objective with respect to [H of solid]    Loss_D  1  Gradient of objective with respect to [u multipiler]    AdjointRes  1  square L2 norm of adjoint change    Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/PDE/wave2d/#node-types",
            "text": "Group  Types      BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity    COLLISION  BGK, MRT    DESIGNSPACE  DesignSpace    NONE  None    OBJECTIVE  Inlet, Outlet    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/PDE/wave2d/#solved-fields",
            "text": "Name  Access pattern  Comment      h   h    u   u    h1   h1    h2   h2    h3   h3    h4   h4    w   w",
            "title": "Solved fields"
        },
        {
            "location": "/models/PDE/wave2d/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment      h  h   h    u  u   u    h1  h1   h1    h2  h2   h2    h3  h3   h3    h4  h4   h4    w  w   w",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/PDE/wave2d/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      BaseIteration  Run  h, u, h1, h2, h3, h4, w  h, u, h1, h2, h3, h4, w    BaseInit  Init  none  h, u, h1, h2, h3, h4, w",
            "title": "Action stages"
        },
        {
            "location": "/models/PDE/wave2d/#actions",
            "text": "Name  Stages      Iteration  BaseIteration    Init  BaseInit",
            "title": "Actions"
        },
        {
            "location": "/models/article/d3q19_heat_adj_art/",
            "text": "Description\n\n\nd3q19_heat_adj_art\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nVelocity\n\n\ninlet velocity\n\n\n\n\n\n\nPressure\n\n\ninlet pressure\n\n\n\n\n\n\nTemperature\n\n\ninlet density\n\n\n\n\n\n\nLimitTemperature\n\n\ninlet density\n\n\n\n\n\n\nHeatFluxInObj\n\n\nWeight of [Flux of heat] in objective\n\n\n\n\n\n\nHeatSquareFluxInObj\n\n\nWeight of [Flux of temperature squered] in objective\n\n\n\n\n\n\nFluxInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nTemperatureAtPointInObj\n\n\nWeight of [Integral of temperature] in objective\n\n\n\n\n\n\nHighTemperatureInObj\n\n\nWeight of [Penalty for high temperature] in objective\n\n\n\n\n\n\nLowTemperatureInObj\n\n\nWeight of [Penalty for low temperature] in objective\n\n\n\n\n\n\nMaterialPenaltyInObj\n\n\nWeight of [Quadratic penalty for intermediate material parameter] in objective\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nnu\n\n\n\n\nviscosity\n\n\n\n\n\n\nFluidAlpha\n\n\n\n\ninlet density\n\n\n\n\n\n\nSolidAlpha\n\n\n\n\nHeat conductivity of solid\n\n\n\n\n\n\nBuoyancy\n\n\n\n\nBuoyancy coefficient of temperature\n\n\n\n\n\n\nPorocityGamma\n\n\n1.0 - exp(PorocityTheta)\n\n\nGamma in hiperbolic transformation of porocity (-infty,1)\n\n\n\n\n\n\nPorocityTheta\n\n\n\n\nTheta in hiperbolic transformation of porocity\n\n\n\n\n\n\nDescent\n\n\n\n\nOptimization Descent\n\n\n\n\n\n\nGradientSmooth\n\n\n\n\nGradient smoothing in OptSolve\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nW\n\n\n1\n\n\nW\n\n\n\n\n\n\nWB\n\n\n1\n\n\nWB\n\n\n\n\n\n\nRho\n\n\n1\n\n\nRho\n\n\n\n\n\n\nT\n\n\n1\n\n\nT\n\n\n\n\n\n\nU\n\n\n1\n\n\nU\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nHeatFlux\n\n\nKm3/s\n\n\nFlux of heat\n\n\n\n\n\n\nHeatSquareFlux\n\n\nK2m3/s\n\n\nFlux of temperature squered\n\n\n\n\n\n\nFlux\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nTemperatureAtPoint\n\n\nK\n\n\nIntegral of temperature\n\n\n\n\n\n\nHighTemperature\n\n\n1\n\n\nPenalty for high temperature\n\n\n\n\n\n\nLowTemperature\n\n\n1\n\n\nPenalty for low temperature\n\n\n\n\n\n\nMaterialPenalty\n\n\nm3\n\n\nQuadratic penalty for intermediate material parameter\n\n\n\n\n\n\nnu_D\n\n\n1\n\n\nGradient of objective with respect to [viscosity]\n\n\n\n\n\n\nFluidAlpha_D\n\n\n1\n\n\nGradient of objective with respect to [inlet density]\n\n\n\n\n\n\nSolidAlpha_D\n\n\n1\n\n\nGradient of objective with respect to [Heat conductivity of solid]\n\n\n\n\n\n\nBuoyancy_D\n\n\n1\n\n\nGradient of objective with respect to [Buoyancy coefficient of temperature]\n\n\n\n\n\n\nPorocityGamma_D\n\n\n1\n\n\nGradient of objective with respect to [Gamma in hiperbolic transformation of porocity (-infty,1)]\n\n\n\n\n\n\nPorocityTheta_D\n\n\n1\n\n\nGradient of objective with respect to [Theta in hiperbolic transformation of porocity]\n\n\n\n\n\n\nAdjointRes\n\n\n1\n\n\nsquare L2 norm of adjoint change\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nADDITIONALS\n\n\nHeater, HeatSource\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet, Thermometer\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf0\n\n\n\n\nflow LB density F 0\n\n\n\n\n\n\nf1\n\n\n\n\nflow LB density F 1\n\n\n\n\n\n\nf2\n\n\n\n\nflow LB density F 2\n\n\n\n\n\n\nf3\n\n\n\n\nflow LB density F 3\n\n\n\n\n\n\nf4\n\n\n\n\nflow LB density F 4\n\n\n\n\n\n\nf5\n\n\n\n\nflow LB density F 5\n\n\n\n\n\n\nf6\n\n\n\n\nflow LB density F 6\n\n\n\n\n\n\nf7\n\n\n\n\nflow LB density F 7\n\n\n\n\n\n\nf8\n\n\n\n\nflow LB density F 8\n\n\n\n\n\n\nf9\n\n\n\n\nflow LB density F 9\n\n\n\n\n\n\nf10\n\n\n\n\nflow LB density F 10\n\n\n\n\n\n\nf11\n\n\n\n\nflow LB density F 11\n\n\n\n\n\n\nf12\n\n\n\n\nflow LB density F 12\n\n\n\n\n\n\nf13\n\n\n\n\nflow LB density F 13\n\n\n\n\n\n\nf14\n\n\n\n\nflow LB density F 14\n\n\n\n\n\n\nf15\n\n\n\n\nflow LB density F 15\n\n\n\n\n\n\nf16\n\n\n\n\nflow LB density F 16\n\n\n\n\n\n\nf17\n\n\n\n\nflow LB density F 17\n\n\n\n\n\n\nf18\n\n\n\n\nflow LB density F 18\n\n\n\n\n\n\nT0\n\n\n\n\nheat LB density G 0\n\n\n\n\n\n\nT1\n\n\n\n\nheat LB density G 1\n\n\n\n\n\n\nT2\n\n\n\n\nheat LB density G 2\n\n\n\n\n\n\nT3\n\n\n\n\nheat LB density G 3\n\n\n\n\n\n\nT4\n\n\n\n\nheat LB density G 4\n\n\n\n\n\n\nT5\n\n\n\n\nheat LB density G 5\n\n\n\n\n\n\nT6\n\n\n\n\nheat LB density G 6\n\n\n\n\n\n\nw\n\n\n\n\nweight fluid-solid\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf0\n\n\nf0\n\n\n\n\nflow LB density F 0\n\n\n\n\n\n\nf1\n\n\nf1\n\n\n\n\nflow LB density F 1\n\n\n\n\n\n\nf2\n\n\nf2\n\n\n\n\nflow LB density F 2\n\n\n\n\n\n\nf3\n\n\nf3\n\n\n\n\nflow LB density F 3\n\n\n\n\n\n\nf4\n\n\nf4\n\n\n\n\nflow LB density F 4\n\n\n\n\n\n\nf5\n\n\nf5\n\n\n\n\nflow LB density F 5\n\n\n\n\n\n\nf6\n\n\nf6\n\n\n\n\nflow LB density F 6\n\n\n\n\n\n\nf7\n\n\nf7\n\n\n\n\nflow LB density F 7\n\n\n\n\n\n\nf8\n\n\nf8\n\n\n\n\nflow LB density F 8\n\n\n\n\n\n\nf9\n\n\nf9\n\n\n\n\nflow LB density F 9\n\n\n\n\n\n\nf10\n\n\nf10\n\n\n\n\nflow LB density F 10\n\n\n\n\n\n\nf11\n\n\nf11\n\n\n\n\nflow LB density F 11\n\n\n\n\n\n\nf12\n\n\nf12\n\n\n\n\nflow LB density F 12\n\n\n\n\n\n\nf13\n\n\nf13\n\n\n\n\nflow LB density F 13\n\n\n\n\n\n\nf14\n\n\nf14\n\n\n\n\nflow LB density F 14\n\n\n\n\n\n\nf15\n\n\nf15\n\n\n\n\nflow LB density F 15\n\n\n\n\n\n\nf16\n\n\nf16\n\n\n\n\nflow LB density F 16\n\n\n\n\n\n\nf17\n\n\nf17\n\n\n\n\nflow LB density F 17\n\n\n\n\n\n\nf18\n\n\nf18\n\n\n\n\nflow LB density F 18\n\n\n\n\n\n\nT0\n\n\nT0\n\n\n\n\nheat LB density G 0\n\n\n\n\n\n\nT1\n\n\nT1\n\n\n\n\nheat LB density G 1\n\n\n\n\n\n\nT2\n\n\nT2\n\n\n\n\nheat LB density G 2\n\n\n\n\n\n\nT3\n\n\nT3\n\n\n\n\nheat LB density G 3\n\n\n\n\n\n\nT4\n\n\nT4\n\n\n\n\nheat LB density G 4\n\n\n\n\n\n\nT5\n\n\nT5\n\n\n\n\nheat LB density G 5\n\n\n\n\n\n\nT6\n\n\nT6\n\n\n\n\nheat LB density G 6\n\n\n\n\n\n\nw\n\n\nw\n\n\n\n\nweight fluid-solid\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nBaseIteration\n\n\nRun\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, T0, T1, T2, T3, T4, T5, T6, w\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, T0, T1, T2, T3, T4, T5, T6, w\n\n\n\n\n\n\nBaseInit\n\n\nInit\n\n\nnone\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, T0, T1, T2, T3, T4, T5, T6, w\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIteration\n\n\n\n\n\n\nInit\n\n\nBaseInit",
            "title": "D3q19 heat adj art"
        },
        {
            "location": "/models/article/d3q19_heat_adj_art/#description",
            "text": "d3q19_heat_adj_art",
            "title": "Description"
        },
        {
            "location": "/models/article/d3q19_heat_adj_art/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/article/d3q19_heat_adj_art/#zonal-settings",
            "text": "Name  Comment      Velocity  inlet velocity    Pressure  inlet pressure    Temperature  inlet density    LimitTemperature  inlet density    HeatFluxInObj  Weight of [Flux of heat] in objective    HeatSquareFluxInObj  Weight of [Flux of temperature squered] in objective    FluxInObj  Weight of [Volume flux] in objective    TemperatureAtPointInObj  Weight of [Integral of temperature] in objective    HighTemperatureInObj  Weight of [Penalty for high temperature] in objective    LowTemperatureInObj  Weight of [Penalty for low temperature] in objective    MaterialPenaltyInObj  Weight of [Quadratic penalty for intermediate material parameter] in objective",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/article/d3q19_heat_adj_art/#global-settings",
            "text": "Name  Derived  Comment      nu   viscosity    FluidAlpha   inlet density    SolidAlpha   Heat conductivity of solid    Buoyancy   Buoyancy coefficient of temperature    PorocityGamma  1.0 - exp(PorocityTheta)  Gamma in hiperbolic transformation of porocity (-infty,1)    PorocityTheta   Theta in hiperbolic transformation of porocity    Descent   Optimization Descent    GradientSmooth   Gradient smoothing in OptSolve    Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/article/d3q19_heat_adj_art/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      W  1  W    WB  1  WB    Rho  1  Rho    T  1  T    U  1  U",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/article/d3q19_heat_adj_art/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      HeatFlux  Km3/s  Flux of heat    HeatSquareFlux  K2m3/s  Flux of temperature squered    Flux  m3/s  Volume flux    TemperatureAtPoint  K  Integral of temperature    HighTemperature  1  Penalty for high temperature    LowTemperature  1  Penalty for low temperature    MaterialPenalty  m3  Quadratic penalty for intermediate material parameter    nu_D  1  Gradient of objective with respect to [viscosity]    FluidAlpha_D  1  Gradient of objective with respect to [inlet density]    SolidAlpha_D  1  Gradient of objective with respect to [Heat conductivity of solid]    Buoyancy_D  1  Gradient of objective with respect to [Buoyancy coefficient of temperature]    PorocityGamma_D  1  Gradient of objective with respect to [Gamma in hiperbolic transformation of porocity (-infty,1)]    PorocityTheta_D  1  Gradient of objective with respect to [Theta in hiperbolic transformation of porocity]    AdjointRes  1  square L2 norm of adjoint change    Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/article/d3q19_heat_adj_art/#node-types",
            "text": "Group  Types      ADDITIONALS  Heater, HeatSource    BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity    COLLISION  BGK, MRT    DESIGNSPACE  DesignSpace    NONE  None    OBJECTIVE  Inlet, Outlet, Thermometer    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/article/d3q19_heat_adj_art/#solved-fields",
            "text": "Name  Access pattern  Comment      f0   flow LB density F 0    f1   flow LB density F 1    f2   flow LB density F 2    f3   flow LB density F 3    f4   flow LB density F 4    f5   flow LB density F 5    f6   flow LB density F 6    f7   flow LB density F 7    f8   flow LB density F 8    f9   flow LB density F 9    f10   flow LB density F 10    f11   flow LB density F 11    f12   flow LB density F 12    f13   flow LB density F 13    f14   flow LB density F 14    f15   flow LB density F 15    f16   flow LB density F 16    f17   flow LB density F 17    f18   flow LB density F 18    T0   heat LB density G 0    T1   heat LB density G 1    T2   heat LB density G 2    T3   heat LB density G 3    T4   heat LB density G 4    T5   heat LB density G 5    T6   heat LB density G 6    w   weight fluid-solid",
            "title": "Solved fields"
        },
        {
            "location": "/models/article/d3q19_heat_adj_art/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment      f0  f0   flow LB density F 0    f1  f1   flow LB density F 1    f2  f2   flow LB density F 2    f3  f3   flow LB density F 3    f4  f4   flow LB density F 4    f5  f5   flow LB density F 5    f6  f6   flow LB density F 6    f7  f7   flow LB density F 7    f8  f8   flow LB density F 8    f9  f9   flow LB density F 9    f10  f10   flow LB density F 10    f11  f11   flow LB density F 11    f12  f12   flow LB density F 12    f13  f13   flow LB density F 13    f14  f14   flow LB density F 14    f15  f15   flow LB density F 15    f16  f16   flow LB density F 16    f17  f17   flow LB density F 17    f18  f18   flow LB density F 18    T0  T0   heat LB density G 0    T1  T1   heat LB density G 1    T2  T2   heat LB density G 2    T3  T3   heat LB density G 3    T4  T4   heat LB density G 4    T5  T5   heat LB density G 5    T6  T6   heat LB density G 6    w  w   weight fluid-solid",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/article/d3q19_heat_adj_art/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      BaseIteration  Run  f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, T0, T1, T2, T3, T4, T5, T6, w  f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, T0, T1, T2, T3, T4, T5, T6, w    BaseInit  Init  none  f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, T0, T1, T2, T3, T4, T5, T6, w",
            "title": "Action stages"
        },
        {
            "location": "/models/article/d3q19_heat_adj_art/#actions",
            "text": "Name  Stages      Iteration  BaseIteration    Init  BaseInit",
            "title": "Actions"
        },
        {
            "location": "/models/electrokinetic/d2q9_npe_guo/",
            "text": "Description\n\n\nd2q9_npe_guo\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nrho_bc\n\n\nfluid density at  boundary\n\n\n\n\n\n\nphi_bc\n\n\nphi at  boundary\n\n\n\n\n\n\npsi_bc\n\n\npsi at  boundary - zeta\n\n\n\n\n\n\nTotalMomentumInObj\n\n\nWeight of [TotalMomentum] in objective\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nn_inf_0\n\n\n\n\n\n\n\n\n\n\nn_inf_1\n\n\n\n\n\n\n\n\n\n\nel\n\n\n\n\n\n\n\n\n\n\nel_kbT\n\n\n\n\n\n\n\n\n\n\nepsilon\n\n\n\n\n\n\n\n\n\n\ndt\n\n\n\n\n\n\n\n\n\n\npsi0\n\n\n\n\n\n\n\n\n\n\nphi0\n\n\n\n\n\n\n\n\n\n\nez\n\n\n\n\n\n\n\n\n\n\nEx\n\n\n\n\n\n\n\n\n\n\nD\n\n\n\n\nIon diffusivity\n\n\n\n\n\n\nnu\n\n\n\n\nviscosity\n\n\n\n\n\n\nt_to_s\n\n\n\n\ntime scale ratio\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nF\n\n\nkgm/s2\n\n\nF\n\n\n\n\n\n\nU\n\n\nm/s\n\n\nU\n\n\n\n\n\n\nRho\n\n\nkg/m3\n\n\nRho\n\n\n\n\n\n\nn0\n\n\nAn/m3\n\n\nn0\n\n\n\n\n\n\nn1\n\n\nAn/m3\n\n\nn1\n\n\n\n\n\n\nPsi\n\n\nV\n\n\nPsi\n\n\n\n\n\n\nPhi\n\n\nV\n\n\nPhi\n\n\n\n\n\n\nGradPsi\n\n\nV/m\n\n\nGradPsi\n\n\n\n\n\n\nGradPhi\n\n\nV/m\n\n\nGradPhi\n\n\n\n\n\n\nrho_e\n\n\nC/m3\n\n\nrho_e\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nTotalMomentum\n\n\n1\n\n\nTotalMomentum\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, SSymmetry, NSymmetry, NVelocity, SVelocity\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nphi[0]\n\n\n\n\nphi[0]\n\n\n\n\n\n\nphi[1]\n\n\n\n\nphi[1]\n\n\n\n\n\n\nphi[2]\n\n\n\n\nphi[2]\n\n\n\n\n\n\nphi[3]\n\n\n\n\nphi[3]\n\n\n\n\n\n\nphi[4]\n\n\n\n\nphi[4]\n\n\n\n\n\n\nphi[5]\n\n\n\n\nphi[5]\n\n\n\n\n\n\nphi[6]\n\n\n\n\nphi[6]\n\n\n\n\n\n\nphi[7]\n\n\n\n\nphi[7]\n\n\n\n\n\n\nphi[8]\n\n\n\n\nphi[8]\n\n\n\n\n\n\ng[0]\n\n\n\n\ng[0]\n\n\n\n\n\n\ng[1]\n\n\n\n\ng[1]\n\n\n\n\n\n\ng[2]\n\n\n\n\ng[2]\n\n\n\n\n\n\ng[3]\n\n\n\n\ng[3]\n\n\n\n\n\n\ng[4]\n\n\n\n\ng[4]\n\n\n\n\n\n\ng[5]\n\n\n\n\ng[5]\n\n\n\n\n\n\ng[6]\n\n\n\n\ng[6]\n\n\n\n\n\n\ng[7]\n\n\n\n\ng[7]\n\n\n\n\n\n\ng[8]\n\n\n\n\ng[8]\n\n\n\n\n\n\nf[0]\n\n\n\n\nf[0]\n\n\n\n\n\n\nf[1]\n\n\n\n\nf[1]\n\n\n\n\n\n\nf[2]\n\n\n\n\nf[2]\n\n\n\n\n\n\nf[3]\n\n\n\n\nf[3]\n\n\n\n\n\n\nf[4]\n\n\n\n\nf[4]\n\n\n\n\n\n\nf[5]\n\n\n\n\nf[5]\n\n\n\n\n\n\nf[6]\n\n\n\n\nf[6]\n\n\n\n\n\n\nf[7]\n\n\n\n\nf[7]\n\n\n\n\n\n\nf[8]\n\n\n\n\nf[8]\n\n\n\n\n\n\nh_0[0]\n\n\n\n\nh_0[0]\n\n\n\n\n\n\nh_0[1]\n\n\n\n\nh_0[1]\n\n\n\n\n\n\nh_0[2]\n\n\n\n\nh_0[2]\n\n\n\n\n\n\nh_0[3]\n\n\n\n\nh_0[3]\n\n\n\n\n\n\nh_0[4]\n\n\n\n\nh_0[4]\n\n\n\n\n\n\nh_0[5]\n\n\n\n\nh_0[5]\n\n\n\n\n\n\nh_0[6]\n\n\n\n\nh_0[6]\n\n\n\n\n\n\nh_0[7]\n\n\n\n\nh_0[7]\n\n\n\n\n\n\nh_0[8]\n\n\n\n\nh_0[8]\n\n\n\n\n\n\nh_1[0]\n\n\n\n\nh_1[0]\n\n\n\n\n\n\nh_1[1]\n\n\n\n\nh_1[1]\n\n\n\n\n\n\nh_1[2]\n\n\n\n\nh_1[2]\n\n\n\n\n\n\nh_1[3]\n\n\n\n\nh_1[3]\n\n\n\n\n\n\nh_1[4]\n\n\n\n\nh_1[4]\n\n\n\n\n\n\nh_1[5]\n\n\n\n\nh_1[5]\n\n\n\n\n\n\nh_1[6]\n\n\n\n\nh_1[6]\n\n\n\n\n\n\nh_1[7]\n\n\n\n\nh_1[7]\n\n\n\n\n\n\nh_1[8]\n\n\n\n\nh_1[8]\n\n\n\n\n\n\nBC[0]\n\n\n\n\nBC[0]\n\n\n\n\n\n\nBC[1]\n\n\n\n\nBC[1]\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nphi[0]\n\n\nphi[0]\n\n\n\n\nphi[0]\n\n\n\n\n\n\nphi[1]\n\n\nphi[1]\n\n\n\n\nphi[1]\n\n\n\n\n\n\nphi[2]\n\n\nphi[2]\n\n\n\n\nphi[2]\n\n\n\n\n\n\nphi[3]\n\n\nphi[3]\n\n\n\n\nphi[3]\n\n\n\n\n\n\nphi[4]\n\n\nphi[4]\n\n\n\n\nphi[4]\n\n\n\n\n\n\nphi[5]\n\n\nphi[5]\n\n\n\n\nphi[5]\n\n\n\n\n\n\nphi[6]\n\n\nphi[6]\n\n\n\n\nphi[6]\n\n\n\n\n\n\nphi[7]\n\n\nphi[7]\n\n\n\n\nphi[7]\n\n\n\n\n\n\nphi[8]\n\n\nphi[8]\n\n\n\n\nphi[8]\n\n\n\n\n\n\ng[0]\n\n\ng[0]\n\n\n\n\ng[0]\n\n\n\n\n\n\ng[1]\n\n\ng[1]\n\n\n\n\ng[1]\n\n\n\n\n\n\ng[2]\n\n\ng[2]\n\n\n\n\ng[2]\n\n\n\n\n\n\ng[3]\n\n\ng[3]\n\n\n\n\ng[3]\n\n\n\n\n\n\ng[4]\n\n\ng[4]\n\n\n\n\ng[4]\n\n\n\n\n\n\ng[5]\n\n\ng[5]\n\n\n\n\ng[5]\n\n\n\n\n\n\ng[6]\n\n\ng[6]\n\n\n\n\ng[6]\n\n\n\n\n\n\ng[7]\n\n\ng[7]\n\n\n\n\ng[7]\n\n\n\n\n\n\ng[8]\n\n\ng[8]\n\n\n\n\ng[8]\n\n\n\n\n\n\nf[0]\n\n\nf[0]\n\n\n\n\nf[0]\n\n\n\n\n\n\nf[1]\n\n\nf[1]\n\n\n\n\nf[1]\n\n\n\n\n\n\nf[2]\n\n\nf[2]\n\n\n\n\nf[2]\n\n\n\n\n\n\nf[3]\n\n\nf[3]\n\n\n\n\nf[3]\n\n\n\n\n\n\nf[4]\n\n\nf[4]\n\n\n\n\nf[4]\n\n\n\n\n\n\nf[5]\n\n\nf[5]\n\n\n\n\nf[5]\n\n\n\n\n\n\nf[6]\n\n\nf[6]\n\n\n\n\nf[6]\n\n\n\n\n\n\nf[7]\n\n\nf[7]\n\n\n\n\nf[7]\n\n\n\n\n\n\nf[8]\n\n\nf[8]\n\n\n\n\nf[8]\n\n\n\n\n\n\nh_0[0]\n\n\nh_0[0]\n\n\n\n\nh_0[0]\n\n\n\n\n\n\nh_0[1]\n\n\nh_0[1]\n\n\n\n\nh_0[1]\n\n\n\n\n\n\nh_0[2]\n\n\nh_0[2]\n\n\n\n\nh_0[2]\n\n\n\n\n\n\nh_0[3]\n\n\nh_0[3]\n\n\n\n\nh_0[3]\n\n\n\n\n\n\nh_0[4]\n\n\nh_0[4]\n\n\n\n\nh_0[4]\n\n\n\n\n\n\nh_0[5]\n\n\nh_0[5]\n\n\n\n\nh_0[5]\n\n\n\n\n\n\nh_0[6]\n\n\nh_0[6]\n\n\n\n\nh_0[6]\n\n\n\n\n\n\nh_0[7]\n\n\nh_0[7]\n\n\n\n\nh_0[7]\n\n\n\n\n\n\nh_0[8]\n\n\nh_0[8]\n\n\n\n\nh_0[8]\n\n\n\n\n\n\nh_1[0]\n\n\nh_1[0]\n\n\n\n\nh_1[0]\n\n\n\n\n\n\nh_1[1]\n\n\nh_1[1]\n\n\n\n\nh_1[1]\n\n\n\n\n\n\nh_1[2]\n\n\nh_1[2]\n\n\n\n\nh_1[2]\n\n\n\n\n\n\nh_1[3]\n\n\nh_1[3]\n\n\n\n\nh_1[3]\n\n\n\n\n\n\nh_1[4]\n\n\nh_1[4]\n\n\n\n\nh_1[4]\n\n\n\n\n\n\nh_1[5]\n\n\nh_1[5]\n\n\n\n\nh_1[5]\n\n\n\n\n\n\nh_1[6]\n\n\nh_1[6]\n\n\n\n\nh_1[6]\n\n\n\n\n\n\nh_1[7]\n\n\nh_1[7]\n\n\n\n\nh_1[7]\n\n\n\n\n\n\nh_1[8]\n\n\nh_1[8]\n\n\n\n\nh_1[8]\n\n\n\n\n\n\nBC[0]\n\n\nBC[0]\n\n\n\n\nBC[0]\n\n\n\n\n\n\nBC[1]\n\n\nBC[1]\n\n\n\n\nBC[1]\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nBaseIteration\n\n\nRun\n\n\nphi[0], phi[1], phi[2], phi[3], phi[4], phi[5], phi[6], phi[7], phi[8], g[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8], f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], h_0[0], h_0[1], h_0[2], h_0[3], h_0[4], h_0[5], h_0[6], h_0[7], h_0[8], h_1[0], h_1[1], h_1[2], h_1[3], h_1[4], h_1[5], h_1[6], h_1[7], h_1[8], BC[0], BC[1]\n\n\nphi[0], phi[1], phi[2], phi[3], phi[4], phi[5], phi[6], phi[7], phi[8], g[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8], f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], h_0[0], h_0[1], h_0[2], h_0[3], h_0[4], h_0[5], h_0[6], h_0[7], h_0[8], h_1[0], h_1[1], h_1[2], h_1[3], h_1[4], h_1[5], h_1[6], h_1[7], h_1[8], BC[0], BC[1]\n\n\n\n\n\n\nBaseInit\n\n\nInit\n\n\nnone\n\n\nphi[0], phi[1], phi[2], phi[3], phi[4], phi[5], phi[6], phi[7], phi[8], g[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8], f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], h_0[0], h_0[1], h_0[2], h_0[3], h_0[4], h_0[5], h_0[6], h_0[7], h_0[8], h_1[0], h_1[1], h_1[2], h_1[3], h_1[4], h_1[5], h_1[6], h_1[7], h_1[8], BC[0], BC[1]\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIteration\n\n\n\n\n\n\nInit\n\n\nBaseInit",
            "title": "D2q9 npe guo"
        },
        {
            "location": "/models/electrokinetic/d2q9_npe_guo/#description",
            "text": "d2q9_npe_guo",
            "title": "Description"
        },
        {
            "location": "/models/electrokinetic/d2q9_npe_guo/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/electrokinetic/d2q9_npe_guo/#zonal-settings",
            "text": "Name  Comment      rho_bc  fluid density at  boundary    phi_bc  phi at  boundary    psi_bc  psi at  boundary - zeta    TotalMomentumInObj  Weight of [TotalMomentum] in objective",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/electrokinetic/d2q9_npe_guo/#global-settings",
            "text": "Name  Derived  Comment      n_inf_0      n_inf_1      el      el_kbT      epsilon      dt      psi0      phi0      ez      Ex      D   Ion diffusivity    nu   viscosity    t_to_s   time scale ratio    Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/electrokinetic/d2q9_npe_guo/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      F  kgm/s2  F    U  m/s  U    Rho  kg/m3  Rho    n0  An/m3  n0    n1  An/m3  n1    Psi  V  Psi    Phi  V  Phi    GradPsi  V/m  GradPsi    GradPhi  V/m  GradPhi    rho_e  C/m3  rho_e",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/electrokinetic/d2q9_npe_guo/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      TotalMomentum  1  TotalMomentum    Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/electrokinetic/d2q9_npe_guo/#node-types",
            "text": "Group  Types      BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, SSymmetry, NSymmetry, NVelocity, SVelocity    COLLISION  BGK, MRT    DESIGNSPACE  DesignSpace    NONE  None    OBJECTIVE  Inlet, Outlet    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/electrokinetic/d2q9_npe_guo/#solved-fields",
            "text": "Name  Access pattern  Comment      phi[0]   phi[0]    phi[1]   phi[1]    phi[2]   phi[2]    phi[3]   phi[3]    phi[4]   phi[4]    phi[5]   phi[5]    phi[6]   phi[6]    phi[7]   phi[7]    phi[8]   phi[8]    g[0]   g[0]    g[1]   g[1]    g[2]   g[2]    g[3]   g[3]    g[4]   g[4]    g[5]   g[5]    g[6]   g[6]    g[7]   g[7]    g[8]   g[8]    f[0]   f[0]    f[1]   f[1]    f[2]   f[2]    f[3]   f[3]    f[4]   f[4]    f[5]   f[5]    f[6]   f[6]    f[7]   f[7]    f[8]   f[8]    h_0[0]   h_0[0]    h_0[1]   h_0[1]    h_0[2]   h_0[2]    h_0[3]   h_0[3]    h_0[4]   h_0[4]    h_0[5]   h_0[5]    h_0[6]   h_0[6]    h_0[7]   h_0[7]    h_0[8]   h_0[8]    h_1[0]   h_1[0]    h_1[1]   h_1[1]    h_1[2]   h_1[2]    h_1[3]   h_1[3]    h_1[4]   h_1[4]    h_1[5]   h_1[5]    h_1[6]   h_1[6]    h_1[7]   h_1[7]    h_1[8]   h_1[8]    BC[0]   BC[0]    BC[1]   BC[1]",
            "title": "Solved fields"
        },
        {
            "location": "/models/electrokinetic/d2q9_npe_guo/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment      phi[0]  phi[0]   phi[0]    phi[1]  phi[1]   phi[1]    phi[2]  phi[2]   phi[2]    phi[3]  phi[3]   phi[3]    phi[4]  phi[4]   phi[4]    phi[5]  phi[5]   phi[5]    phi[6]  phi[6]   phi[6]    phi[7]  phi[7]   phi[7]    phi[8]  phi[8]   phi[8]    g[0]  g[0]   g[0]    g[1]  g[1]   g[1]    g[2]  g[2]   g[2]    g[3]  g[3]   g[3]    g[4]  g[4]   g[4]    g[5]  g[5]   g[5]    g[6]  g[6]   g[6]    g[7]  g[7]   g[7]    g[8]  g[8]   g[8]    f[0]  f[0]   f[0]    f[1]  f[1]   f[1]    f[2]  f[2]   f[2]    f[3]  f[3]   f[3]    f[4]  f[4]   f[4]    f[5]  f[5]   f[5]    f[6]  f[6]   f[6]    f[7]  f[7]   f[7]    f[8]  f[8]   f[8]    h_0[0]  h_0[0]   h_0[0]    h_0[1]  h_0[1]   h_0[1]    h_0[2]  h_0[2]   h_0[2]    h_0[3]  h_0[3]   h_0[3]    h_0[4]  h_0[4]   h_0[4]    h_0[5]  h_0[5]   h_0[5]    h_0[6]  h_0[6]   h_0[6]    h_0[7]  h_0[7]   h_0[7]    h_0[8]  h_0[8]   h_0[8]    h_1[0]  h_1[0]   h_1[0]    h_1[1]  h_1[1]   h_1[1]    h_1[2]  h_1[2]   h_1[2]    h_1[3]  h_1[3]   h_1[3]    h_1[4]  h_1[4]   h_1[4]    h_1[5]  h_1[5]   h_1[5]    h_1[6]  h_1[6]   h_1[6]    h_1[7]  h_1[7]   h_1[7]    h_1[8]  h_1[8]   h_1[8]    BC[0]  BC[0]   BC[0]    BC[1]  BC[1]   BC[1]",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/electrokinetic/d2q9_npe_guo/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      BaseIteration  Run  phi[0], phi[1], phi[2], phi[3], phi[4], phi[5], phi[6], phi[7], phi[8], g[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8], f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], h_0[0], h_0[1], h_0[2], h_0[3], h_0[4], h_0[5], h_0[6], h_0[7], h_0[8], h_1[0], h_1[1], h_1[2], h_1[3], h_1[4], h_1[5], h_1[6], h_1[7], h_1[8], BC[0], BC[1]  phi[0], phi[1], phi[2], phi[3], phi[4], phi[5], phi[6], phi[7], phi[8], g[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8], f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], h_0[0], h_0[1], h_0[2], h_0[3], h_0[4], h_0[5], h_0[6], h_0[7], h_0[8], h_1[0], h_1[1], h_1[2], h_1[3], h_1[4], h_1[5], h_1[6], h_1[7], h_1[8], BC[0], BC[1]    BaseInit  Init  none  phi[0], phi[1], phi[2], phi[3], phi[4], phi[5], phi[6], phi[7], phi[8], g[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8], f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], h_0[0], h_0[1], h_0[2], h_0[3], h_0[4], h_0[5], h_0[6], h_0[7], h_0[8], h_1[0], h_1[1], h_1[2], h_1[3], h_1[4], h_1[5], h_1[6], h_1[7], h_1[8], BC[0], BC[1]",
            "title": "Action stages"
        },
        {
            "location": "/models/electrokinetic/d2q9_npe_guo/#actions",
            "text": "Name  Stages      Iteration  BaseIteration    Init  BaseInit",
            "title": "Actions"
        },
        {
            "location": "/models/electrokinetic/d2q9_poison_boltzmann/",
            "text": "Description\n\n\nd2q9_poison_boltzmann\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\npsi_bc\n\n\npsi at  boundary - zeta\n\n\n\n\n\n\npsi0\n\n\ninitial psi - zeta\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\ntau_psi\n\n\n\n\ntau_psi\n\n\n\n\n\n\nn_inf\n\n\n\n\n\n\n\n\n\n\nz\n\n\n\n\n\n\n\n\n\n\nel\n\n\n\n\n\n\n\n\n\n\nkb\n\n\n\n\n\n\n\n\n\n\nT\n\n\n\n\n\n\n\n\n\n\nepsilon\n\n\n\n\n\n\n\n\n\n\ndt\n\n\n\n\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nPsi\n\n\n1\n\n\nPsi\n\n\n\n\n\n\nSubiter\n\n\n1\n\n\nSubiter\n\n\n\n\n\n\nrho_e\n\n\nkg/m3\n\n\nrho_e\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\ng[0]\n\n\n\n\ng[0]\n\n\n\n\n\n\ng[1]\n\n\n\n\ng[1]\n\n\n\n\n\n\ng[2]\n\n\n\n\ng[2]\n\n\n\n\n\n\ng[3]\n\n\n\n\ng[3]\n\n\n\n\n\n\ng[4]\n\n\n\n\ng[4]\n\n\n\n\n\n\ng[5]\n\n\n\n\ng[5]\n\n\n\n\n\n\ng[6]\n\n\n\n\ng[6]\n\n\n\n\n\n\ng[7]\n\n\n\n\ng[7]\n\n\n\n\n\n\ng[8]\n\n\n\n\ng[8]\n\n\n\n\n\n\nsubiter\n\n\n\n\nsubiter\n\n\n\n\n\n\npsi\n\n\n\n\npsi\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\ng[0]\n\n\ng[0]\n\n\n\n\ng[0]\n\n\n\n\n\n\ng[1]\n\n\ng[1]\n\n\n\n\ng[1]\n\n\n\n\n\n\ng[2]\n\n\ng[2]\n\n\n\n\ng[2]\n\n\n\n\n\n\ng[3]\n\n\ng[3]\n\n\n\n\ng[3]\n\n\n\n\n\n\ng[4]\n\n\ng[4]\n\n\n\n\ng[4]\n\n\n\n\n\n\ng[5]\n\n\ng[5]\n\n\n\n\ng[5]\n\n\n\n\n\n\ng[6]\n\n\ng[6]\n\n\n\n\ng[6]\n\n\n\n\n\n\ng[7]\n\n\ng[7]\n\n\n\n\ng[7]\n\n\n\n\n\n\ng[8]\n\n\ng[8]\n\n\n\n\ng[8]\n\n\n\n\n\n\nsubiter\n\n\nsubiter\n\n\n\n\nsubiter\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nBaseIteration\n\n\nRun\n\n\ng[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8]\n\n\ng[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8]\n\n\n\n\n\n\nCalcPsi\n\n\nCalcPsi\n\n\ng[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8]\n\n\npsi\n\n\n\n\n\n\nCalcSubiter\n\n\nCalcSubiter\n\n\nsubiter\n\n\nsubiter\n\n\n\n\n\n\nBaseInit\n\n\nInit\n\n\nnone\n\n\ng[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8], subiter, psi\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIteration, CalcPsi, CalcSubiter\n\n\n\n\n\n\nInit\n\n\nBaseInit",
            "title": "D2q9 poison boltzmann"
        },
        {
            "location": "/models/electrokinetic/d2q9_poison_boltzmann/#description",
            "text": "d2q9_poison_boltzmann",
            "title": "Description"
        },
        {
            "location": "/models/electrokinetic/d2q9_poison_boltzmann/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/electrokinetic/d2q9_poison_boltzmann/#zonal-settings",
            "text": "Name  Comment      psi_bc  psi at  boundary - zeta    psi0  initial psi - zeta",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/electrokinetic/d2q9_poison_boltzmann/#global-settings",
            "text": "Name  Derived  Comment      tau_psi   tau_psi    n_inf      z      el      kb      T      epsilon      dt      Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/electrokinetic/d2q9_poison_boltzmann/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      Psi  1  Psi    Subiter  1  Subiter    rho_e  kg/m3  rho_e",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/electrokinetic/d2q9_poison_boltzmann/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/electrokinetic/d2q9_poison_boltzmann/#node-types",
            "text": "Group  Types      BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity    COLLISION  BGK, MRT    DESIGNSPACE  DesignSpace    NONE  None    OBJECTIVE  Inlet, Outlet    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/electrokinetic/d2q9_poison_boltzmann/#solved-fields",
            "text": "Name  Access pattern  Comment      g[0]   g[0]    g[1]   g[1]    g[2]   g[2]    g[3]   g[3]    g[4]   g[4]    g[5]   g[5]    g[6]   g[6]    g[7]   g[7]    g[8]   g[8]    subiter   subiter    psi   psi",
            "title": "Solved fields"
        },
        {
            "location": "/models/electrokinetic/d2q9_poison_boltzmann/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment      g[0]  g[0]   g[0]    g[1]  g[1]   g[1]    g[2]  g[2]   g[2]    g[3]  g[3]   g[3]    g[4]  g[4]   g[4]    g[5]  g[5]   g[5]    g[6]  g[6]   g[6]    g[7]  g[7]   g[7]    g[8]  g[8]   g[8]    subiter  subiter   subiter",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/electrokinetic/d2q9_poison_boltzmann/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      BaseIteration  Run  g[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8]  g[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8]    CalcPsi  CalcPsi  g[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8]  psi    CalcSubiter  CalcSubiter  subiter  subiter    BaseInit  Init  none  g[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8], subiter, psi",
            "title": "Action stages"
        },
        {
            "location": "/models/electrokinetic/d2q9_poison_boltzmann/#actions",
            "text": "Name  Stages      Iteration  BaseIteration, CalcPsi, CalcSubiter    Init  BaseInit",
            "title": "Actions"
        },
        {
            "location": "/models/experimental/d2q9_diff/",
            "text": "Description\n\n\nd2q9_diff\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nDiffInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nnu0\n\n\n\n\nviscosity\n\n\n\n\n\n\nnu1\n\n\n\n\nviscosity\n\n\n\n\n\n\nInitDensity\n\n\n\n\ninlet pressure\n\n\n\n\n\n\nInletDensity\n\n\n\n\ninlet pressure\n\n\n\n\n\n\nOutletDensity\n\n\n\n\ninlet pressure\n\n\n\n\n\n\nDescent\n\n\n\n\nOptimization Descent\n\n\n\n\n\n\nGradientSmooth\n\n\n\n\nGradient smoothing in OptSolve\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nRho\n\n\nkg/m3\n\n\nRho\n\n\n\n\n\n\nRhoB\n\n\n1\n\n\nRhoB\n\n\n\n\n\n\nW\n\n\n1\n\n\nW\n\n\n\n\n\n\nR\n\n\n1\n\n\nR\n\n\n\n\n\n\nWB\n\n\n1\n\n\nWB\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nDiff\n\n\n1\n\n\npressure loss\n\n\n\n\n\n\nnu0_D\n\n\n1\n\n\nGradient of objective with respect to [viscosity]\n\n\n\n\n\n\nnu1_D\n\n\n1\n\n\nGradient of objective with respect to [viscosity]\n\n\n\n\n\n\nInitDensity_D\n\n\n1\n\n\nGradient of objective with respect to [inlet pressure]\n\n\n\n\n\n\nInletDensity_D\n\n\n1\n\n\nGradient of objective with respect to [inlet pressure]\n\n\n\n\n\n\nOutletDensity_D\n\n\n1\n\n\nGradient of objective with respect to [inlet pressure]\n\n\n\n\n\n\nAdjointRes\n\n\n1\n\n\nsquare L2 norm of adjoint change\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf0\n\n\n\n\nf0\n\n\n\n\n\n\nf1\n\n\n\n\nf1\n\n\n\n\n\n\nf2\n\n\n\n\nf2\n\n\n\n\n\n\nf3\n\n\n\n\nf3\n\n\n\n\n\n\nf4\n\n\n\n\nf4\n\n\n\n\n\n\nf5\n\n\n\n\nf5\n\n\n\n\n\n\nf6\n\n\n\n\nf6\n\n\n\n\n\n\nf7\n\n\n\n\nf7\n\n\n\n\n\n\nf8\n\n\n\n\nf8\n\n\n\n\n\n\nr\n\n\n\n\nr\n\n\n\n\n\n\nw\n\n\n\n\nw\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf0\n\n\nf0\n\n\n\n\nf0\n\n\n\n\n\n\nf1\n\n\nf1\n\n\n\n\nf1\n\n\n\n\n\n\nf2\n\n\nf2\n\n\n\n\nf2\n\n\n\n\n\n\nf3\n\n\nf3\n\n\n\n\nf3\n\n\n\n\n\n\nf4\n\n\nf4\n\n\n\n\nf4\n\n\n\n\n\n\nf5\n\n\nf5\n\n\n\n\nf5\n\n\n\n\n\n\nf6\n\n\nf6\n\n\n\n\nf6\n\n\n\n\n\n\nf7\n\n\nf7\n\n\n\n\nf7\n\n\n\n\n\n\nf8\n\n\nf8\n\n\n\n\nf8\n\n\n\n\n\n\nr\n\n\nr\n\n\n\n\nr\n\n\n\n\n\n\nw\n\n\nw\n\n\n\n\nw\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nBaseIteration\n\n\nRun\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8, r, w\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8, r, w\n\n\n\n\n\n\nBaseInit\n\n\nInit\n\n\nnone\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8, r, w\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIteration\n\n\n\n\n\n\nInit\n\n\nBaseInit",
            "title": "D2q9 diff"
        },
        {
            "location": "/models/experimental/d2q9_diff/#description",
            "text": "d2q9_diff",
            "title": "Description"
        },
        {
            "location": "/models/experimental/d2q9_diff/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/experimental/d2q9_diff/#zonal-settings",
            "text": "Name  Comment      DiffInObj  Weight of [pressure loss] in objective",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/experimental/d2q9_diff/#global-settings",
            "text": "Name  Derived  Comment      nu0   viscosity    nu1   viscosity    InitDensity   inlet pressure    InletDensity   inlet pressure    OutletDensity   inlet pressure    Descent   Optimization Descent    GradientSmooth   Gradient smoothing in OptSolve    Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/experimental/d2q9_diff/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      Rho  kg/m3  Rho    RhoB  1  RhoB    W  1  W    R  1  R    WB  1  WB",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/experimental/d2q9_diff/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      Diff  1  pressure loss    nu0_D  1  Gradient of objective with respect to [viscosity]    nu1_D  1  Gradient of objective with respect to [viscosity]    InitDensity_D  1  Gradient of objective with respect to [inlet pressure]    InletDensity_D  1  Gradient of objective with respect to [inlet pressure]    OutletDensity_D  1  Gradient of objective with respect to [inlet pressure]    AdjointRes  1  square L2 norm of adjoint change    Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/experimental/d2q9_diff/#node-types",
            "text": "Group  Types      BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity    COLLISION  BGK, MRT    DESIGNSPACE  DesignSpace    NONE  None    OBJECTIVE  Inlet, Outlet    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/experimental/d2q9_diff/#solved-fields",
            "text": "Name  Access pattern  Comment      f0   f0    f1   f1    f2   f2    f3   f3    f4   f4    f5   f5    f6   f6    f7   f7    f8   f8    r   r    w   w",
            "title": "Solved fields"
        },
        {
            "location": "/models/experimental/d2q9_diff/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment      f0  f0   f0    f1  f1   f1    f2  f2   f2    f3  f3   f3    f4  f4   f4    f5  f5   f5    f6  f6   f6    f7  f7   f7    f8  f8   f8    r  r   r    w  w   w",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/experimental/d2q9_diff/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      BaseIteration  Run  f0, f1, f2, f3, f4, f5, f6, f7, f8, r, w  f0, f1, f2, f3, f4, f5, f6, f7, f8, r, w    BaseInit  Init  none  f0, f1, f2, f3, f4, f5, f6, f7, f8, r, w",
            "title": "Action stages"
        },
        {
            "location": "/models/experimental/d2q9_diff/#actions",
            "text": "Name  Stages      Iteration  BaseIteration    Init  BaseInit",
            "title": "Actions"
        },
        {
            "location": "/models/experimental/d2q9_hb/",
            "text": "Description\n\n\nd2q9_hb\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nOutFluxInObj\n\n\nWeight of [OutFlux] in objective\n\n\n\n\n\n\nDestroyedCellFluxInObj\n\n\nWeight of [DestroyedCellFlux] in objective\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nomega\n\n\n1.0/(3*nu + 0.5)\n\n\none over relaxation time\n\n\n\n\n\n\nDestructionRate\n\n\n\n\nDestructionRate\n\n\n\n\n\n\nDestructionPower\n\n\n\n\nDestructionPower\n\n\n\n\n\n\nnu\n\n\n\n\nviscosity\n\n\n\n\n\n\nInletVelocity\n\n\n\n\ninlet velocity\n\n\n\n\n\n\nInletPressure\n\n\n\n\ninlet pressure\n\n\n\n\n\n\nInletDensity\n\n\n1.0+InletPressure/3\n\n\ninlet density\n\n\n\n\n\n\nInletTemperature\n\n\n\n\ninlet density\n\n\n\n\n\n\nInitTemperature\n\n\n\n\ninlet density\n\n\n\n\n\n\nFluidAlfa\n\n\n\n\ninlet density\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nRho\n\n\nkg/m3\n\n\nRho\n\n\n\n\n\n\nT\n\n\nK\n\n\nT\n\n\n\n\n\n\nQ\n\n\n1\n\n\nQ\n\n\n\n\n\n\nQxx\n\n\n1\n\n\nQxx\n\n\n\n\n\n\nQxy\n\n\n1\n\n\nQxy\n\n\n\n\n\n\nQyy\n\n\n1\n\n\nQyy\n\n\n\n\n\n\nSS\n\n\nN/m2\n\n\nSS\n\n\n\n\n\n\nU\n\n\nm/s\n\n\nU\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nOutFlux\n\n\n1\n\n\nOutFlux\n\n\n\n\n\n\nDestroyedCellFlux\n\n\n1\n\n\nDestroyedCellFlux\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nADDITIONALS\n\n\nDestroy, Outlet2, Heater\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf[0]\n\n\n\n\nf[0]\n\n\n\n\n\n\nf[1]\n\n\n\n\nf[1]\n\n\n\n\n\n\nf[2]\n\n\n\n\nf[2]\n\n\n\n\n\n\nf[3]\n\n\n\n\nf[3]\n\n\n\n\n\n\nf[4]\n\n\n\n\nf[4]\n\n\n\n\n\n\nf[5]\n\n\n\n\nf[5]\n\n\n\n\n\n\nf[6]\n\n\n\n\nf[6]\n\n\n\n\n\n\nf[7]\n\n\n\n\nf[7]\n\n\n\n\n\n\nf[8]\n\n\n\n\nf[8]\n\n\n\n\n\n\nT[0]\n\n\n\n\nT[0]\n\n\n\n\n\n\nT[1]\n\n\n\n\nT[1]\n\n\n\n\n\n\nT[2]\n\n\n\n\nT[2]\n\n\n\n\n\n\nT[3]\n\n\n\n\nT[3]\n\n\n\n\n\n\nT[4]\n\n\n\n\nT[4]\n\n\n\n\n\n\nT[5]\n\n\n\n\nT[5]\n\n\n\n\n\n\nT[6]\n\n\n\n\nT[6]\n\n\n\n\n\n\nT[7]\n\n\n\n\nT[7]\n\n\n\n\n\n\nT[8]\n\n\n\n\nT[8]\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf[0]\n\n\nf[0]\n\n\n\n\nf[0]\n\n\n\n\n\n\nf[1]\n\n\nf[1]\n\n\n\n\nf[1]\n\n\n\n\n\n\nf[2]\n\n\nf[2]\n\n\n\n\nf[2]\n\n\n\n\n\n\nf[3]\n\n\nf[3]\n\n\n\n\nf[3]\n\n\n\n\n\n\nf[4]\n\n\nf[4]\n\n\n\n\nf[4]\n\n\n\n\n\n\nf[5]\n\n\nf[5]\n\n\n\n\nf[5]\n\n\n\n\n\n\nf[6]\n\n\nf[6]\n\n\n\n\nf[6]\n\n\n\n\n\n\nf[7]\n\n\nf[7]\n\n\n\n\nf[7]\n\n\n\n\n\n\nf[8]\n\n\nf[8]\n\n\n\n\nf[8]\n\n\n\n\n\n\nT[0]\n\n\nT[0]\n\n\n\n\nT[0]\n\n\n\n\n\n\nT[1]\n\n\nT[1]\n\n\n\n\nT[1]\n\n\n\n\n\n\nT[2]\n\n\nT[2]\n\n\n\n\nT[2]\n\n\n\n\n\n\nT[3]\n\n\nT[3]\n\n\n\n\nT[3]\n\n\n\n\n\n\nT[4]\n\n\nT[4]\n\n\n\n\nT[4]\n\n\n\n\n\n\nT[5]\n\n\nT[5]\n\n\n\n\nT[5]\n\n\n\n\n\n\nT[6]\n\n\nT[6]\n\n\n\n\nT[6]\n\n\n\n\n\n\nT[7]\n\n\nT[7]\n\n\n\n\nT[7]\n\n\n\n\n\n\nT[8]\n\n\nT[8]\n\n\n\n\nT[8]\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nBaseIteration\n\n\nRun\n\n\nf[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], T[0], T[1], T[2], T[3], T[4], T[5], T[6], T[7], T[8]\n\n\nf[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], T[0], T[1], T[2], T[3], T[4], T[5], T[6], T[7], T[8]\n\n\n\n\n\n\nBaseInit\n\n\nInit\n\n\nnone\n\n\nf[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], T[0], T[1], T[2], T[3], T[4], T[5], T[6], T[7], T[8]\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIteration\n\n\n\n\n\n\nInit\n\n\nBaseInit",
            "title": "D2q9 hb"
        },
        {
            "location": "/models/experimental/d2q9_hb/#description",
            "text": "d2q9_hb",
            "title": "Description"
        },
        {
            "location": "/models/experimental/d2q9_hb/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/experimental/d2q9_hb/#zonal-settings",
            "text": "Name  Comment      OutFluxInObj  Weight of [OutFlux] in objective    DestroyedCellFluxInObj  Weight of [DestroyedCellFlux] in objective",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/experimental/d2q9_hb/#global-settings",
            "text": "Name  Derived  Comment      omega  1.0/(3*nu + 0.5)  one over relaxation time    DestructionRate   DestructionRate    DestructionPower   DestructionPower    nu   viscosity    InletVelocity   inlet velocity    InletPressure   inlet pressure    InletDensity  1.0+InletPressure/3  inlet density    InletTemperature   inlet density    InitTemperature   inlet density    FluidAlfa   inlet density    Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/experimental/d2q9_hb/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      Rho  kg/m3  Rho    T  K  T    Q  1  Q    Qxx  1  Qxx    Qxy  1  Qxy    Qyy  1  Qyy    SS  N/m2  SS    U  m/s  U",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/experimental/d2q9_hb/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      OutFlux  1  OutFlux    DestroyedCellFlux  1  DestroyedCellFlux    Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/experimental/d2q9_hb/#node-types",
            "text": "Group  Types      ADDITIONALS  Destroy, Outlet2, Heater    BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity    COLLISION  BGK, MRT    DESIGNSPACE  DesignSpace    NONE  None    OBJECTIVE  Inlet, Outlet    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/experimental/d2q9_hb/#solved-fields",
            "text": "Name  Access pattern  Comment      f[0]   f[0]    f[1]   f[1]    f[2]   f[2]    f[3]   f[3]    f[4]   f[4]    f[5]   f[5]    f[6]   f[6]    f[7]   f[7]    f[8]   f[8]    T[0]   T[0]    T[1]   T[1]    T[2]   T[2]    T[3]   T[3]    T[4]   T[4]    T[5]   T[5]    T[6]   T[6]    T[7]   T[7]    T[8]   T[8]",
            "title": "Solved fields"
        },
        {
            "location": "/models/experimental/d2q9_hb/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment      f[0]  f[0]   f[0]    f[1]  f[1]   f[1]    f[2]  f[2]   f[2]    f[3]  f[3]   f[3]    f[4]  f[4]   f[4]    f[5]  f[5]   f[5]    f[6]  f[6]   f[6]    f[7]  f[7]   f[7]    f[8]  f[8]   f[8]    T[0]  T[0]   T[0]    T[1]  T[1]   T[1]    T[2]  T[2]   T[2]    T[3]  T[3]   T[3]    T[4]  T[4]   T[4]    T[5]  T[5]   T[5]    T[6]  T[6]   T[6]    T[7]  T[7]   T[7]    T[8]  T[8]   T[8]",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/experimental/d2q9_hb/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      BaseIteration  Run  f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], T[0], T[1], T[2], T[3], T[4], T[5], T[6], T[7], T[8]  f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], T[0], T[1], T[2], T[3], T[4], T[5], T[6], T[7], T[8]    BaseInit  Init  none  f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], T[0], T[1], T[2], T[3], T[4], T[5], T[6], T[7], T[8]",
            "title": "Action stages"
        },
        {
            "location": "/models/experimental/d2q9_hb/#actions",
            "text": "Name  Stages      Iteration  BaseIteration    Init  BaseInit",
            "title": "Actions"
        },
        {
            "location": "/models/experimental/d2q9_inc/",
            "text": "Description\n\n\nd2q9_inc\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nVelocity\n\n\ninlet/outlet/init velocity\n\n\n\n\n\n\nDensity\n\n\ninlet/outlet/init density\n\n\n\n\n\n\nPressureLossInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\nOutletFluxInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\nInletFluxInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nomega\n\n\n1.0/(3*nu + 0.5)\n\n\none over relaxation time\n\n\n\n\n\n\nnu\n\n\n\n\nviscosity\n\n\n\n\n\n\nGravitationY\n\n\n\n\nGravitation in the direction of y\n\n\n\n\n\n\nGravitationX\n\n\n\n\nGravitation in the direction of x\n\n\n\n\n\n\nS3\n\n\n\n\nMRT Sx\n\n\n\n\n\n\nS4\n\n\n\n\nMRT Sx\n\n\n\n\n\n\nS56\n\n\n\n\nMRT Sx\n\n\n\n\n\n\nS78\n\n\n1-omega\n\n\nMRT Sx\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nRho\n\n\nkg/m3\n\n\nRho\n\n\n\n\n\n\nU\n\n\nm/s\n\n\nU\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nPressureLoss\n\n\n1mPa\n\n\npressure loss\n\n\n\n\n\n\nOutletFlux\n\n\n1m2/s\n\n\npressure loss\n\n\n\n\n\n\nInletFlux\n\n\n1m2/s\n\n\npressure loss\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, BottomSymmetry, TopSymmetry\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf[0]\n\n\n\n\nf[0]\n\n\n\n\n\n\nf[1]\n\n\n\n\nf[1]\n\n\n\n\n\n\nf[2]\n\n\n\n\nf[2]\n\n\n\n\n\n\nf[3]\n\n\n\n\nf[3]\n\n\n\n\n\n\nf[4]\n\n\n\n\nf[4]\n\n\n\n\n\n\nf[5]\n\n\n\n\nf[5]\n\n\n\n\n\n\nf[6]\n\n\n\n\nf[6]\n\n\n\n\n\n\nf[7]\n\n\n\n\nf[7]\n\n\n\n\n\n\nf[8]\n\n\n\n\nf[8]\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf[0]\n\n\nf[0]\n\n\n\n\nf[0]\n\n\n\n\n\n\nf[1]\n\n\nf[1]\n\n\n\n\nf[1]\n\n\n\n\n\n\nf[2]\n\n\nf[2]\n\n\n\n\nf[2]\n\n\n\n\n\n\nf[3]\n\n\nf[3]\n\n\n\n\nf[3]\n\n\n\n\n\n\nf[4]\n\n\nf[4]\n\n\n\n\nf[4]\n\n\n\n\n\n\nf[5]\n\n\nf[5]\n\n\n\n\nf[5]\n\n\n\n\n\n\nf[6]\n\n\nf[6]\n\n\n\n\nf[6]\n\n\n\n\n\n\nf[7]\n\n\nf[7]\n\n\n\n\nf[7]\n\n\n\n\n\n\nf[8]\n\n\nf[8]\n\n\n\n\nf[8]\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nBaseIteration\n\n\nRun\n\n\nf[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8]\n\n\nf[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8]\n\n\n\n\n\n\nBaseInit\n\n\nInit\n\n\nnone\n\n\nf[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8]\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIteration\n\n\n\n\n\n\nInit\n\n\nBaseInit",
            "title": "D2q9 inc"
        },
        {
            "location": "/models/experimental/d2q9_inc/#description",
            "text": "d2q9_inc",
            "title": "Description"
        },
        {
            "location": "/models/experimental/d2q9_inc/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/experimental/d2q9_inc/#zonal-settings",
            "text": "Name  Comment      Velocity  inlet/outlet/init velocity    Density  inlet/outlet/init density    PressureLossInObj  Weight of [pressure loss] in objective    OutletFluxInObj  Weight of [pressure loss] in objective    InletFluxInObj  Weight of [pressure loss] in objective",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/experimental/d2q9_inc/#global-settings",
            "text": "Name  Derived  Comment      omega  1.0/(3*nu + 0.5)  one over relaxation time    nu   viscosity    GravitationY   Gravitation in the direction of y    GravitationX   Gravitation in the direction of x    S3   MRT Sx    S4   MRT Sx    S56   MRT Sx    S78  1-omega  MRT Sx    Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/experimental/d2q9_inc/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      Rho  kg/m3  Rho    U  m/s  U",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/experimental/d2q9_inc/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      PressureLoss  1mPa  pressure loss    OutletFlux  1m2/s  pressure loss    InletFlux  1m2/s  pressure loss    Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/experimental/d2q9_inc/#node-types",
            "text": "Group  Types      BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, BottomSymmetry, TopSymmetry    COLLISION  BGK, MRT    DESIGNSPACE  DesignSpace    NONE  None    OBJECTIVE  Inlet, Outlet    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/experimental/d2q9_inc/#solved-fields",
            "text": "Name  Access pattern  Comment      f[0]   f[0]    f[1]   f[1]    f[2]   f[2]    f[3]   f[3]    f[4]   f[4]    f[5]   f[5]    f[6]   f[6]    f[7]   f[7]    f[8]   f[8]",
            "title": "Solved fields"
        },
        {
            "location": "/models/experimental/d2q9_inc/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment      f[0]  f[0]   f[0]    f[1]  f[1]   f[1]    f[2]  f[2]   f[2]    f[3]  f[3]   f[3]    f[4]  f[4]   f[4]    f[5]  f[5]   f[5]    f[6]  f[6]   f[6]    f[7]  f[7]   f[7]    f[8]  f[8]   f[8]",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/experimental/d2q9_inc/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      BaseIteration  Run  f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8]  f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8]    BaseInit  Init  none  f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8]",
            "title": "Action stages"
        },
        {
            "location": "/models/experimental/d2q9_inc/#actions",
            "text": "Name  Stages      Iteration  BaseIteration    Init  BaseInit",
            "title": "Actions"
        },
        {
            "location": "/models/flow/d2q9_SRT/",
            "text": "Description\n\n\nd2q9_SRT\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nVelocity\n\n\ninlet/outlet/init velocity\n\n\n\n\n\n\nVelocity_x\n\n\ninlet/outlet/init velocity in x\n\n\n\n\n\n\nVelocity_y\n\n\ninlet/outlet/init velocity in y\n\n\n\n\n\n\nGravitationX\n\n\nbody/external acceleration\n\n\n\n\n\n\nGravitationY\n\n\nbody/external acceleration\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nomega\n\n\n1.0/(3*nu+0.5)\n\n\ninverse of relaxation time\n\n\n\n\n\n\nnu\n\n\n\n\nviscosity\n\n\n\n\n\n\nDensity\n\n\n\n\nDensity\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nU\n\n\nm/s\n\n\nU\n\n\n\n\n\n\nRho\n\n\nkg/m3\n\n\nRho\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf[0]\n\n\n\n\nf[0]\n\n\n\n\n\n\nf[1]\n\n\n\n\nf[1]\n\n\n\n\n\n\nf[2]\n\n\n\n\nf[2]\n\n\n\n\n\n\nf[3]\n\n\n\n\nf[3]\n\n\n\n\n\n\nf[4]\n\n\n\n\nf[4]\n\n\n\n\n\n\nf[5]\n\n\n\n\nf[5]\n\n\n\n\n\n\nf[6]\n\n\n\n\nf[6]\n\n\n\n\n\n\nf[7]\n\n\n\n\nf[7]\n\n\n\n\n\n\nf[8]\n\n\n\n\nf[8]\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf[0]\n\n\nf[0]\n\n\n\n\nf[0]\n\n\n\n\n\n\nf[1]\n\n\nf[1]\n\n\n\n\nf[1]\n\n\n\n\n\n\nf[2]\n\n\nf[2]\n\n\n\n\nf[2]\n\n\n\n\n\n\nf[3]\n\n\nf[3]\n\n\n\n\nf[3]\n\n\n\n\n\n\nf[4]\n\n\nf[4]\n\n\n\n\nf[4]\n\n\n\n\n\n\nf[5]\n\n\nf[5]\n\n\n\n\nf[5]\n\n\n\n\n\n\nf[6]\n\n\nf[6]\n\n\n\n\nf[6]\n\n\n\n\n\n\nf[7]\n\n\nf[7]\n\n\n\n\nf[7]\n\n\n\n\n\n\nf[8]\n\n\nf[8]\n\n\n\n\nf[8]\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nBaseIteration\n\n\nRun\n\n\nf[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8]\n\n\nf[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8]\n\n\n\n\n\n\nBaseInit\n\n\nInit\n\n\nnone\n\n\nf[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8]\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIteration\n\n\n\n\n\n\nInit\n\n\nBaseInit",
            "title": "d2q9 SRT"
        },
        {
            "location": "/models/flow/d2q9_SRT/#description",
            "text": "d2q9_SRT",
            "title": "Description"
        },
        {
            "location": "/models/flow/d2q9_SRT/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/flow/d2q9_SRT/#zonal-settings",
            "text": "Name  Comment      Velocity  inlet/outlet/init velocity    Velocity_x  inlet/outlet/init velocity in x    Velocity_y  inlet/outlet/init velocity in y    GravitationX  body/external acceleration    GravitationY  body/external acceleration",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/flow/d2q9_SRT/#global-settings",
            "text": "Name  Derived  Comment      omega  1.0/(3*nu+0.5)  inverse of relaxation time    nu   viscosity    Density   Density    Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/flow/d2q9_SRT/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      U  m/s  U    Rho  kg/m3  Rho",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/flow/d2q9_SRT/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/flow/d2q9_SRT/#node-types",
            "text": "Group  Types      BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity    COLLISION  BGK, MRT    DESIGNSPACE  DesignSpace    NONE  None    OBJECTIVE  Inlet, Outlet    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/flow/d2q9_SRT/#solved-fields",
            "text": "Name  Access pattern  Comment      f[0]   f[0]    f[1]   f[1]    f[2]   f[2]    f[3]   f[3]    f[4]   f[4]    f[5]   f[5]    f[6]   f[6]    f[7]   f[7]    f[8]   f[8]",
            "title": "Solved fields"
        },
        {
            "location": "/models/flow/d2q9_SRT/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment      f[0]  f[0]   f[0]    f[1]  f[1]   f[1]    f[2]  f[2]   f[2]    f[3]  f[3]   f[3]    f[4]  f[4]   f[4]    f[5]  f[5]   f[5]    f[6]  f[6]   f[6]    f[7]  f[7]   f[7]    f[8]  f[8]   f[8]",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/flow/d2q9_SRT/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      BaseIteration  Run  f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8]  f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8]    BaseInit  Init  none  f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8]",
            "title": "Action stages"
        },
        {
            "location": "/models/flow/d2q9_SRT/#actions",
            "text": "Name  Stages      Iteration  BaseIteration    Init  BaseInit",
            "title": "Actions"
        },
        {
            "location": "/models/flow/d2q9_cumulant/",
            "text": "Description\n\n\nd2q9_cumulant\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nVelocity\n\n\ninlet/outlet/init velocity\n\n\n\n\n\n\nPressure\n\n\ninlet/outlet/init density\n\n\n\n\n\n\nDensity\n\n\ninlet/outlet/init density\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nnu\n\n\n\n\nviscosity\n\n\n\n\n\n\nnubuffer\n\n\n\n\nViscosity in the buffer layer\n\n\n\n\n\n\nForceX\n\n\n\n\nForceX\n\n\n\n\n\n\nForceY\n\n\n\n\nForceY\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nRho\n\n\nkg/m3\n\n\nRho\n\n\n\n\n\n\nU\n\n\nm/s\n\n\nU\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf[0]\n\n\n\n\nf[0]\n\n\n\n\n\n\nf[1]\n\n\n\n\nf[1]\n\n\n\n\n\n\nf[2]\n\n\n\n\nf[2]\n\n\n\n\n\n\nf[3]\n\n\n\n\nf[3]\n\n\n\n\n\n\nf[4]\n\n\n\n\nf[4]\n\n\n\n\n\n\nf[5]\n\n\n\n\nf[5]\n\n\n\n\n\n\nf[6]\n\n\n\n\nf[6]\n\n\n\n\n\n\nf[7]\n\n\n\n\nf[7]\n\n\n\n\n\n\nf[8]\n\n\n\n\nf[8]\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf[0]\n\n\nf[0]\n\n\n\n\nf[0]\n\n\n\n\n\n\nf[1]\n\n\nf[1]\n\n\n\n\nf[1]\n\n\n\n\n\n\nf[2]\n\n\nf[2]\n\n\n\n\nf[2]\n\n\n\n\n\n\nf[3]\n\n\nf[3]\n\n\n\n\nf[3]\n\n\n\n\n\n\nf[4]\n\n\nf[4]\n\n\n\n\nf[4]\n\n\n\n\n\n\nf[5]\n\n\nf[5]\n\n\n\n\nf[5]\n\n\n\n\n\n\nf[6]\n\n\nf[6]\n\n\n\n\nf[6]\n\n\n\n\n\n\nf[7]\n\n\nf[7]\n\n\n\n\nf[7]\n\n\n\n\n\n\nf[8]\n\n\nf[8]\n\n\n\n\nf[8]\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nBaseIteration\n\n\nRun\n\n\nf[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8]\n\n\nf[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8]\n\n\n\n\n\n\nBaseInit\n\n\nInit\n\n\nnone\n\n\nf[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8]\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIteration\n\n\n\n\n\n\nInit\n\n\nBaseInit",
            "title": "D2q9 cumulant"
        },
        {
            "location": "/models/flow/d2q9_cumulant/#description",
            "text": "d2q9_cumulant",
            "title": "Description"
        },
        {
            "location": "/models/flow/d2q9_cumulant/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/flow/d2q9_cumulant/#zonal-settings",
            "text": "Name  Comment      Velocity  inlet/outlet/init velocity    Pressure  inlet/outlet/init density    Density  inlet/outlet/init density",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/flow/d2q9_cumulant/#global-settings",
            "text": "Name  Derived  Comment      nu   viscosity    nubuffer   Viscosity in the buffer layer    ForceX   ForceX    ForceY   ForceY    Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/flow/d2q9_cumulant/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      Rho  kg/m3  Rho    U  m/s  U",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/flow/d2q9_cumulant/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/flow/d2q9_cumulant/#node-types",
            "text": "Group  Types      BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity    COLLISION  BGK, MRT    DESIGNSPACE  DesignSpace    NONE  None    OBJECTIVE  Inlet, Outlet    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/flow/d2q9_cumulant/#solved-fields",
            "text": "Name  Access pattern  Comment      f[0]   f[0]    f[1]   f[1]    f[2]   f[2]    f[3]   f[3]    f[4]   f[4]    f[5]   f[5]    f[6]   f[6]    f[7]   f[7]    f[8]   f[8]",
            "title": "Solved fields"
        },
        {
            "location": "/models/flow/d2q9_cumulant/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment      f[0]  f[0]   f[0]    f[1]  f[1]   f[1]    f[2]  f[2]   f[2]    f[3]  f[3]   f[3]    f[4]  f[4]   f[4]    f[5]  f[5]   f[5]    f[6]  f[6]   f[6]    f[7]  f[7]   f[7]    f[8]  f[8]   f[8]",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/flow/d2q9_cumulant/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      BaseIteration  Run  f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8]  f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8]    BaseInit  Init  none  f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8]",
            "title": "Action stages"
        },
        {
            "location": "/models/flow/d2q9_cumulant/#actions",
            "text": "Name  Stages      Iteration  BaseIteration    Init  BaseInit",
            "title": "Actions"
        },
        {
            "location": "/models/flow/d2q9_les/",
            "text": "Description\n\n\nd2q9_les\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nVelocity\n\n\ninlet/outlet/init velocity\n\n\n\n\n\n\nDensity\n\n\ninlet/outlet/init density\n\n\n\n\n\n\nPressDiffInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\nTotalPressureFluxInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\nOutletFluxInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\nInletPressureIntegralInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\ntau0\n\n\n3*nu + 0.5\n\n\none over relaxation time\n\n\n\n\n\n\nnu\n\n\n\n\nviscosity\n\n\n\n\n\n\nSmag\n\n\n\n\ninlet density\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nRho\n\n\nkg/m3\n\n\nRho\n\n\n\n\n\n\nU\n\n\nm/s\n\n\nU\n\n\n\n\n\n\nRhoB\n\n\n1\n\n\nRhoB\n\n\n\n\n\n\nUB\n\n\n1\n\n\nUB\n\n\n\n\n\n\nW\n\n\n1\n\n\nW\n\n\n\n\n\n\nWB\n\n\n1\n\n\nWB\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nPressDiff\n\n\n1\n\n\npressure loss\n\n\n\n\n\n\nTotalPressureFlux\n\n\n1\n\n\npressure loss\n\n\n\n\n\n\nOutletFlux\n\n\n1\n\n\npressure loss\n\n\n\n\n\n\nInletPressureIntegral\n\n\n1\n\n\npressure loss\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf0\n\n\n\n\nf0\n\n\n\n\n\n\nf1\n\n\n\n\nf1\n\n\n\n\n\n\nf2\n\n\n\n\nf2\n\n\n\n\n\n\nf3\n\n\n\n\nf3\n\n\n\n\n\n\nf4\n\n\n\n\nf4\n\n\n\n\n\n\nf5\n\n\n\n\nf5\n\n\n\n\n\n\nf6\n\n\n\n\nf6\n\n\n\n\n\n\nf7\n\n\n\n\nf7\n\n\n\n\n\n\nf8\n\n\n\n\nf8\n\n\n\n\n\n\nw\n\n\n\n\nw\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf0\n\n\nf0\n\n\n\n\nf0\n\n\n\n\n\n\nf1\n\n\nf1\n\n\n\n\nf1\n\n\n\n\n\n\nf2\n\n\nf2\n\n\n\n\nf2\n\n\n\n\n\n\nf3\n\n\nf3\n\n\n\n\nf3\n\n\n\n\n\n\nf4\n\n\nf4\n\n\n\n\nf4\n\n\n\n\n\n\nf5\n\n\nf5\n\n\n\n\nf5\n\n\n\n\n\n\nf6\n\n\nf6\n\n\n\n\nf6\n\n\n\n\n\n\nf7\n\n\nf7\n\n\n\n\nf7\n\n\n\n\n\n\nf8\n\n\nf8\n\n\n\n\nf8\n\n\n\n\n\n\nw\n\n\nw\n\n\n\n\nw\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nBaseIteration\n\n\nRun\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8, w\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8, w\n\n\n\n\n\n\nBaseInit\n\n\nInit\n\n\nnone\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8, w\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIteration\n\n\n\n\n\n\nInit\n\n\nBaseInit",
            "title": "D2q9 les"
        },
        {
            "location": "/models/flow/d2q9_les/#description",
            "text": "d2q9_les",
            "title": "Description"
        },
        {
            "location": "/models/flow/d2q9_les/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/flow/d2q9_les/#zonal-settings",
            "text": "Name  Comment      Velocity  inlet/outlet/init velocity    Density  inlet/outlet/init density    PressDiffInObj  Weight of [pressure loss] in objective    TotalPressureFluxInObj  Weight of [pressure loss] in objective    OutletFluxInObj  Weight of [pressure loss] in objective    InletPressureIntegralInObj  Weight of [pressure loss] in objective",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/flow/d2q9_les/#global-settings",
            "text": "Name  Derived  Comment      tau0  3*nu + 0.5  one over relaxation time    nu   viscosity    Smag   inlet density    Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/flow/d2q9_les/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      Rho  kg/m3  Rho    U  m/s  U    RhoB  1  RhoB    UB  1  UB    W  1  W    WB  1  WB",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/flow/d2q9_les/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      PressDiff  1  pressure loss    TotalPressureFlux  1  pressure loss    OutletFlux  1  pressure loss    InletPressureIntegral  1  pressure loss    Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/flow/d2q9_les/#node-types",
            "text": "Group  Types      BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity    COLLISION  BGK, MRT    DESIGNSPACE  DesignSpace    NONE  None    OBJECTIVE  Inlet, Outlet    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/flow/d2q9_les/#solved-fields",
            "text": "Name  Access pattern  Comment      f0   f0    f1   f1    f2   f2    f3   f3    f4   f4    f5   f5    f6   f6    f7   f7    f8   f8    w   w",
            "title": "Solved fields"
        },
        {
            "location": "/models/flow/d2q9_les/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment      f0  f0   f0    f1  f1   f1    f2  f2   f2    f3  f3   f3    f4  f4   f4    f5  f5   f5    f6  f6   f6    f7  f7   f7    f8  f8   f8    w  w   w",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/flow/d2q9_les/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      BaseIteration  Run  f0, f1, f2, f3, f4, f5, f6, f7, f8, w  f0, f1, f2, f3, f4, f5, f6, f7, f8, w    BaseInit  Init  none  f0, f1, f2, f3, f4, f5, f6, f7, f8, w",
            "title": "Action stages"
        },
        {
            "location": "/models/flow/d2q9_les/#actions",
            "text": "Name  Stages      Iteration  BaseIteration    Init  BaseInit",
            "title": "Actions"
        },
        {
            "location": "/models/flow/d2q9_thin_film/",
            "text": "Description\n\n\nd2q9_thin_film\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nVelocityX\n\n\ninlet/outlet/init velocity\n\n\n\n\n\n\nVelocityY\n\n\ninlet/outlet/init velocity\n\n\n\n\n\n\nPressure\n\n\ninlet/outlet/init density\n\n\n\n\n\n\nHeight\n\n\niinitial height in Z direction\n\n\n\n\n\n\nBrinkmanHeightInv\n\n\nBrinkmanHeightInv\n\n\n\n\n\n\nPressureLossInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\nOutletFluxInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\nInletFluxInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nRelaxationRate\n\n\n1.0/(3*Viscosity + 0.5)\n\n\none over relaxation time\n\n\n\n\n\n\nViscosity\n\n\n\n\nviscosity\n\n\n\n\n\n\nGravitationX\n\n\n\n\nGravitationX\n\n\n\n\n\n\nGravitationY\n\n\n\n\nGravitationY\n\n\n\n\n\n\nS2\n\n\n1-RelaxationRate\n\n\nMRT Sx\n\n\n\n\n\n\nS3\n\n\n\n\nMRT Sx\n\n\n\n\n\n\nS4\n\n\n\n\nMRT Sx\n\n\n\n\n\n\nnubuffer\n\n\n\n\nViscosity in the buffer layer (cumulant)\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nRho\n\n\nkg/m3\n\n\nRho\n\n\n\n\n\n\nU\n\n\nm/s\n\n\nU\n\n\n\n\n\n\nH_Z\n\n\n1\n\n\nH_Z\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nPressureLoss\n\n\n1mPa\n\n\npressure loss\n\n\n\n\n\n\nOutletFlux\n\n\n1m2/s\n\n\npressure loss\n\n\n\n\n\n\nInletFlux\n\n\n1m2/s\n\n\npressure loss\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, NVelocity, SVelocity, NSymmetry, SSymmetry\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT, Cumulant\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf[0]\n\n\n\n\nf[0]\n\n\n\n\n\n\nf[1]\n\n\n\n\nf[1]\n\n\n\n\n\n\nf[2]\n\n\n\n\nf[2]\n\n\n\n\n\n\nf[3]\n\n\n\n\nf[3]\n\n\n\n\n\n\nf[4]\n\n\n\n\nf[4]\n\n\n\n\n\n\nf[5]\n\n\n\n\nf[5]\n\n\n\n\n\n\nf[6]\n\n\n\n\nf[6]\n\n\n\n\n\n\nf[7]\n\n\n\n\nf[7]\n\n\n\n\n\n\nf[8]\n\n\n\n\nf[8]\n\n\n\n\n\n\nh_Z\n\n\n\n\nh_Z\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf[0]\n\n\nf[0]\n\n\n\n\nf[0]\n\n\n\n\n\n\nf[1]\n\n\nf[1]\n\n\n\n\nf[1]\n\n\n\n\n\n\nf[2]\n\n\nf[2]\n\n\n\n\nf[2]\n\n\n\n\n\n\nf[3]\n\n\nf[3]\n\n\n\n\nf[3]\n\n\n\n\n\n\nf[4]\n\n\nf[4]\n\n\n\n\nf[4]\n\n\n\n\n\n\nf[5]\n\n\nf[5]\n\n\n\n\nf[5]\n\n\n\n\n\n\nf[6]\n\n\nf[6]\n\n\n\n\nf[6]\n\n\n\n\n\n\nf[7]\n\n\nf[7]\n\n\n\n\nf[7]\n\n\n\n\n\n\nf[8]\n\n\nf[8]\n\n\n\n\nf[8]\n\n\n\n\n\n\nh_Z\n\n\nh_Z\n\n\n\n\nh_Z\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nBaseIteration\n\n\nRun\n\n\nf[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], h_Z\n\n\nf[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], h_Z\n\n\n\n\n\n\nBaseInit\n\n\nInit\n\n\nnone\n\n\nf[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], h_Z\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIteration\n\n\n\n\n\n\nInit\n\n\nBaseInit",
            "title": "D2q9 thin film"
        },
        {
            "location": "/models/flow/d2q9_thin_film/#description",
            "text": "d2q9_thin_film",
            "title": "Description"
        },
        {
            "location": "/models/flow/d2q9_thin_film/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/flow/d2q9_thin_film/#zonal-settings",
            "text": "Name  Comment      VelocityX  inlet/outlet/init velocity    VelocityY  inlet/outlet/init velocity    Pressure  inlet/outlet/init density    Height  iinitial height in Z direction    BrinkmanHeightInv  BrinkmanHeightInv    PressureLossInObj  Weight of [pressure loss] in objective    OutletFluxInObj  Weight of [pressure loss] in objective    InletFluxInObj  Weight of [pressure loss] in objective",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/flow/d2q9_thin_film/#global-settings",
            "text": "Name  Derived  Comment      RelaxationRate  1.0/(3*Viscosity + 0.5)  one over relaxation time    Viscosity   viscosity    GravitationX   GravitationX    GravitationY   GravitationY    S2  1-RelaxationRate  MRT Sx    S3   MRT Sx    S4   MRT Sx    nubuffer   Viscosity in the buffer layer (cumulant)    Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/flow/d2q9_thin_film/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      Rho  kg/m3  Rho    U  m/s  U    H_Z  1  H_Z",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/flow/d2q9_thin_film/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      PressureLoss  1mPa  pressure loss    OutletFlux  1m2/s  pressure loss    InletFlux  1m2/s  pressure loss    Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/flow/d2q9_thin_film/#node-types",
            "text": "Group  Types      BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, NVelocity, SVelocity, NSymmetry, SSymmetry    COLLISION  BGK, MRT, Cumulant    DESIGNSPACE  DesignSpace    NONE  None    OBJECTIVE  Inlet, Outlet    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/flow/d2q9_thin_film/#solved-fields",
            "text": "Name  Access pattern  Comment      f[0]   f[0]    f[1]   f[1]    f[2]   f[2]    f[3]   f[3]    f[4]   f[4]    f[5]   f[5]    f[6]   f[6]    f[7]   f[7]    f[8]   f[8]    h_Z   h_Z",
            "title": "Solved fields"
        },
        {
            "location": "/models/flow/d2q9_thin_film/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment      f[0]  f[0]   f[0]    f[1]  f[1]   f[1]    f[2]  f[2]   f[2]    f[3]  f[3]   f[3]    f[4]  f[4]   f[4]    f[5]  f[5]   f[5]    f[6]  f[6]   f[6]    f[7]  f[7]   f[7]    f[8]  f[8]   f[8]    h_Z  h_Z   h_Z",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/flow/d2q9_thin_film/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      BaseIteration  Run  f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], h_Z  f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], h_Z    BaseInit  Init  none  f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], h_Z",
            "title": "Action stages"
        },
        {
            "location": "/models/flow/d2q9_thin_film/#actions",
            "text": "Name  Stages      Iteration  BaseIteration    Init  BaseInit",
            "title": "Actions"
        },
        {
            "location": "/models/flow/d3q19/",
            "text": "Description\n\n\nd3q19\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nFluxInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXYvxInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXYvyInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXYvzInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXYrhoInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXYareaInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXZvxInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXZvyInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXZvzInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXZrhoInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXZareaInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nYZvxInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nYZvyInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nYZvzInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nYZrhoInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nYZareaInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nVOLvxInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nVOLvyInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nVOLvzInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nVOLpxInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nVOLpyInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nVOLpzInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nVOLrhoInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nVOLvolumeInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nMaxVInObj\n\n\nWeight of [Max velocity] in objective\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nomega\n\n\n1.0/(3*nu + 0.5)\n\n\nOne over relaxation time\n\n\n\n\n\n\nnu\n\n\n\n\nViscosity\n\n\n\n\n\n\nInletVelocity\n\n\n\n\nInlet velocity\n\n\n\n\n\n\nInletPressure\n\n\n\n\nInlet pressure\n\n\n\n\n\n\nInletDensity\n\n\n1.0+InletPressure*3\n\n\nInlet density\n\n\n\n\n\n\nForceX\n\n\n\n\nForce force X\n\n\n\n\n\n\nForceY\n\n\n\n\nForce force Y\n\n\n\n\n\n\nForceZ\n\n\n\n\nForce force Z\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nP\n\n\nPa\n\n\nP\n\n\n\n\n\n\nU\n\n\nm/s\n\n\nU\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nMaxV\n\n\nm3\n\n\nMax velocity\n\n\n\n\n\n\nFlux\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nXYvx\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nXYvy\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nXYvz\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nXYrho\n\n\nkg/m\n\n\nVolume flux\n\n\n\n\n\n\nXYarea\n\n\nm2\n\n\nVolume flux\n\n\n\n\n\n\nXZvx\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nXZvy\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nXZvz\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nXZrho\n\n\nkg/m\n\n\nVolume flux\n\n\n\n\n\n\nXZarea\n\n\nm2\n\n\nVolume flux\n\n\n\n\n\n\nYZvx\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nYZvy\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nYZvz\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nYZrho\n\n\nkg/m\n\n\nVolume flux\n\n\n\n\n\n\nYZarea\n\n\nm2\n\n\nVolume flux\n\n\n\n\n\n\nVOLvx\n\n\nm4/s\n\n\nVolume flux\n\n\n\n\n\n\nVOLvy\n\n\nm4/s\n\n\nVolume flux\n\n\n\n\n\n\nVOLvz\n\n\nm4/s\n\n\nVolume flux\n\n\n\n\n\n\nVOLpx\n\n\nmkg/s\n\n\nVolume flux\n\n\n\n\n\n\nVOLpy\n\n\nmkg/s\n\n\nVolume flux\n\n\n\n\n\n\nVOLpz\n\n\nmkg/s\n\n\nVolume flux\n\n\n\n\n\n\nVOLrho\n\n\nkg\n\n\nVolume flux\n\n\n\n\n\n\nVOLvolume\n\n\nm3\n\n\nVolume flux\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nADDITIONALS\n\n\nXYslice, XZslice, YZslice\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf0\n\n\n\n\ndensity F 0\n\n\n\n\n\n\nf1\n\n\n\n\ndensity F 1\n\n\n\n\n\n\nf2\n\n\n\n\ndensity F 2\n\n\n\n\n\n\nf3\n\n\n\n\ndensity F 3\n\n\n\n\n\n\nf4\n\n\n\n\ndensity F 4\n\n\n\n\n\n\nf5\n\n\n\n\ndensity F 5\n\n\n\n\n\n\nf6\n\n\n\n\ndensity F 6\n\n\n\n\n\n\nf7\n\n\n\n\ndensity F 7\n\n\n\n\n\n\nf8\n\n\n\n\ndensity F 8\n\n\n\n\n\n\nf9\n\n\n\n\ndensity F 9\n\n\n\n\n\n\nf10\n\n\n\n\ndensity F 10\n\n\n\n\n\n\nf11\n\n\n\n\ndensity F 11\n\n\n\n\n\n\nf12\n\n\n\n\ndensity F 12\n\n\n\n\n\n\nf13\n\n\n\n\ndensity F 13\n\n\n\n\n\n\nf14\n\n\n\n\ndensity F 14\n\n\n\n\n\n\nf15\n\n\n\n\ndensity F 15\n\n\n\n\n\n\nf16\n\n\n\n\ndensity F 16\n\n\n\n\n\n\nf17\n\n\n\n\ndensity F 17\n\n\n\n\n\n\nf18\n\n\n\n\ndensity F 18\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf0\n\n\nf0\n\n\n\n\ndensity F 0\n\n\n\n\n\n\nf1\n\n\nf1\n\n\n\n\ndensity F 1\n\n\n\n\n\n\nf2\n\n\nf2\n\n\n\n\ndensity F 2\n\n\n\n\n\n\nf3\n\n\nf3\n\n\n\n\ndensity F 3\n\n\n\n\n\n\nf4\n\n\nf4\n\n\n\n\ndensity F 4\n\n\n\n\n\n\nf5\n\n\nf5\n\n\n\n\ndensity F 5\n\n\n\n\n\n\nf6\n\n\nf6\n\n\n\n\ndensity F 6\n\n\n\n\n\n\nf7\n\n\nf7\n\n\n\n\ndensity F 7\n\n\n\n\n\n\nf8\n\n\nf8\n\n\n\n\ndensity F 8\n\n\n\n\n\n\nf9\n\n\nf9\n\n\n\n\ndensity F 9\n\n\n\n\n\n\nf10\n\n\nf10\n\n\n\n\ndensity F 10\n\n\n\n\n\n\nf11\n\n\nf11\n\n\n\n\ndensity F 11\n\n\n\n\n\n\nf12\n\n\nf12\n\n\n\n\ndensity F 12\n\n\n\n\n\n\nf13\n\n\nf13\n\n\n\n\ndensity F 13\n\n\n\n\n\n\nf14\n\n\nf14\n\n\n\n\ndensity F 14\n\n\n\n\n\n\nf15\n\n\nf15\n\n\n\n\ndensity F 15\n\n\n\n\n\n\nf16\n\n\nf16\n\n\n\n\ndensity F 16\n\n\n\n\n\n\nf17\n\n\nf17\n\n\n\n\ndensity F 17\n\n\n\n\n\n\nf18\n\n\nf18\n\n\n\n\ndensity F 18\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nBaseIteration\n\n\nRun\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18\n\n\n\n\n\n\nBaseInit\n\n\nInit\n\n\nnone\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIteration\n\n\n\n\n\n\nInit\n\n\nBaseInit",
            "title": "D3q19"
        },
        {
            "location": "/models/flow/d3q19/#description",
            "text": "d3q19",
            "title": "Description"
        },
        {
            "location": "/models/flow/d3q19/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/flow/d3q19/#zonal-settings",
            "text": "Name  Comment      FluxInObj  Weight of [Volume flux] in objective    XYvxInObj  Weight of [Volume flux] in objective    XYvyInObj  Weight of [Volume flux] in objective    XYvzInObj  Weight of [Volume flux] in objective    XYrhoInObj  Weight of [Volume flux] in objective    XYareaInObj  Weight of [Volume flux] in objective    XZvxInObj  Weight of [Volume flux] in objective    XZvyInObj  Weight of [Volume flux] in objective    XZvzInObj  Weight of [Volume flux] in objective    XZrhoInObj  Weight of [Volume flux] in objective    XZareaInObj  Weight of [Volume flux] in objective    YZvxInObj  Weight of [Volume flux] in objective    YZvyInObj  Weight of [Volume flux] in objective    YZvzInObj  Weight of [Volume flux] in objective    YZrhoInObj  Weight of [Volume flux] in objective    YZareaInObj  Weight of [Volume flux] in objective    VOLvxInObj  Weight of [Volume flux] in objective    VOLvyInObj  Weight of [Volume flux] in objective    VOLvzInObj  Weight of [Volume flux] in objective    VOLpxInObj  Weight of [Volume flux] in objective    VOLpyInObj  Weight of [Volume flux] in objective    VOLpzInObj  Weight of [Volume flux] in objective    VOLrhoInObj  Weight of [Volume flux] in objective    VOLvolumeInObj  Weight of [Volume flux] in objective    MaxVInObj  Weight of [Max velocity] in objective",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/flow/d3q19/#global-settings",
            "text": "Name  Derived  Comment      omega  1.0/(3*nu + 0.5)  One over relaxation time    nu   Viscosity    InletVelocity   Inlet velocity    InletPressure   Inlet pressure    InletDensity  1.0+InletPressure*3  Inlet density    ForceX   Force force X    ForceY   Force force Y    ForceZ   Force force Z    Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/flow/d3q19/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      P  Pa  P    U  m/s  U",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/flow/d3q19/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      MaxV  m3  Max velocity    Flux  m3/s  Volume flux    XYvx  m3/s  Volume flux    XYvy  m3/s  Volume flux    XYvz  m3/s  Volume flux    XYrho  kg/m  Volume flux    XYarea  m2  Volume flux    XZvx  m3/s  Volume flux    XZvy  m3/s  Volume flux    XZvz  m3/s  Volume flux    XZrho  kg/m  Volume flux    XZarea  m2  Volume flux    YZvx  m3/s  Volume flux    YZvy  m3/s  Volume flux    YZvz  m3/s  Volume flux    YZrho  kg/m  Volume flux    YZarea  m2  Volume flux    VOLvx  m4/s  Volume flux    VOLvy  m4/s  Volume flux    VOLvz  m4/s  Volume flux    VOLpx  mkg/s  Volume flux    VOLpy  mkg/s  Volume flux    VOLpz  mkg/s  Volume flux    VOLrho  kg  Volume flux    VOLvolume  m3  Volume flux    Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/flow/d3q19/#node-types",
            "text": "Group  Types      ADDITIONALS  XYslice, XZslice, YZslice    BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity    COLLISION  BGK, MRT    DESIGNSPACE  DesignSpace    NONE  None    OBJECTIVE  Inlet, Outlet    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/flow/d3q19/#solved-fields",
            "text": "Name  Access pattern  Comment      f0   density F 0    f1   density F 1    f2   density F 2    f3   density F 3    f4   density F 4    f5   density F 5    f6   density F 6    f7   density F 7    f8   density F 8    f9   density F 9    f10   density F 10    f11   density F 11    f12   density F 12    f13   density F 13    f14   density F 14    f15   density F 15    f16   density F 16    f17   density F 17    f18   density F 18",
            "title": "Solved fields"
        },
        {
            "location": "/models/flow/d3q19/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment      f0  f0   density F 0    f1  f1   density F 1    f2  f2   density F 2    f3  f3   density F 3    f4  f4   density F 4    f5  f5   density F 5    f6  f6   density F 6    f7  f7   density F 7    f8  f8   density F 8    f9  f9   density F 9    f10  f10   density F 10    f11  f11   density F 11    f12  f12   density F 12    f13  f13   density F 13    f14  f14   density F 14    f15  f15   density F 15    f16  f16   density F 16    f17  f17   density F 17    f18  f18   density F 18",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/flow/d3q19/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      BaseIteration  Run  f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18  f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18    BaseInit  Init  none  f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18",
            "title": "Action stages"
        },
        {
            "location": "/models/flow/d3q19/#actions",
            "text": "Name  Stages      Iteration  BaseIteration    Init  BaseInit",
            "title": "Actions"
        },
        {
            "location": "/models/flow/d3q19_les/",
            "text": "Description\n\n\nd3q19_les\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nVelocity\n\n\ninlet velocity\n\n\n\n\n\n\nDensity\n\n\ninlet density\n\n\n\n\n\n\nTurbulence\n\n\namount of turbulence in init and on inlet\n\n\n\n\n\n\nFluxInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\nEnergyFluxInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\nPressureFluxInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\nPressureDiffInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\nMaterialPenaltyInObj\n\n\nWeight of [quadratic penalty for intermediate material parameter] in objective\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nnu\n\n\n\n\nviscosity\n\n\n\n\n\n\nTheta\n\n\n\n\ninlet density\n\n\n\n\n\n\nForceX\n\n\n\n\nForce[x]\n\n\n\n\n\n\nForceY\n\n\n\n\nForce[y]\n\n\n\n\n\n\nForceZ\n\n\n\n\nForce[z]\n\n\n\n\n\n\nSmag\n\n\n\n\nSmagorynsky constant\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nRho\n\n\nkg/m3\n\n\nRho\n\n\n\n\n\n\nU\n\n\nm/s\n\n\nU\n\n\n\n\n\n\nWB\n\n\n1\n\n\nWB\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nFlux\n\n\n1\n\n\npressure loss\n\n\n\n\n\n\nEnergyFlux\n\n\n1\n\n\npressure loss\n\n\n\n\n\n\nPressureFlux\n\n\n1\n\n\npressure loss\n\n\n\n\n\n\nPressureDiff\n\n\n1\n\n\npressure loss\n\n\n\n\n\n\nMaterialPenalty\n\n\n1\n\n\nquadratic penalty for intermediate material parameter\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf0\n\n\n\n\ndensity F 0\n\n\n\n\n\n\nf1\n\n\n\n\ndensity F 1\n\n\n\n\n\n\nf2\n\n\n\n\ndensity F 2\n\n\n\n\n\n\nf3\n\n\n\n\ndensity F 3\n\n\n\n\n\n\nf4\n\n\n\n\ndensity F 4\n\n\n\n\n\n\nf5\n\n\n\n\ndensity F 5\n\n\n\n\n\n\nf6\n\n\n\n\ndensity F 6\n\n\n\n\n\n\nf7\n\n\n\n\ndensity F 7\n\n\n\n\n\n\nf8\n\n\n\n\ndensity F 8\n\n\n\n\n\n\nf9\n\n\n\n\ndensity F 9\n\n\n\n\n\n\nf10\n\n\n\n\ndensity F 10\n\n\n\n\n\n\nf11\n\n\n\n\ndensity F 11\n\n\n\n\n\n\nf12\n\n\n\n\ndensity F 12\n\n\n\n\n\n\nf13\n\n\n\n\ndensity F 13\n\n\n\n\n\n\nf14\n\n\n\n\ndensity F 14\n\n\n\n\n\n\nf15\n\n\n\n\ndensity F 15\n\n\n\n\n\n\nf16\n\n\n\n\ndensity F 16\n\n\n\n\n\n\nf17\n\n\n\n\ndensity F 17\n\n\n\n\n\n\nf18\n\n\n\n\ndensity F 18\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf0\n\n\nf0\n\n\n\n\ndensity F 0\n\n\n\n\n\n\nf1\n\n\nf1\n\n\n\n\ndensity F 1\n\n\n\n\n\n\nf2\n\n\nf2\n\n\n\n\ndensity F 2\n\n\n\n\n\n\nf3\n\n\nf3\n\n\n\n\ndensity F 3\n\n\n\n\n\n\nf4\n\n\nf4\n\n\n\n\ndensity F 4\n\n\n\n\n\n\nf5\n\n\nf5\n\n\n\n\ndensity F 5\n\n\n\n\n\n\nf6\n\n\nf6\n\n\n\n\ndensity F 6\n\n\n\n\n\n\nf7\n\n\nf7\n\n\n\n\ndensity F 7\n\n\n\n\n\n\nf8\n\n\nf8\n\n\n\n\ndensity F 8\n\n\n\n\n\n\nf9\n\n\nf9\n\n\n\n\ndensity F 9\n\n\n\n\n\n\nf10\n\n\nf10\n\n\n\n\ndensity F 10\n\n\n\n\n\n\nf11\n\n\nf11\n\n\n\n\ndensity F 11\n\n\n\n\n\n\nf12\n\n\nf12\n\n\n\n\ndensity F 12\n\n\n\n\n\n\nf13\n\n\nf13\n\n\n\n\ndensity F 13\n\n\n\n\n\n\nf14\n\n\nf14\n\n\n\n\ndensity F 14\n\n\n\n\n\n\nf15\n\n\nf15\n\n\n\n\ndensity F 15\n\n\n\n\n\n\nf16\n\n\nf16\n\n\n\n\ndensity F 16\n\n\n\n\n\n\nf17\n\n\nf17\n\n\n\n\ndensity F 17\n\n\n\n\n\n\nf18\n\n\nf18\n\n\n\n\ndensity F 18\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nBaseIteration\n\n\nRun\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18\n\n\n\n\n\n\nBaseInit\n\n\nInit\n\n\nnone\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIteration\n\n\n\n\n\n\nInit\n\n\nBaseInit",
            "title": "D3q19 les"
        },
        {
            "location": "/models/flow/d3q19_les/#description",
            "text": "d3q19_les",
            "title": "Description"
        },
        {
            "location": "/models/flow/d3q19_les/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/flow/d3q19_les/#zonal-settings",
            "text": "Name  Comment      Velocity  inlet velocity    Density  inlet density    Turbulence  amount of turbulence in init and on inlet    FluxInObj  Weight of [pressure loss] in objective    EnergyFluxInObj  Weight of [pressure loss] in objective    PressureFluxInObj  Weight of [pressure loss] in objective    PressureDiffInObj  Weight of [pressure loss] in objective    MaterialPenaltyInObj  Weight of [quadratic penalty for intermediate material parameter] in objective",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/flow/d3q19_les/#global-settings",
            "text": "Name  Derived  Comment      nu   viscosity    Theta   inlet density    ForceX   Force[x]    ForceY   Force[y]    ForceZ   Force[z]    Smag   Smagorynsky constant    Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/flow/d3q19_les/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      Rho  kg/m3  Rho    U  m/s  U    WB  1  WB",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/flow/d3q19_les/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      Flux  1  pressure loss    EnergyFlux  1  pressure loss    PressureFlux  1  pressure loss    PressureDiff  1  pressure loss    MaterialPenalty  1  quadratic penalty for intermediate material parameter    Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/flow/d3q19_les/#node-types",
            "text": "Group  Types      BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity    COLLISION  BGK, MRT    DESIGNSPACE  DesignSpace    NONE  None    OBJECTIVE  Inlet, Outlet    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/flow/d3q19_les/#solved-fields",
            "text": "Name  Access pattern  Comment      f0   density F 0    f1   density F 1    f2   density F 2    f3   density F 3    f4   density F 4    f5   density F 5    f6   density F 6    f7   density F 7    f8   density F 8    f9   density F 9    f10   density F 10    f11   density F 11    f12   density F 12    f13   density F 13    f14   density F 14    f15   density F 15    f16   density F 16    f17   density F 17    f18   density F 18",
            "title": "Solved fields"
        },
        {
            "location": "/models/flow/d3q19_les/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment      f0  f0   density F 0    f1  f1   density F 1    f2  f2   density F 2    f3  f3   density F 3    f4  f4   density F 4    f5  f5   density F 5    f6  f6   density F 6    f7  f7   density F 7    f8  f8   density F 8    f9  f9   density F 9    f10  f10   density F 10    f11  f11   density F 11    f12  f12   density F 12    f13  f13   density F 13    f14  f14   density F 14    f15  f15   density F 15    f16  f16   density F 16    f17  f17   density F 17    f18  f18   density F 18",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/flow/d3q19_les/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      BaseIteration  Run  f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18  f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18    BaseInit  Init  none  f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18",
            "title": "Action stages"
        },
        {
            "location": "/models/flow/d3q19_les/#actions",
            "text": "Name  Stages      Iteration  BaseIteration    Init  BaseInit",
            "title": "Actions"
        },
        {
            "location": "/models/flow/d3q27/",
            "text": "Description\n\n\nd3q27\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nVelocity\n\n\nInlet velocity\n\n\n\n\n\n\nPressure\n\n\nInlet pressure\n\n\n\n\n\n\nTurbulence\n\n\nTurbulence intensity\n\n\n\n\n\n\nFluxInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nomega\n\n\n1.0/(3*nu + 0.5)\n\n\nOne over relaxation time\n\n\n\n\n\n\nnu\n\n\n\n\nViscosity\n\n\n\n\n\n\nSmag\n\n\n\n\nSmagorinsky constant\n\n\n\n\n\n\nForceX\n\n\n\n\nForce force X\n\n\n\n\n\n\nForceY\n\n\n\n\nForce force Y\n\n\n\n\n\n\nForceZ\n\n\n\n\nForce force Z\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nP\n\n\nPa\n\n\nP\n\n\n\n\n\n\nU\n\n\nm/s\n\n\nU\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nFlux\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, NSymmetry, SSymmetry, ISymmetry\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nENTROPIC\n\n\nStab\n\n\n\n\n\n\nLES\n\n\nSmagorinsky\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf0\n\n\n\n\ndensity F 0\n\n\n\n\n\n\nf1\n\n\n\n\ndensity F 1\n\n\n\n\n\n\nf2\n\n\n\n\ndensity F 2\n\n\n\n\n\n\nf3\n\n\n\n\ndensity F 3\n\n\n\n\n\n\nf4\n\n\n\n\ndensity F 4\n\n\n\n\n\n\nf5\n\n\n\n\ndensity F 5\n\n\n\n\n\n\nf6\n\n\n\n\ndensity F 6\n\n\n\n\n\n\nf7\n\n\n\n\ndensity F 7\n\n\n\n\n\n\nf8\n\n\n\n\ndensity F 8\n\n\n\n\n\n\nf9\n\n\n\n\ndensity F 9\n\n\n\n\n\n\nf10\n\n\n\n\ndensity F 10\n\n\n\n\n\n\nf11\n\n\n\n\ndensity F 11\n\n\n\n\n\n\nf12\n\n\n\n\ndensity F 12\n\n\n\n\n\n\nf13\n\n\n\n\ndensity F 13\n\n\n\n\n\n\nf14\n\n\n\n\ndensity F 14\n\n\n\n\n\n\nf15\n\n\n\n\ndensity F 15\n\n\n\n\n\n\nf16\n\n\n\n\ndensity F 16\n\n\n\n\n\n\nf17\n\n\n\n\ndensity F 17\n\n\n\n\n\n\nf18\n\n\n\n\ndensity F 18\n\n\n\n\n\n\nf19\n\n\n\n\ndensity F 19\n\n\n\n\n\n\nf20\n\n\n\n\ndensity F 20\n\n\n\n\n\n\nf21\n\n\n\n\ndensity F 21\n\n\n\n\n\n\nf22\n\n\n\n\ndensity F 22\n\n\n\n\n\n\nf23\n\n\n\n\ndensity F 23\n\n\n\n\n\n\nf24\n\n\n\n\ndensity F 24\n\n\n\n\n\n\nf25\n\n\n\n\ndensity F 25\n\n\n\n\n\n\nf26\n\n\n\n\ndensity F 26\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf0\n\n\nf0\n\n\n\n\ndensity F 0\n\n\n\n\n\n\nf1\n\n\nf1\n\n\n\n\ndensity F 1\n\n\n\n\n\n\nf2\n\n\nf2\n\n\n\n\ndensity F 2\n\n\n\n\n\n\nf3\n\n\nf3\n\n\n\n\ndensity F 3\n\n\n\n\n\n\nf4\n\n\nf4\n\n\n\n\ndensity F 4\n\n\n\n\n\n\nf5\n\n\nf5\n\n\n\n\ndensity F 5\n\n\n\n\n\n\nf6\n\n\nf6\n\n\n\n\ndensity F 6\n\n\n\n\n\n\nf7\n\n\nf7\n\n\n\n\ndensity F 7\n\n\n\n\n\n\nf8\n\n\nf8\n\n\n\n\ndensity F 8\n\n\n\n\n\n\nf9\n\n\nf9\n\n\n\n\ndensity F 9\n\n\n\n\n\n\nf10\n\n\nf10\n\n\n\n\ndensity F 10\n\n\n\n\n\n\nf11\n\n\nf11\n\n\n\n\ndensity F 11\n\n\n\n\n\n\nf12\n\n\nf12\n\n\n\n\ndensity F 12\n\n\n\n\n\n\nf13\n\n\nf13\n\n\n\n\ndensity F 13\n\n\n\n\n\n\nf14\n\n\nf14\n\n\n\n\ndensity F 14\n\n\n\n\n\n\nf15\n\n\nf15\n\n\n\n\ndensity F 15\n\n\n\n\n\n\nf16\n\n\nf16\n\n\n\n\ndensity F 16\n\n\n\n\n\n\nf17\n\n\nf17\n\n\n\n\ndensity F 17\n\n\n\n\n\n\nf18\n\n\nf18\n\n\n\n\ndensity F 18\n\n\n\n\n\n\nf19\n\n\nf19\n\n\n\n\ndensity F 19\n\n\n\n\n\n\nf20\n\n\nf20\n\n\n\n\ndensity F 20\n\n\n\n\n\n\nf21\n\n\nf21\n\n\n\n\ndensity F 21\n\n\n\n\n\n\nf22\n\n\nf22\n\n\n\n\ndensity F 22\n\n\n\n\n\n\nf23\n\n\nf23\n\n\n\n\ndensity F 23\n\n\n\n\n\n\nf24\n\n\nf24\n\n\n\n\ndensity F 24\n\n\n\n\n\n\nf25\n\n\nf25\n\n\n\n\ndensity F 25\n\n\n\n\n\n\nf26\n\n\nf26\n\n\n\n\ndensity F 26\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nBaseIteration\n\n\nRun\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26\n\n\n\n\n\n\nBaseInit\n\n\nInit\n\n\nnone\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIteration\n\n\n\n\n\n\nInit\n\n\nBaseInit",
            "title": "D3q27"
        },
        {
            "location": "/models/flow/d3q27/#description",
            "text": "d3q27",
            "title": "Description"
        },
        {
            "location": "/models/flow/d3q27/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/flow/d3q27/#zonal-settings",
            "text": "Name  Comment      Velocity  Inlet velocity    Pressure  Inlet pressure    Turbulence  Turbulence intensity    FluxInObj  Weight of [Volume flux] in objective",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/flow/d3q27/#global-settings",
            "text": "Name  Derived  Comment      omega  1.0/(3*nu + 0.5)  One over relaxation time    nu   Viscosity    Smag   Smagorinsky constant    ForceX   Force force X    ForceY   Force force Y    ForceZ   Force force Z    Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/flow/d3q27/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      P  Pa  P    U  m/s  U",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/flow/d3q27/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      Flux  m3/s  Volume flux    Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/flow/d3q27/#node-types",
            "text": "Group  Types      BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, NSymmetry, SSymmetry, ISymmetry    COLLISION  BGK, MRT    DESIGNSPACE  DesignSpace    ENTROPIC  Stab    LES  Smagorinsky    NONE  None    OBJECTIVE  Inlet, Outlet    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/flow/d3q27/#solved-fields",
            "text": "Name  Access pattern  Comment      f0   density F 0    f1   density F 1    f2   density F 2    f3   density F 3    f4   density F 4    f5   density F 5    f6   density F 6    f7   density F 7    f8   density F 8    f9   density F 9    f10   density F 10    f11   density F 11    f12   density F 12    f13   density F 13    f14   density F 14    f15   density F 15    f16   density F 16    f17   density F 17    f18   density F 18    f19   density F 19    f20   density F 20    f21   density F 21    f22   density F 22    f23   density F 23    f24   density F 24    f25   density F 25    f26   density F 26",
            "title": "Solved fields"
        },
        {
            "location": "/models/flow/d3q27/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment      f0  f0   density F 0    f1  f1   density F 1    f2  f2   density F 2    f3  f3   density F 3    f4  f4   density F 4    f5  f5   density F 5    f6  f6   density F 6    f7  f7   density F 7    f8  f8   density F 8    f9  f9   density F 9    f10  f10   density F 10    f11  f11   density F 11    f12  f12   density F 12    f13  f13   density F 13    f14  f14   density F 14    f15  f15   density F 15    f16  f16   density F 16    f17  f17   density F 17    f18  f18   density F 18    f19  f19   density F 19    f20  f20   density F 20    f21  f21   density F 21    f22  f22   density F 22    f23  f23   density F 23    f24  f24   density F 24    f25  f25   density F 25    f26  f26   density F 26",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/flow/d3q27/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      BaseIteration  Run  f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26  f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26    BaseInit  Init  none  f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26",
            "title": "Action stages"
        },
        {
            "location": "/models/flow/d3q27/#actions",
            "text": "Name  Stages      Iteration  BaseIteration    Init  BaseInit",
            "title": "Actions"
        },
        {
            "location": "/models/flow/d2q9/d2q9/",
            "text": "Description\n\n\nThe \nd2q9\n model is a basic 2D Lattice Boltzmann Method model for flow simulation.  It is a implementation of a simple Multiple-Relaxation-Time collision operator.  The model has one \noption\n: BC. This option turns on custom fields for setting non-standard profiles on inlets and other things.\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nVelocityX\n\n\ninlet/outlet/init velocity\n\n\n\n\n\n\nVelocityY\n\n\ninlet/outlet/init velocity\n\n\n\n\n\n\nPressure\n\n\ninlet/outlet/init density\n\n\n\n\n\n\nPressureLossInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\nOutletFluxInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\nInletFluxInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nRelaxationRate\n\n\n1.0/(3*Viscosity + 0.5)\n\n\none over relaxation time\n\n\n\n\n\n\nViscosity\n\n\n\n\nviscosity\n\n\n\n\n\n\nGravitationX\n\n\n\n\nGravitationX\n\n\n\n\n\n\nGravitationY\n\n\n\n\nGravitationY\n\n\n\n\n\n\nS2\n\n\n1-RelaxationRate\n\n\nMRT Sx\n\n\n\n\n\n\nS3\n\n\n\n\nMRT Sx\n\n\n\n\n\n\nS4\n\n\n\n\nMRT Sx\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nRho\n\n\nkg/m3\n\n\nRho\n\n\n\n\n\n\nU\n\n\nm/s\n\n\nU\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nPressureLoss\n\n\n1mPa\n\n\npressure loss\n\n\n\n\n\n\nOutletFlux\n\n\n1m2/s\n\n\npressure loss\n\n\n\n\n\n\nInletFlux\n\n\n1m2/s\n\n\npressure loss\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, NVelocity, SVelocity, NSymmetry, SSymmetry\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf[0]\n\n\n\n\nf[0]\n\n\n\n\n\n\nf[1]\n\n\n\n\nf[1]\n\n\n\n\n\n\nf[2]\n\n\n\n\nf[2]\n\n\n\n\n\n\nf[3]\n\n\n\n\nf[3]\n\n\n\n\n\n\nf[4]\n\n\n\n\nf[4]\n\n\n\n\n\n\nf[5]\n\n\n\n\nf[5]\n\n\n\n\n\n\nf[6]\n\n\n\n\nf[6]\n\n\n\n\n\n\nf[7]\n\n\n\n\nf[7]\n\n\n\n\n\n\nf[8]\n\n\n\n\nf[8]\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf[0]\n\n\nf[0]\n\n\n\n\nf[0]\n\n\n\n\n\n\nf[1]\n\n\nf[1]\n\n\n\n\nf[1]\n\n\n\n\n\n\nf[2]\n\n\nf[2]\n\n\n\n\nf[2]\n\n\n\n\n\n\nf[3]\n\n\nf[3]\n\n\n\n\nf[3]\n\n\n\n\n\n\nf[4]\n\n\nf[4]\n\n\n\n\nf[4]\n\n\n\n\n\n\nf[5]\n\n\nf[5]\n\n\n\n\nf[5]\n\n\n\n\n\n\nf[6]\n\n\nf[6]\n\n\n\n\nf[6]\n\n\n\n\n\n\nf[7]\n\n\nf[7]\n\n\n\n\nf[7]\n\n\n\n\n\n\nf[8]\n\n\nf[8]\n\n\n\n\nf[8]\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nBaseIteration\n\n\nRun\n\n\nf[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8]\n\n\nf[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8]\n\n\n\n\n\n\nBaseInit\n\n\nInit\n\n\nnone\n\n\nf[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8]\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIteration\n\n\n\n\n\n\nInit\n\n\nBaseInit",
            "title": "D2q9"
        },
        {
            "location": "/models/flow/d2q9/d2q9/#description",
            "text": "The  d2q9  model is a basic 2D Lattice Boltzmann Method model for flow simulation.  It is a implementation of a simple Multiple-Relaxation-Time collision operator.  The model has one  option : BC. This option turns on custom fields for setting non-standard profiles on inlets and other things.",
            "title": "Description"
        },
        {
            "location": "/models/flow/d2q9/d2q9/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/flow/d2q9/d2q9/#zonal-settings",
            "text": "Name  Comment      VelocityX  inlet/outlet/init velocity    VelocityY  inlet/outlet/init velocity    Pressure  inlet/outlet/init density    PressureLossInObj  Weight of [pressure loss] in objective    OutletFluxInObj  Weight of [pressure loss] in objective    InletFluxInObj  Weight of [pressure loss] in objective",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/flow/d2q9/d2q9/#global-settings",
            "text": "Name  Derived  Comment      RelaxationRate  1.0/(3*Viscosity + 0.5)  one over relaxation time    Viscosity   viscosity    GravitationX   GravitationX    GravitationY   GravitationY    S2  1-RelaxationRate  MRT Sx    S3   MRT Sx    S4   MRT Sx    Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/flow/d2q9/d2q9/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      Rho  kg/m3  Rho    U  m/s  U",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/flow/d2q9/d2q9/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      PressureLoss  1mPa  pressure loss    OutletFlux  1m2/s  pressure loss    InletFlux  1m2/s  pressure loss    Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/flow/d2q9/d2q9/#node-types",
            "text": "Group  Types      BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, NVelocity, SVelocity, NSymmetry, SSymmetry    COLLISION  BGK, MRT    DESIGNSPACE  DesignSpace    NONE  None    OBJECTIVE  Inlet, Outlet    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/flow/d2q9/d2q9/#solved-fields",
            "text": "Name  Access pattern  Comment      f[0]   f[0]    f[1]   f[1]    f[2]   f[2]    f[3]   f[3]    f[4]   f[4]    f[5]   f[5]    f[6]   f[6]    f[7]   f[7]    f[8]   f[8]",
            "title": "Solved fields"
        },
        {
            "location": "/models/flow/d2q9/d2q9/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment      f[0]  f[0]   f[0]    f[1]  f[1]   f[1]    f[2]  f[2]   f[2]    f[3]  f[3]   f[3]    f[4]  f[4]   f[4]    f[5]  f[5]   f[5]    f[6]  f[6]   f[6]    f[7]  f[7]   f[7]    f[8]  f[8]   f[8]",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/flow/d2q9/d2q9/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      BaseIteration  Run  f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8]  f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8]    BaseInit  Init  none  f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8]",
            "title": "Action stages"
        },
        {
            "location": "/models/flow/d2q9/d2q9/#actions",
            "text": "Name  Stages      Iteration  BaseIteration    Init  BaseInit",
            "title": "Actions"
        },
        {
            "location": "/models/flow/d2q9/d2q9_BC/",
            "text": "Description\n\n\nThe \nd2q9\n model is a basic 2D Lattice Boltzmann Method model for flow simulation.  It is a implementation of a simple Multiple-Relaxation-Time collision operator.  The model has one \noption\n: BC. This option turns on custom fields for setting non-standard profiles on inlets and other things.\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nVelocityX\n\n\ninlet/outlet/init velocity\n\n\n\n\n\n\nVelocityY\n\n\ninlet/outlet/init velocity\n\n\n\n\n\n\nPressure\n\n\ninlet/outlet/init density\n\n\n\n\n\n\nPressureLossInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\nOutletFluxInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\nInletFluxInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nRelaxationRate\n\n\n1.0/(3*Viscosity + 0.5)\n\n\none over relaxation time\n\n\n\n\n\n\nViscosity\n\n\n\n\nviscosity\n\n\n\n\n\n\nGravitationX\n\n\n\n\nGravitationX\n\n\n\n\n\n\nGravitationY\n\n\n\n\nGravitationY\n\n\n\n\n\n\nS2\n\n\n1-RelaxationRate\n\n\nMRT Sx\n\n\n\n\n\n\nS3\n\n\n\n\nMRT Sx\n\n\n\n\n\n\nS4\n\n\n\n\nMRT Sx\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nRho\n\n\nkg/m3\n\n\nRho\n\n\n\n\n\n\nU\n\n\nm/s\n\n\nU\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nPressureLoss\n\n\n1mPa\n\n\npressure loss\n\n\n\n\n\n\nOutletFlux\n\n\n1m2/s\n\n\npressure loss\n\n\n\n\n\n\nInletFlux\n\n\n1m2/s\n\n\npressure loss\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, NVelocity, SVelocity, NSymmetry, SSymmetry\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf[0]\n\n\n\n\nf[0]\n\n\n\n\n\n\nf[1]\n\n\n\n\nf[1]\n\n\n\n\n\n\nf[2]\n\n\n\n\nf[2]\n\n\n\n\n\n\nf[3]\n\n\n\n\nf[3]\n\n\n\n\n\n\nf[4]\n\n\n\n\nf[4]\n\n\n\n\n\n\nf[5]\n\n\n\n\nf[5]\n\n\n\n\n\n\nf[6]\n\n\n\n\nf[6]\n\n\n\n\n\n\nf[7]\n\n\n\n\nf[7]\n\n\n\n\n\n\nf[8]\n\n\n\n\nf[8]\n\n\n\n\n\n\nBC[0]\n\n\n\n\nBC[0]\n\n\n\n\n\n\nBC[1]\n\n\n\n\nBC[1]\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf[0]\n\n\nf[0]\n\n\n\n\nf[0]\n\n\n\n\n\n\nf[1]\n\n\nf[1]\n\n\n\n\nf[1]\n\n\n\n\n\n\nf[2]\n\n\nf[2]\n\n\n\n\nf[2]\n\n\n\n\n\n\nf[3]\n\n\nf[3]\n\n\n\n\nf[3]\n\n\n\n\n\n\nf[4]\n\n\nf[4]\n\n\n\n\nf[4]\n\n\n\n\n\n\nf[5]\n\n\nf[5]\n\n\n\n\nf[5]\n\n\n\n\n\n\nf[6]\n\n\nf[6]\n\n\n\n\nf[6]\n\n\n\n\n\n\nf[7]\n\n\nf[7]\n\n\n\n\nf[7]\n\n\n\n\n\n\nf[8]\n\n\nf[8]\n\n\n\n\nf[8]\n\n\n\n\n\n\nBC[0]\n\n\nBC[0]\n\n\n\n\nBC[0]\n\n\n\n\n\n\nBC[1]\n\n\nBC[1]\n\n\n\n\nBC[1]\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nBaseIteration\n\n\nRun\n\n\nf[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], BC[0], BC[1]\n\n\nf[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], BC[0], BC[1]\n\n\n\n\n\n\nBaseInit\n\n\nInit\n\n\nnone\n\n\nf[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], BC[0], BC[1]\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIteration\n\n\n\n\n\n\nInit\n\n\nBaseInit",
            "title": "d2q9 BC"
        },
        {
            "location": "/models/flow/d2q9/d2q9_BC/#description",
            "text": "The  d2q9  model is a basic 2D Lattice Boltzmann Method model for flow simulation.  It is a implementation of a simple Multiple-Relaxation-Time collision operator.  The model has one  option : BC. This option turns on custom fields for setting non-standard profiles on inlets and other things.",
            "title": "Description"
        },
        {
            "location": "/models/flow/d2q9/d2q9_BC/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/flow/d2q9/d2q9_BC/#zonal-settings",
            "text": "Name  Comment      VelocityX  inlet/outlet/init velocity    VelocityY  inlet/outlet/init velocity    Pressure  inlet/outlet/init density    PressureLossInObj  Weight of [pressure loss] in objective    OutletFluxInObj  Weight of [pressure loss] in objective    InletFluxInObj  Weight of [pressure loss] in objective",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/flow/d2q9/d2q9_BC/#global-settings",
            "text": "Name  Derived  Comment      RelaxationRate  1.0/(3*Viscosity + 0.5)  one over relaxation time    Viscosity   viscosity    GravitationX   GravitationX    GravitationY   GravitationY    S2  1-RelaxationRate  MRT Sx    S3   MRT Sx    S4   MRT Sx    Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/flow/d2q9/d2q9_BC/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      Rho  kg/m3  Rho    U  m/s  U",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/flow/d2q9/d2q9_BC/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      PressureLoss  1mPa  pressure loss    OutletFlux  1m2/s  pressure loss    InletFlux  1m2/s  pressure loss    Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/flow/d2q9/d2q9_BC/#node-types",
            "text": "Group  Types      BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, NVelocity, SVelocity, NSymmetry, SSymmetry    COLLISION  BGK, MRT    DESIGNSPACE  DesignSpace    NONE  None    OBJECTIVE  Inlet, Outlet    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/flow/d2q9/d2q9_BC/#solved-fields",
            "text": "Name  Access pattern  Comment      f[0]   f[0]    f[1]   f[1]    f[2]   f[2]    f[3]   f[3]    f[4]   f[4]    f[5]   f[5]    f[6]   f[6]    f[7]   f[7]    f[8]   f[8]    BC[0]   BC[0]    BC[1]   BC[1]",
            "title": "Solved fields"
        },
        {
            "location": "/models/flow/d2q9/d2q9_BC/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment      f[0]  f[0]   f[0]    f[1]  f[1]   f[1]    f[2]  f[2]   f[2]    f[3]  f[3]   f[3]    f[4]  f[4]   f[4]    f[5]  f[5]   f[5]    f[6]  f[6]   f[6]    f[7]  f[7]   f[7]    f[8]  f[8]   f[8]    BC[0]  BC[0]   BC[0]    BC[1]  BC[1]   BC[1]",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/flow/d2q9/d2q9_BC/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      BaseIteration  Run  f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], BC[0], BC[1]  f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], BC[0], BC[1]    BaseInit  Init  none  f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], BC[0], BC[1]",
            "title": "Action stages"
        },
        {
            "location": "/models/flow/d2q9/d2q9_BC/#actions",
            "text": "Name  Stages      Iteration  BaseIteration    Init  BaseInit",
            "title": "Actions"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant/",
            "text": "Description\n\n\nd3q27_cumulant\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nVelocity\n\n\nInlet velocity\n\n\n\n\n\n\nPressure\n\n\nInlet pressure\n\n\n\n\n\n\nTurbulence\n\n\nTurbulence intensity\n\n\n\n\n\n\nFluxInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nDragInObj\n\n\nWeight of [Force exerted on body in X-direction] in objective\n\n\n\n\n\n\nLiftInObj\n\n\nWeight of [Force exerted on body in Z-direction] in objective\n\n\n\n\n\n\nLateralInObj\n\n\nWeight of [Force exerted on body in Y-direction] in objective\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nnu\n\n\n\n\nViscosity\n\n\n\n\n\n\nnubuffer\n\n\n\n\nViscosity in the buffer layer\n\n\n\n\n\n\nGalileanCorrection\n\n\n\n\nGalilean correction term\n\n\n\n\n\n\nForceX\n\n\n\n\nForce force X\n\n\n\n\n\n\nForceY\n\n\n\n\nForce force Y\n\n\n\n\n\n\nForceZ\n\n\n\n\nForce force Z\n\n\n\n\n\n\nSmag\n\n\n\n\nSmagorinsky coefficient for SGS modeling\n\n\n\n\n\n\nOmega\n\n\n\n\nrelaxation rate for 3rd order cumulants\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nP\n\n\nPa\n\n\nP\n\n\n\n\n\n\nU\n\n\nm/s\n\n\nU\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nFlux\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nDrag\n\n\nN\n\n\nForce exerted on body in X-direction\n\n\n\n\n\n\nLift\n\n\nN\n\n\nForce exerted on body in Z-direction\n\n\n\n\n\n\nLateral\n\n\nN\n\n\nForce exerted on body in Y-direction\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nADDITIONALS\n\n\nNSymmetry, SSymmetry\n\n\n\n\n\n\nBODY\n\n\nBody\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, WVelocityTurbulent, NVelocity, SVelocity, NPressure, SPressure\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nHO_BOUNDARY\n\n\nIB\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf000\n\n\n\n\ndensity F 0\n\n\n\n\n\n\nf100\n\n\n\n\ndensity F 1\n\n\n\n\n\n\nf200\n\n\n\n\ndensity F 2\n\n\n\n\n\n\nf010\n\n\n\n\ndensity F 3\n\n\n\n\n\n\nf110\n\n\n\n\ndensity F 4\n\n\n\n\n\n\nf210\n\n\n\n\ndensity F 5\n\n\n\n\n\n\nf020\n\n\n\n\ndensity F 6\n\n\n\n\n\n\nf120\n\n\n\n\ndensity F 7\n\n\n\n\n\n\nf220\n\n\n\n\ndensity F 8\n\n\n\n\n\n\nf001\n\n\n\n\ndensity F 9\n\n\n\n\n\n\nf101\n\n\n\n\ndensity F 10\n\n\n\n\n\n\nf201\n\n\n\n\ndensity F 11\n\n\n\n\n\n\nf011\n\n\n\n\ndensity F 12\n\n\n\n\n\n\nf111\n\n\n\n\ndensity F 13\n\n\n\n\n\n\nf211\n\n\n\n\ndensity F 14\n\n\n\n\n\n\nf021\n\n\n\n\ndensity F 15\n\n\n\n\n\n\nf121\n\n\n\n\ndensity F 16\n\n\n\n\n\n\nf221\n\n\n\n\ndensity F 17\n\n\n\n\n\n\nf002\n\n\n\n\ndensity F 18\n\n\n\n\n\n\nf102\n\n\n\n\ndensity F 19\n\n\n\n\n\n\nf202\n\n\n\n\ndensity F 20\n\n\n\n\n\n\nf012\n\n\n\n\ndensity F 21\n\n\n\n\n\n\nf112\n\n\n\n\ndensity F 22\n\n\n\n\n\n\nf212\n\n\n\n\ndensity F 23\n\n\n\n\n\n\nf022\n\n\n\n\ndensity F 24\n\n\n\n\n\n\nf122\n\n\n\n\ndensity F 25\n\n\n\n\n\n\nf222\n\n\n\n\ndensity F 26\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf000\n\n\nf000\n\n\n\n\ndensity F 0\n\n\n\n\n\n\nf100\n\n\nf100\n\n\n\n\ndensity F 1\n\n\n\n\n\n\nf200\n\n\nf200\n\n\n\n\ndensity F 2\n\n\n\n\n\n\nf010\n\n\nf010\n\n\n\n\ndensity F 3\n\n\n\n\n\n\nf110\n\n\nf110\n\n\n\n\ndensity F 4\n\n\n\n\n\n\nf210\n\n\nf210\n\n\n\n\ndensity F 5\n\n\n\n\n\n\nf020\n\n\nf020\n\n\n\n\ndensity F 6\n\n\n\n\n\n\nf120\n\n\nf120\n\n\n\n\ndensity F 7\n\n\n\n\n\n\nf220\n\n\nf220\n\n\n\n\ndensity F 8\n\n\n\n\n\n\nf001\n\n\nf001\n\n\n\n\ndensity F 9\n\n\n\n\n\n\nf101\n\n\nf101\n\n\n\n\ndensity F 10\n\n\n\n\n\n\nf201\n\n\nf201\n\n\n\n\ndensity F 11\n\n\n\n\n\n\nf011\n\n\nf011\n\n\n\n\ndensity F 12\n\n\n\n\n\n\nf111\n\n\nf111\n\n\n\n\ndensity F 13\n\n\n\n\n\n\nf211\n\n\nf211\n\n\n\n\ndensity F 14\n\n\n\n\n\n\nf021\n\n\nf021\n\n\n\n\ndensity F 15\n\n\n\n\n\n\nf121\n\n\nf121\n\n\n\n\ndensity F 16\n\n\n\n\n\n\nf221\n\n\nf221\n\n\n\n\ndensity F 17\n\n\n\n\n\n\nf002\n\n\nf002\n\n\n\n\ndensity F 18\n\n\n\n\n\n\nf102\n\n\nf102\n\n\n\n\ndensity F 19\n\n\n\n\n\n\nf202\n\n\nf202\n\n\n\n\ndensity F 20\n\n\n\n\n\n\nf012\n\n\nf012\n\n\n\n\ndensity F 21\n\n\n\n\n\n\nf112\n\n\nf112\n\n\n\n\ndensity F 22\n\n\n\n\n\n\nf212\n\n\nf212\n\n\n\n\ndensity F 23\n\n\n\n\n\n\nf022\n\n\nf022\n\n\n\n\ndensity F 24\n\n\n\n\n\n\nf122\n\n\nf122\n\n\n\n\ndensity F 25\n\n\n\n\n\n\nf222\n\n\nf222\n\n\n\n\ndensity F 26\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nBaseIteration\n\n\nRun\n\n\nf000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222\n\n\nf000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222\n\n\n\n\n\n\nBaseInit\n\n\nInit\n\n\nnone\n\n\nf000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIteration\n\n\n\n\n\n\nInit\n\n\nBaseInit",
            "title": "D3q27 cumulant"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant/#description",
            "text": "d3q27_cumulant",
            "title": "Description"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant/#zonal-settings",
            "text": "Name  Comment      Velocity  Inlet velocity    Pressure  Inlet pressure    Turbulence  Turbulence intensity    FluxInObj  Weight of [Volume flux] in objective    DragInObj  Weight of [Force exerted on body in X-direction] in objective    LiftInObj  Weight of [Force exerted on body in Z-direction] in objective    LateralInObj  Weight of [Force exerted on body in Y-direction] in objective",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant/#global-settings",
            "text": "Name  Derived  Comment      nu   Viscosity    nubuffer   Viscosity in the buffer layer    GalileanCorrection   Galilean correction term    ForceX   Force force X    ForceY   Force force Y    ForceZ   Force force Z    Smag   Smagorinsky coefficient for SGS modeling    Omega   relaxation rate for 3rd order cumulants    Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      P  Pa  P    U  m/s  U",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      Flux  m3/s  Volume flux    Drag  N  Force exerted on body in X-direction    Lift  N  Force exerted on body in Z-direction    Lateral  N  Force exerted on body in Y-direction    Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant/#node-types",
            "text": "Group  Types      ADDITIONALS  NSymmetry, SSymmetry    BODY  Body    BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, WVelocityTurbulent, NVelocity, SVelocity, NPressure, SPressure    COLLISION  BGK, MRT    DESIGNSPACE  DesignSpace    HO_BOUNDARY  IB    NONE  None    OBJECTIVE  Inlet, Outlet    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant/#solved-fields",
            "text": "Name  Access pattern  Comment      f000   density F 0    f100   density F 1    f200   density F 2    f010   density F 3    f110   density F 4    f210   density F 5    f020   density F 6    f120   density F 7    f220   density F 8    f001   density F 9    f101   density F 10    f201   density F 11    f011   density F 12    f111   density F 13    f211   density F 14    f021   density F 15    f121   density F 16    f221   density F 17    f002   density F 18    f102   density F 19    f202   density F 20    f012   density F 21    f112   density F 22    f212   density F 23    f022   density F 24    f122   density F 25    f222   density F 26",
            "title": "Solved fields"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment      f000  f000   density F 0    f100  f100   density F 1    f200  f200   density F 2    f010  f010   density F 3    f110  f110   density F 4    f210  f210   density F 5    f020  f020   density F 6    f120  f120   density F 7    f220  f220   density F 8    f001  f001   density F 9    f101  f101   density F 10    f201  f201   density F 11    f011  f011   density F 12    f111  f111   density F 13    f211  f211   density F 14    f021  f021   density F 15    f121  f121   density F 16    f221  f221   density F 17    f002  f002   density F 18    f102  f102   density F 19    f202  f202   density F 20    f012  f012   density F 21    f112  f112   density F 22    f212  f212   density F 23    f022  f022   density F 24    f122  f122   density F 25    f222  f222   density F 26",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      BaseIteration  Run  f000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222  f000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222    BaseInit  Init  none  f000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222",
            "title": "Action stages"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant/#actions",
            "text": "Name  Stages      Iteration  BaseIteration    Init  BaseInit",
            "title": "Actions"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_AVG/",
            "text": "Description\n\n\nd3q27_cumulant_AVG\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nVelocity\n\n\nInlet velocity\n\n\n\n\n\n\nPressure\n\n\nInlet pressure\n\n\n\n\n\n\nTurbulence\n\n\nTurbulence intensity\n\n\n\n\n\n\nFluxInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nDragInObj\n\n\nWeight of [Force exerted on body in X-direction] in objective\n\n\n\n\n\n\nLiftInObj\n\n\nWeight of [Force exerted on body in Z-direction] in objective\n\n\n\n\n\n\nLateralInObj\n\n\nWeight of [Force exerted on body in Y-direction] in objective\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nnu\n\n\n\n\nViscosity\n\n\n\n\n\n\nnubuffer\n\n\n\n\nViscosity in the buffer layer\n\n\n\n\n\n\nGalileanCorrection\n\n\n\n\nGalilean correction term\n\n\n\n\n\n\nForceX\n\n\n\n\nForce force X\n\n\n\n\n\n\nForceY\n\n\n\n\nForce force Y\n\n\n\n\n\n\nForceZ\n\n\n\n\nForce force Z\n\n\n\n\n\n\nSmag\n\n\n\n\nSmagorinsky coefficient for SGS modeling\n\n\n\n\n\n\nOmega\n\n\n\n\nrelaxation rate for 3rd order cumulants\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nP\n\n\nPa\n\n\nP\n\n\n\n\n\n\nU\n\n\nm/s\n\n\nU\n\n\n\n\n\n\nKinE\n\n\n1\n\n\nTurbulent kinetic energy\n\n\n\n\n\n\nReStr\n\n\n1\n\n\nReynolds stress off-diagonal component\n\n\n\n\n\n\nDissipation\n\n\n1\n\n\nDissipation e\n\n\n\n\n\n\navgU\n\n\nm/s\n\n\navgU\n\n\n\n\n\n\nvarU\n\n\n1\n\n\nvarU\n\n\n\n\n\n\naverageP\n\n\nPa\n\n\naverageP\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nFlux\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nDrag\n\n\nN\n\n\nForce exerted on body in X-direction\n\n\n\n\n\n\nLift\n\n\nN\n\n\nForce exerted on body in Z-direction\n\n\n\n\n\n\nLateral\n\n\nN\n\n\nForce exerted on body in Y-direction\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nADDITIONALS\n\n\nNSymmetry, SSymmetry\n\n\n\n\n\n\nBODY\n\n\nBody\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, WVelocityTurbulent, NVelocity, SVelocity, NPressure, SPressure\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nHO_BOUNDARY\n\n\nIB\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf000\n\n\n\n\ndensity F 0\n\n\n\n\n\n\nf100\n\n\n\n\ndensity F 1\n\n\n\n\n\n\nf200\n\n\n\n\ndensity F 2\n\n\n\n\n\n\nf010\n\n\n\n\ndensity F 3\n\n\n\n\n\n\nf110\n\n\n\n\ndensity F 4\n\n\n\n\n\n\nf210\n\n\n\n\ndensity F 5\n\n\n\n\n\n\nf020\n\n\n\n\ndensity F 6\n\n\n\n\n\n\nf120\n\n\n\n\ndensity F 7\n\n\n\n\n\n\nf220\n\n\n\n\ndensity F 8\n\n\n\n\n\n\nf001\n\n\n\n\ndensity F 9\n\n\n\n\n\n\nf101\n\n\n\n\ndensity F 10\n\n\n\n\n\n\nf201\n\n\n\n\ndensity F 11\n\n\n\n\n\n\nf011\n\n\n\n\ndensity F 12\n\n\n\n\n\n\nf111\n\n\n\n\ndensity F 13\n\n\n\n\n\n\nf211\n\n\n\n\ndensity F 14\n\n\n\n\n\n\nf021\n\n\n\n\ndensity F 15\n\n\n\n\n\n\nf121\n\n\n\n\ndensity F 16\n\n\n\n\n\n\nf221\n\n\n\n\ndensity F 17\n\n\n\n\n\n\nf002\n\n\n\n\ndensity F 18\n\n\n\n\n\n\nf102\n\n\n\n\ndensity F 19\n\n\n\n\n\n\nf202\n\n\n\n\ndensity F 20\n\n\n\n\n\n\nf012\n\n\n\n\ndensity F 21\n\n\n\n\n\n\nf112\n\n\n\n\ndensity F 22\n\n\n\n\n\n\nf212\n\n\n\n\ndensity F 23\n\n\n\n\n\n\nf022\n\n\n\n\ndensity F 24\n\n\n\n\n\n\nf122\n\n\n\n\ndensity F 25\n\n\n\n\n\n\nf222\n\n\n\n\ndensity F 26\n\n\n\n\n\n\navgP\n\n\n\n\navgP\n\n\n\n\n\n\nvarUX\n\n\n\n\nvarUX\n\n\n\n\n\n\nvarUY\n\n\n\n\nvarUY\n\n\n\n\n\n\nvarUZ\n\n\n\n\nvarUZ\n\n\n\n\n\n\nvarUXUY\n\n\n\n\nvarUXUY\n\n\n\n\n\n\nvarUXUZ\n\n\n\n\nvarUXUZ\n\n\n\n\n\n\nvarUYUZ\n\n\n\n\nvarUYUZ\n\n\n\n\n\n\navgdxu2\n\n\n\n\navgdxu2\n\n\n\n\n\n\navgdyv2\n\n\n\n\navgdyv2\n\n\n\n\n\n\navgdzw2\n\n\n\n\navgdzw2\n\n\n\n\n\n\navgUX\n\n\n\n\navgUX\n\n\n\n\n\n\navgUY\n\n\n\n\navgUY\n\n\n\n\n\n\navgUZ\n\n\n\n\navgUZ\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf000\n\n\nf000\n\n\n\n\ndensity F 0\n\n\n\n\n\n\nf100\n\n\nf100\n\n\n\n\ndensity F 1\n\n\n\n\n\n\nf200\n\n\nf200\n\n\n\n\ndensity F 2\n\n\n\n\n\n\nf010\n\n\nf010\n\n\n\n\ndensity F 3\n\n\n\n\n\n\nf110\n\n\nf110\n\n\n\n\ndensity F 4\n\n\n\n\n\n\nf210\n\n\nf210\n\n\n\n\ndensity F 5\n\n\n\n\n\n\nf020\n\n\nf020\n\n\n\n\ndensity F 6\n\n\n\n\n\n\nf120\n\n\nf120\n\n\n\n\ndensity F 7\n\n\n\n\n\n\nf220\n\n\nf220\n\n\n\n\ndensity F 8\n\n\n\n\n\n\nf001\n\n\nf001\n\n\n\n\ndensity F 9\n\n\n\n\n\n\nf101\n\n\nf101\n\n\n\n\ndensity F 10\n\n\n\n\n\n\nf201\n\n\nf201\n\n\n\n\ndensity F 11\n\n\n\n\n\n\nf011\n\n\nf011\n\n\n\n\ndensity F 12\n\n\n\n\n\n\nf111\n\n\nf111\n\n\n\n\ndensity F 13\n\n\n\n\n\n\nf211\n\n\nf211\n\n\n\n\ndensity F 14\n\n\n\n\n\n\nf021\n\n\nf021\n\n\n\n\ndensity F 15\n\n\n\n\n\n\nf121\n\n\nf121\n\n\n\n\ndensity F 16\n\n\n\n\n\n\nf221\n\n\nf221\n\n\n\n\ndensity F 17\n\n\n\n\n\n\nf002\n\n\nf002\n\n\n\n\ndensity F 18\n\n\n\n\n\n\nf102\n\n\nf102\n\n\n\n\ndensity F 19\n\n\n\n\n\n\nf202\n\n\nf202\n\n\n\n\ndensity F 20\n\n\n\n\n\n\nf012\n\n\nf012\n\n\n\n\ndensity F 21\n\n\n\n\n\n\nf112\n\n\nf112\n\n\n\n\ndensity F 22\n\n\n\n\n\n\nf212\n\n\nf212\n\n\n\n\ndensity F 23\n\n\n\n\n\n\nf022\n\n\nf022\n\n\n\n\ndensity F 24\n\n\n\n\n\n\nf122\n\n\nf122\n\n\n\n\ndensity F 25\n\n\n\n\n\n\nf222\n\n\nf222\n\n\n\n\ndensity F 26\n\n\n\n\n\n\navgP\n\n\navgP\n\n\n\n\navgP\n\n\n\n\n\n\nvarUX\n\n\nvarUX\n\n\n\n\nvarUX\n\n\n\n\n\n\nvarUY\n\n\nvarUY\n\n\n\n\nvarUY\n\n\n\n\n\n\nvarUZ\n\n\nvarUZ\n\n\n\n\nvarUZ\n\n\n\n\n\n\nvarUXUY\n\n\nvarUXUY\n\n\n\n\nvarUXUY\n\n\n\n\n\n\nvarUXUZ\n\n\nvarUXUZ\n\n\n\n\nvarUXUZ\n\n\n\n\n\n\nvarUYUZ\n\n\nvarUYUZ\n\n\n\n\nvarUYUZ\n\n\n\n\n\n\navgdxu2\n\n\navgdxu2\n\n\n\n\navgdxu2\n\n\n\n\n\n\navgdyv2\n\n\navgdyv2\n\n\n\n\navgdyv2\n\n\n\n\n\n\navgdzw2\n\n\navgdzw2\n\n\n\n\navgdzw2\n\n\n\n\n\n\navgUX\n\n\navgUX\n\n\n\n\navgUX\n\n\n\n\n\n\navgUY\n\n\navgUY\n\n\n\n\navgUY\n\n\n\n\n\n\navgUZ\n\n\navgUZ\n\n\n\n\navgUZ\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nBaseIteration\n\n\nRun\n\n\nf000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222, avgP, varUX, varUY, varUZ, varUXUY, varUXUZ, varUYUZ, avgdxu2, avgdyv2, avgdzw2, avgUX, avgUY, avgUZ\n\n\nf000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222, avgP, varUX, varUY, varUZ, varUXUY, varUXUZ, varUYUZ, avgdxu2, avgdyv2, avgdzw2, avgUX, avgUY, avgUZ\n\n\n\n\n\n\nBaseInit\n\n\nInit\n\n\nnone\n\n\nf000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222, avgP, varUX, varUY, varUZ, varUXUY, varUXUZ, varUYUZ, avgdxu2, avgdyv2, avgdzw2, avgUX, avgUY, avgUZ\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIteration\n\n\n\n\n\n\nInit\n\n\nBaseInit",
            "title": "d3q27 cumulant AVG"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_AVG/#description",
            "text": "d3q27_cumulant_AVG",
            "title": "Description"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_AVG/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_AVG/#zonal-settings",
            "text": "Name  Comment      Velocity  Inlet velocity    Pressure  Inlet pressure    Turbulence  Turbulence intensity    FluxInObj  Weight of [Volume flux] in objective    DragInObj  Weight of [Force exerted on body in X-direction] in objective    LiftInObj  Weight of [Force exerted on body in Z-direction] in objective    LateralInObj  Weight of [Force exerted on body in Y-direction] in objective",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_AVG/#global-settings",
            "text": "Name  Derived  Comment      nu   Viscosity    nubuffer   Viscosity in the buffer layer    GalileanCorrection   Galilean correction term    ForceX   Force force X    ForceY   Force force Y    ForceZ   Force force Z    Smag   Smagorinsky coefficient for SGS modeling    Omega   relaxation rate for 3rd order cumulants    Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_AVG/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      P  Pa  P    U  m/s  U    KinE  1  Turbulent kinetic energy    ReStr  1  Reynolds stress off-diagonal component    Dissipation  1  Dissipation e    avgU  m/s  avgU    varU  1  varU    averageP  Pa  averageP",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_AVG/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      Flux  m3/s  Volume flux    Drag  N  Force exerted on body in X-direction    Lift  N  Force exerted on body in Z-direction    Lateral  N  Force exerted on body in Y-direction    Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_AVG/#node-types",
            "text": "Group  Types      ADDITIONALS  NSymmetry, SSymmetry    BODY  Body    BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, WVelocityTurbulent, NVelocity, SVelocity, NPressure, SPressure    COLLISION  BGK, MRT    DESIGNSPACE  DesignSpace    HO_BOUNDARY  IB    NONE  None    OBJECTIVE  Inlet, Outlet    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_AVG/#solved-fields",
            "text": "Name  Access pattern  Comment      f000   density F 0    f100   density F 1    f200   density F 2    f010   density F 3    f110   density F 4    f210   density F 5    f020   density F 6    f120   density F 7    f220   density F 8    f001   density F 9    f101   density F 10    f201   density F 11    f011   density F 12    f111   density F 13    f211   density F 14    f021   density F 15    f121   density F 16    f221   density F 17    f002   density F 18    f102   density F 19    f202   density F 20    f012   density F 21    f112   density F 22    f212   density F 23    f022   density F 24    f122   density F 25    f222   density F 26    avgP   avgP    varUX   varUX    varUY   varUY    varUZ   varUZ    varUXUY   varUXUY    varUXUZ   varUXUZ    varUYUZ   varUYUZ    avgdxu2   avgdxu2    avgdyv2   avgdyv2    avgdzw2   avgdzw2    avgUX   avgUX    avgUY   avgUY    avgUZ   avgUZ",
            "title": "Solved fields"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_AVG/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment      f000  f000   density F 0    f100  f100   density F 1    f200  f200   density F 2    f010  f010   density F 3    f110  f110   density F 4    f210  f210   density F 5    f020  f020   density F 6    f120  f120   density F 7    f220  f220   density F 8    f001  f001   density F 9    f101  f101   density F 10    f201  f201   density F 11    f011  f011   density F 12    f111  f111   density F 13    f211  f211   density F 14    f021  f021   density F 15    f121  f121   density F 16    f221  f221   density F 17    f002  f002   density F 18    f102  f102   density F 19    f202  f202   density F 20    f012  f012   density F 21    f112  f112   density F 22    f212  f212   density F 23    f022  f022   density F 24    f122  f122   density F 25    f222  f222   density F 26    avgP  avgP   avgP    varUX  varUX   varUX    varUY  varUY   varUY    varUZ  varUZ   varUZ    varUXUY  varUXUY   varUXUY    varUXUZ  varUXUZ   varUXUZ    varUYUZ  varUYUZ   varUYUZ    avgdxu2  avgdxu2   avgdxu2    avgdyv2  avgdyv2   avgdyv2    avgdzw2  avgdzw2   avgdzw2    avgUX  avgUX   avgUX    avgUY  avgUY   avgUY    avgUZ  avgUZ   avgUZ",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_AVG/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      BaseIteration  Run  f000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222, avgP, varUX, varUY, varUZ, varUXUY, varUXUZ, varUYUZ, avgdxu2, avgdyv2, avgdzw2, avgUX, avgUY, avgUZ  f000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222, avgP, varUX, varUY, varUZ, varUXUY, varUXUZ, varUYUZ, avgdxu2, avgdyv2, avgdzw2, avgUX, avgUY, avgUZ    BaseInit  Init  none  f000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222, avgP, varUX, varUY, varUZ, varUXUY, varUXUZ, varUYUZ, avgdxu2, avgdyv2, avgdzw2, avgUX, avgUY, avgUZ",
            "title": "Action stages"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_AVG/#actions",
            "text": "Name  Stages      Iteration  BaseIteration    Init  BaseInit",
            "title": "Actions"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_AVG_IB/",
            "text": "Description\n\n\nd3q27_cumulant_AVG_IB\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nVelocity\n\n\nInlet velocity\n\n\n\n\n\n\nPressure\n\n\nInlet pressure\n\n\n\n\n\n\nTurbulence\n\n\nTurbulence intensity\n\n\n\n\n\n\nFluxInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nDragInObj\n\n\nWeight of [Force exerted on body in X-direction] in objective\n\n\n\n\n\n\nLiftInObj\n\n\nWeight of [Force exerted on body in Z-direction] in objective\n\n\n\n\n\n\nLateralInObj\n\n\nWeight of [Force exerted on body in Y-direction] in objective\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nnu\n\n\n\n\nViscosity\n\n\n\n\n\n\nnubuffer\n\n\n\n\nViscosity in the buffer layer\n\n\n\n\n\n\nGalileanCorrection\n\n\n\n\nGalilean correction term\n\n\n\n\n\n\nForceX\n\n\n\n\nForce force X\n\n\n\n\n\n\nForceY\n\n\n\n\nForce force Y\n\n\n\n\n\n\nForceZ\n\n\n\n\nForce force Z\n\n\n\n\n\n\nSmag\n\n\n\n\nSmagorinsky coefficient for SGS modeling\n\n\n\n\n\n\nOmega\n\n\n\n\nrelaxation rate for 3rd order cumulants\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nP\n\n\nPa\n\n\nP\n\n\n\n\n\n\nU\n\n\nm/s\n\n\nU\n\n\n\n\n\n\nKinE\n\n\n1\n\n\nTurbulent kinetic energy\n\n\n\n\n\n\nReStr\n\n\n1\n\n\nReynolds stress off-diagonal component\n\n\n\n\n\n\nDissipation\n\n\n1\n\n\nDissipation e\n\n\n\n\n\n\navgU\n\n\nm/s\n\n\navgU\n\n\n\n\n\n\nvarU\n\n\n1\n\n\nvarU\n\n\n\n\n\n\naverageP\n\n\nPa\n\n\naverageP\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nFlux\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nDrag\n\n\nN\n\n\nForce exerted on body in X-direction\n\n\n\n\n\n\nLift\n\n\nN\n\n\nForce exerted on body in Z-direction\n\n\n\n\n\n\nLateral\n\n\nN\n\n\nForce exerted on body in Y-direction\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nADDITIONALS\n\n\nNSymmetry, SSymmetry\n\n\n\n\n\n\nBODY\n\n\nBody\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, WVelocityTurbulent, NVelocity, SVelocity, NPressure, SPressure\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nHO_BOUNDARY\n\n\nIB\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf000\n\n\n\n\ndensity F 0\n\n\n\n\n\n\nf100\n\n\n\n\ndensity F 1\n\n\n\n\n\n\nf200\n\n\n\n\ndensity F 2\n\n\n\n\n\n\nf010\n\n\n\n\ndensity F 3\n\n\n\n\n\n\nf110\n\n\n\n\ndensity F 4\n\n\n\n\n\n\nf210\n\n\n\n\ndensity F 5\n\n\n\n\n\n\nf020\n\n\n\n\ndensity F 6\n\n\n\n\n\n\nf120\n\n\n\n\ndensity F 7\n\n\n\n\n\n\nf220\n\n\n\n\ndensity F 8\n\n\n\n\n\n\nf001\n\n\n\n\ndensity F 9\n\n\n\n\n\n\nf101\n\n\n\n\ndensity F 10\n\n\n\n\n\n\nf201\n\n\n\n\ndensity F 11\n\n\n\n\n\n\nf011\n\n\n\n\ndensity F 12\n\n\n\n\n\n\nf111\n\n\n\n\ndensity F 13\n\n\n\n\n\n\nf211\n\n\n\n\ndensity F 14\n\n\n\n\n\n\nf021\n\n\n\n\ndensity F 15\n\n\n\n\n\n\nf121\n\n\n\n\ndensity F 16\n\n\n\n\n\n\nf221\n\n\n\n\ndensity F 17\n\n\n\n\n\n\nf002\n\n\n\n\ndensity F 18\n\n\n\n\n\n\nf102\n\n\n\n\ndensity F 19\n\n\n\n\n\n\nf202\n\n\n\n\ndensity F 20\n\n\n\n\n\n\nf012\n\n\n\n\ndensity F 21\n\n\n\n\n\n\nf112\n\n\n\n\ndensity F 22\n\n\n\n\n\n\nf212\n\n\n\n\ndensity F 23\n\n\n\n\n\n\nf022\n\n\n\n\ndensity F 24\n\n\n\n\n\n\nf122\n\n\n\n\ndensity F 25\n\n\n\n\n\n\nf222\n\n\n\n\ndensity F 26\n\n\n\n\n\n\navgP\n\n\n\n\navgP\n\n\n\n\n\n\nvarUX\n\n\n\n\nvarUX\n\n\n\n\n\n\nvarUY\n\n\n\n\nvarUY\n\n\n\n\n\n\nvarUZ\n\n\n\n\nvarUZ\n\n\n\n\n\n\nvarUXUY\n\n\n\n\nvarUXUY\n\n\n\n\n\n\nvarUXUZ\n\n\n\n\nvarUXUZ\n\n\n\n\n\n\nvarUYUZ\n\n\n\n\nvarUYUZ\n\n\n\n\n\n\navgdxu2\n\n\n\n\navgdxu2\n\n\n\n\n\n\navgdyv2\n\n\n\n\navgdyv2\n\n\n\n\n\n\navgdzw2\n\n\n\n\navgdzw2\n\n\n\n\n\n\navgUX\n\n\n\n\navgUX\n\n\n\n\n\n\navgUY\n\n\n\n\navgUY\n\n\n\n\n\n\navgUZ\n\n\n\n\navgUZ\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf000\n\n\nf000\n\n\n\n\ndensity F 0\n\n\n\n\n\n\nf100\n\n\nf100\n\n\n\n\ndensity F 1\n\n\n\n\n\n\nf200\n\n\nf200\n\n\n\n\ndensity F 2\n\n\n\n\n\n\nf010\n\n\nf010\n\n\n\n\ndensity F 3\n\n\n\n\n\n\nf110\n\n\nf110\n\n\n\n\ndensity F 4\n\n\n\n\n\n\nf210\n\n\nf210\n\n\n\n\ndensity F 5\n\n\n\n\n\n\nf020\n\n\nf020\n\n\n\n\ndensity F 6\n\n\n\n\n\n\nf120\n\n\nf120\n\n\n\n\ndensity F 7\n\n\n\n\n\n\nf220\n\n\nf220\n\n\n\n\ndensity F 8\n\n\n\n\n\n\nf001\n\n\nf001\n\n\n\n\ndensity F 9\n\n\n\n\n\n\nf101\n\n\nf101\n\n\n\n\ndensity F 10\n\n\n\n\n\n\nf201\n\n\nf201\n\n\n\n\ndensity F 11\n\n\n\n\n\n\nf011\n\n\nf011\n\n\n\n\ndensity F 12\n\n\n\n\n\n\nf111\n\n\nf111\n\n\n\n\ndensity F 13\n\n\n\n\n\n\nf211\n\n\nf211\n\n\n\n\ndensity F 14\n\n\n\n\n\n\nf021\n\n\nf021\n\n\n\n\ndensity F 15\n\n\n\n\n\n\nf121\n\n\nf121\n\n\n\n\ndensity F 16\n\n\n\n\n\n\nf221\n\n\nf221\n\n\n\n\ndensity F 17\n\n\n\n\n\n\nf002\n\n\nf002\n\n\n\n\ndensity F 18\n\n\n\n\n\n\nf102\n\n\nf102\n\n\n\n\ndensity F 19\n\n\n\n\n\n\nf202\n\n\nf202\n\n\n\n\ndensity F 20\n\n\n\n\n\n\nf012\n\n\nf012\n\n\n\n\ndensity F 21\n\n\n\n\n\n\nf112\n\n\nf112\n\n\n\n\ndensity F 22\n\n\n\n\n\n\nf212\n\n\nf212\n\n\n\n\ndensity F 23\n\n\n\n\n\n\nf022\n\n\nf022\n\n\n\n\ndensity F 24\n\n\n\n\n\n\nf122\n\n\nf122\n\n\n\n\ndensity F 25\n\n\n\n\n\n\nf222\n\n\nf222\n\n\n\n\ndensity F 26\n\n\n\n\n\n\navgP\n\n\navgP\n\n\n\n\navgP\n\n\n\n\n\n\nvarUX\n\n\nvarUX\n\n\n\n\nvarUX\n\n\n\n\n\n\nvarUY\n\n\nvarUY\n\n\n\n\nvarUY\n\n\n\n\n\n\nvarUZ\n\n\nvarUZ\n\n\n\n\nvarUZ\n\n\n\n\n\n\nvarUXUY\n\n\nvarUXUY\n\n\n\n\nvarUXUY\n\n\n\n\n\n\nvarUXUZ\n\n\nvarUXUZ\n\n\n\n\nvarUXUZ\n\n\n\n\n\n\nvarUYUZ\n\n\nvarUYUZ\n\n\n\n\nvarUYUZ\n\n\n\n\n\n\navgdxu2\n\n\navgdxu2\n\n\n\n\navgdxu2\n\n\n\n\n\n\navgdyv2\n\n\navgdyv2\n\n\n\n\navgdyv2\n\n\n\n\n\n\navgdzw2\n\n\navgdzw2\n\n\n\n\navgdzw2\n\n\n\n\n\n\navgUX\n\n\navgUX\n\n\n\n\navgUX\n\n\n\n\n\n\navgUY\n\n\navgUY\n\n\n\n\navgUY\n\n\n\n\n\n\navgUZ\n\n\navgUZ\n\n\n\n\navgUZ\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nBaseIteration\n\n\nRun\n\n\nf000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222, avgP, varUX, varUY, varUZ, varUXUY, varUXUZ, varUYUZ, avgdxu2, avgdyv2, avgdzw2, avgUX, avgUY, avgUZ\n\n\nf000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222, avgP, varUX, varUY, varUZ, varUXUY, varUXUZ, varUYUZ, avgdxu2, avgdyv2, avgdzw2, avgUX, avgUY, avgUZ\n\n\n\n\n\n\nBaseInit\n\n\nInit\n\n\nnone\n\n\nf000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222, avgP, varUX, varUY, varUZ, varUXUY, varUXUZ, varUYUZ, avgdxu2, avgdyv2, avgdzw2, avgUX, avgUY, avgUZ\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIteration\n\n\n\n\n\n\nInit\n\n\nBaseInit",
            "title": "d3q27 cumulant AVG IB"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_AVG_IB/#description",
            "text": "d3q27_cumulant_AVG_IB",
            "title": "Description"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_AVG_IB/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_AVG_IB/#zonal-settings",
            "text": "Name  Comment      Velocity  Inlet velocity    Pressure  Inlet pressure    Turbulence  Turbulence intensity    FluxInObj  Weight of [Volume flux] in objective    DragInObj  Weight of [Force exerted on body in X-direction] in objective    LiftInObj  Weight of [Force exerted on body in Z-direction] in objective    LateralInObj  Weight of [Force exerted on body in Y-direction] in objective",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_AVG_IB/#global-settings",
            "text": "Name  Derived  Comment      nu   Viscosity    nubuffer   Viscosity in the buffer layer    GalileanCorrection   Galilean correction term    ForceX   Force force X    ForceY   Force force Y    ForceZ   Force force Z    Smag   Smagorinsky coefficient for SGS modeling    Omega   relaxation rate for 3rd order cumulants    Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_AVG_IB/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      P  Pa  P    U  m/s  U    KinE  1  Turbulent kinetic energy    ReStr  1  Reynolds stress off-diagonal component    Dissipation  1  Dissipation e    avgU  m/s  avgU    varU  1  varU    averageP  Pa  averageP",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_AVG_IB/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      Flux  m3/s  Volume flux    Drag  N  Force exerted on body in X-direction    Lift  N  Force exerted on body in Z-direction    Lateral  N  Force exerted on body in Y-direction    Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_AVG_IB/#node-types",
            "text": "Group  Types      ADDITIONALS  NSymmetry, SSymmetry    BODY  Body    BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, WVelocityTurbulent, NVelocity, SVelocity, NPressure, SPressure    COLLISION  BGK, MRT    DESIGNSPACE  DesignSpace    HO_BOUNDARY  IB    NONE  None    OBJECTIVE  Inlet, Outlet    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_AVG_IB/#solved-fields",
            "text": "Name  Access pattern  Comment      f000   density F 0    f100   density F 1    f200   density F 2    f010   density F 3    f110   density F 4    f210   density F 5    f020   density F 6    f120   density F 7    f220   density F 8    f001   density F 9    f101   density F 10    f201   density F 11    f011   density F 12    f111   density F 13    f211   density F 14    f021   density F 15    f121   density F 16    f221   density F 17    f002   density F 18    f102   density F 19    f202   density F 20    f012   density F 21    f112   density F 22    f212   density F 23    f022   density F 24    f122   density F 25    f222   density F 26    avgP   avgP    varUX   varUX    varUY   varUY    varUZ   varUZ    varUXUY   varUXUY    varUXUZ   varUXUZ    varUYUZ   varUYUZ    avgdxu2   avgdxu2    avgdyv2   avgdyv2    avgdzw2   avgdzw2    avgUX   avgUX    avgUY   avgUY    avgUZ   avgUZ",
            "title": "Solved fields"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_AVG_IB/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment      f000  f000   density F 0    f100  f100   density F 1    f200  f200   density F 2    f010  f010   density F 3    f110  f110   density F 4    f210  f210   density F 5    f020  f020   density F 6    f120  f120   density F 7    f220  f220   density F 8    f001  f001   density F 9    f101  f101   density F 10    f201  f201   density F 11    f011  f011   density F 12    f111  f111   density F 13    f211  f211   density F 14    f021  f021   density F 15    f121  f121   density F 16    f221  f221   density F 17    f002  f002   density F 18    f102  f102   density F 19    f202  f202   density F 20    f012  f012   density F 21    f112  f112   density F 22    f212  f212   density F 23    f022  f022   density F 24    f122  f122   density F 25    f222  f222   density F 26    avgP  avgP   avgP    varUX  varUX   varUX    varUY  varUY   varUY    varUZ  varUZ   varUZ    varUXUY  varUXUY   varUXUY    varUXUZ  varUXUZ   varUXUZ    varUYUZ  varUYUZ   varUYUZ    avgdxu2  avgdxu2   avgdxu2    avgdyv2  avgdyv2   avgdyv2    avgdzw2  avgdzw2   avgdzw2    avgUX  avgUX   avgUX    avgUY  avgUY   avgUY    avgUZ  avgUZ   avgUZ",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_AVG_IB/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      BaseIteration  Run  f000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222, avgP, varUX, varUY, varUZ, varUXUY, varUXUZ, varUYUZ, avgdxu2, avgdyv2, avgdzw2, avgUX, avgUY, avgUZ  f000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222, avgP, varUX, varUY, varUZ, varUXUY, varUXUZ, varUYUZ, avgdxu2, avgdyv2, avgdzw2, avgUX, avgUY, avgUZ    BaseInit  Init  none  f000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222, avgP, varUX, varUY, varUZ, varUXUY, varUXUZ, varUYUZ, avgdxu2, avgdyv2, avgdzw2, avgUX, avgUY, avgUZ",
            "title": "Action stages"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_AVG_IB/#actions",
            "text": "Name  Stages      Iteration  BaseIteration    Init  BaseInit",
            "title": "Actions"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_AVG_IB_SMAG/",
            "text": "Description\n\n\nd3q27_cumulant_AVG_IB_SMAG\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nVelocity\n\n\nInlet velocity\n\n\n\n\n\n\nPressure\n\n\nInlet pressure\n\n\n\n\n\n\nTurbulence\n\n\nTurbulence intensity\n\n\n\n\n\n\nFluxInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nDragInObj\n\n\nWeight of [Force exerted on body in X-direction] in objective\n\n\n\n\n\n\nLiftInObj\n\n\nWeight of [Force exerted on body in Z-direction] in objective\n\n\n\n\n\n\nLateralInObj\n\n\nWeight of [Force exerted on body in Y-direction] in objective\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nnu\n\n\n\n\nViscosity\n\n\n\n\n\n\nnubuffer\n\n\n\n\nViscosity in the buffer layer\n\n\n\n\n\n\nGalileanCorrection\n\n\n\n\nGalilean correction term\n\n\n\n\n\n\nForceX\n\n\n\n\nForce force X\n\n\n\n\n\n\nForceY\n\n\n\n\nForce force Y\n\n\n\n\n\n\nForceZ\n\n\n\n\nForce force Z\n\n\n\n\n\n\nSmag\n\n\n\n\nSmagorinsky coefficient for SGS modeling\n\n\n\n\n\n\nOmega\n\n\n\n\nrelaxation rate for 3rd order cumulants\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nP\n\n\nPa\n\n\nP\n\n\n\n\n\n\nU\n\n\nm/s\n\n\nU\n\n\n\n\n\n\nKinE\n\n\n1\n\n\nTurbulent kinetic energy\n\n\n\n\n\n\nReStr\n\n\n1\n\n\nReynolds stress off-diagonal component\n\n\n\n\n\n\nDissipation\n\n\n1\n\n\nDissipation e\n\n\n\n\n\n\navgU\n\n\nm/s\n\n\navgU\n\n\n\n\n\n\nvarU\n\n\n1\n\n\nvarU\n\n\n\n\n\n\naverageP\n\n\nPa\n\n\naverageP\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nFlux\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nDrag\n\n\nN\n\n\nForce exerted on body in X-direction\n\n\n\n\n\n\nLift\n\n\nN\n\n\nForce exerted on body in Z-direction\n\n\n\n\n\n\nLateral\n\n\nN\n\n\nForce exerted on body in Y-direction\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nADDITIONALS\n\n\nNSymmetry, SSymmetry\n\n\n\n\n\n\nBODY\n\n\nBody\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, WVelocityTurbulent, NVelocity, SVelocity, NPressure, SPressure\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nHO_BOUNDARY\n\n\nIB\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf000\n\n\n\n\ndensity F 0\n\n\n\n\n\n\nf100\n\n\n\n\ndensity F 1\n\n\n\n\n\n\nf200\n\n\n\n\ndensity F 2\n\n\n\n\n\n\nf010\n\n\n\n\ndensity F 3\n\n\n\n\n\n\nf110\n\n\n\n\ndensity F 4\n\n\n\n\n\n\nf210\n\n\n\n\ndensity F 5\n\n\n\n\n\n\nf020\n\n\n\n\ndensity F 6\n\n\n\n\n\n\nf120\n\n\n\n\ndensity F 7\n\n\n\n\n\n\nf220\n\n\n\n\ndensity F 8\n\n\n\n\n\n\nf001\n\n\n\n\ndensity F 9\n\n\n\n\n\n\nf101\n\n\n\n\ndensity F 10\n\n\n\n\n\n\nf201\n\n\n\n\ndensity F 11\n\n\n\n\n\n\nf011\n\n\n\n\ndensity F 12\n\n\n\n\n\n\nf111\n\n\n\n\ndensity F 13\n\n\n\n\n\n\nf211\n\n\n\n\ndensity F 14\n\n\n\n\n\n\nf021\n\n\n\n\ndensity F 15\n\n\n\n\n\n\nf121\n\n\n\n\ndensity F 16\n\n\n\n\n\n\nf221\n\n\n\n\ndensity F 17\n\n\n\n\n\n\nf002\n\n\n\n\ndensity F 18\n\n\n\n\n\n\nf102\n\n\n\n\ndensity F 19\n\n\n\n\n\n\nf202\n\n\n\n\ndensity F 20\n\n\n\n\n\n\nf012\n\n\n\n\ndensity F 21\n\n\n\n\n\n\nf112\n\n\n\n\ndensity F 22\n\n\n\n\n\n\nf212\n\n\n\n\ndensity F 23\n\n\n\n\n\n\nf022\n\n\n\n\ndensity F 24\n\n\n\n\n\n\nf122\n\n\n\n\ndensity F 25\n\n\n\n\n\n\nf222\n\n\n\n\ndensity F 26\n\n\n\n\n\n\navgP\n\n\n\n\navgP\n\n\n\n\n\n\nvarUX\n\n\n\n\nvarUX\n\n\n\n\n\n\nvarUY\n\n\n\n\nvarUY\n\n\n\n\n\n\nvarUZ\n\n\n\n\nvarUZ\n\n\n\n\n\n\nvarUXUY\n\n\n\n\nvarUXUY\n\n\n\n\n\n\nvarUXUZ\n\n\n\n\nvarUXUZ\n\n\n\n\n\n\nvarUYUZ\n\n\n\n\nvarUYUZ\n\n\n\n\n\n\navgdxu2\n\n\n\n\navgdxu2\n\n\n\n\n\n\navgdyv2\n\n\n\n\navgdyv2\n\n\n\n\n\n\navgdzw2\n\n\n\n\navgdzw2\n\n\n\n\n\n\navgUX\n\n\n\n\navgUX\n\n\n\n\n\n\navgUY\n\n\n\n\navgUY\n\n\n\n\n\n\navgUZ\n\n\n\n\navgUZ\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf000\n\n\nf000\n\n\n\n\ndensity F 0\n\n\n\n\n\n\nf100\n\n\nf100\n\n\n\n\ndensity F 1\n\n\n\n\n\n\nf200\n\n\nf200\n\n\n\n\ndensity F 2\n\n\n\n\n\n\nf010\n\n\nf010\n\n\n\n\ndensity F 3\n\n\n\n\n\n\nf110\n\n\nf110\n\n\n\n\ndensity F 4\n\n\n\n\n\n\nf210\n\n\nf210\n\n\n\n\ndensity F 5\n\n\n\n\n\n\nf020\n\n\nf020\n\n\n\n\ndensity F 6\n\n\n\n\n\n\nf120\n\n\nf120\n\n\n\n\ndensity F 7\n\n\n\n\n\n\nf220\n\n\nf220\n\n\n\n\ndensity F 8\n\n\n\n\n\n\nf001\n\n\nf001\n\n\n\n\ndensity F 9\n\n\n\n\n\n\nf101\n\n\nf101\n\n\n\n\ndensity F 10\n\n\n\n\n\n\nf201\n\n\nf201\n\n\n\n\ndensity F 11\n\n\n\n\n\n\nf011\n\n\nf011\n\n\n\n\ndensity F 12\n\n\n\n\n\n\nf111\n\n\nf111\n\n\n\n\ndensity F 13\n\n\n\n\n\n\nf211\n\n\nf211\n\n\n\n\ndensity F 14\n\n\n\n\n\n\nf021\n\n\nf021\n\n\n\n\ndensity F 15\n\n\n\n\n\n\nf121\n\n\nf121\n\n\n\n\ndensity F 16\n\n\n\n\n\n\nf221\n\n\nf221\n\n\n\n\ndensity F 17\n\n\n\n\n\n\nf002\n\n\nf002\n\n\n\n\ndensity F 18\n\n\n\n\n\n\nf102\n\n\nf102\n\n\n\n\ndensity F 19\n\n\n\n\n\n\nf202\n\n\nf202\n\n\n\n\ndensity F 20\n\n\n\n\n\n\nf012\n\n\nf012\n\n\n\n\ndensity F 21\n\n\n\n\n\n\nf112\n\n\nf112\n\n\n\n\ndensity F 22\n\n\n\n\n\n\nf212\n\n\nf212\n\n\n\n\ndensity F 23\n\n\n\n\n\n\nf022\n\n\nf022\n\n\n\n\ndensity F 24\n\n\n\n\n\n\nf122\n\n\nf122\n\n\n\n\ndensity F 25\n\n\n\n\n\n\nf222\n\n\nf222\n\n\n\n\ndensity F 26\n\n\n\n\n\n\navgP\n\n\navgP\n\n\n\n\navgP\n\n\n\n\n\n\nvarUX\n\n\nvarUX\n\n\n\n\nvarUX\n\n\n\n\n\n\nvarUY\n\n\nvarUY\n\n\n\n\nvarUY\n\n\n\n\n\n\nvarUZ\n\n\nvarUZ\n\n\n\n\nvarUZ\n\n\n\n\n\n\nvarUXUY\n\n\nvarUXUY\n\n\n\n\nvarUXUY\n\n\n\n\n\n\nvarUXUZ\n\n\nvarUXUZ\n\n\n\n\nvarUXUZ\n\n\n\n\n\n\nvarUYUZ\n\n\nvarUYUZ\n\n\n\n\nvarUYUZ\n\n\n\n\n\n\navgdxu2\n\n\navgdxu2\n\n\n\n\navgdxu2\n\n\n\n\n\n\navgdyv2\n\n\navgdyv2\n\n\n\n\navgdyv2\n\n\n\n\n\n\navgdzw2\n\n\navgdzw2\n\n\n\n\navgdzw2\n\n\n\n\n\n\navgUX\n\n\navgUX\n\n\n\n\navgUX\n\n\n\n\n\n\navgUY\n\n\navgUY\n\n\n\n\navgUY\n\n\n\n\n\n\navgUZ\n\n\navgUZ\n\n\n\n\navgUZ\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nBaseIteration\n\n\nRun\n\n\nf000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222, avgP, varUX, varUY, varUZ, varUXUY, varUXUZ, varUYUZ, avgdxu2, avgdyv2, avgdzw2, avgUX, avgUY, avgUZ\n\n\nf000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222, avgP, varUX, varUY, varUZ, varUXUY, varUXUZ, varUYUZ, avgdxu2, avgdyv2, avgdzw2, avgUX, avgUY, avgUZ\n\n\n\n\n\n\nBaseInit\n\n\nInit\n\n\nnone\n\n\nf000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222, avgP, varUX, varUY, varUZ, varUXUY, varUXUZ, varUYUZ, avgdxu2, avgdyv2, avgdzw2, avgUX, avgUY, avgUZ\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIteration\n\n\n\n\n\n\nInit\n\n\nBaseInit",
            "title": "d3q27 cumulant AVG IB SMAG"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_AVG_IB_SMAG/#description",
            "text": "d3q27_cumulant_AVG_IB_SMAG",
            "title": "Description"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_AVG_IB_SMAG/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_AVG_IB_SMAG/#zonal-settings",
            "text": "Name  Comment      Velocity  Inlet velocity    Pressure  Inlet pressure    Turbulence  Turbulence intensity    FluxInObj  Weight of [Volume flux] in objective    DragInObj  Weight of [Force exerted on body in X-direction] in objective    LiftInObj  Weight of [Force exerted on body in Z-direction] in objective    LateralInObj  Weight of [Force exerted on body in Y-direction] in objective",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_AVG_IB_SMAG/#global-settings",
            "text": "Name  Derived  Comment      nu   Viscosity    nubuffer   Viscosity in the buffer layer    GalileanCorrection   Galilean correction term    ForceX   Force force X    ForceY   Force force Y    ForceZ   Force force Z    Smag   Smagorinsky coefficient for SGS modeling    Omega   relaxation rate for 3rd order cumulants    Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_AVG_IB_SMAG/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      P  Pa  P    U  m/s  U    KinE  1  Turbulent kinetic energy    ReStr  1  Reynolds stress off-diagonal component    Dissipation  1  Dissipation e    avgU  m/s  avgU    varU  1  varU    averageP  Pa  averageP",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_AVG_IB_SMAG/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      Flux  m3/s  Volume flux    Drag  N  Force exerted on body in X-direction    Lift  N  Force exerted on body in Z-direction    Lateral  N  Force exerted on body in Y-direction    Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_AVG_IB_SMAG/#node-types",
            "text": "Group  Types      ADDITIONALS  NSymmetry, SSymmetry    BODY  Body    BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, WVelocityTurbulent, NVelocity, SVelocity, NPressure, SPressure    COLLISION  BGK, MRT    DESIGNSPACE  DesignSpace    HO_BOUNDARY  IB    NONE  None    OBJECTIVE  Inlet, Outlet    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_AVG_IB_SMAG/#solved-fields",
            "text": "Name  Access pattern  Comment      f000   density F 0    f100   density F 1    f200   density F 2    f010   density F 3    f110   density F 4    f210   density F 5    f020   density F 6    f120   density F 7    f220   density F 8    f001   density F 9    f101   density F 10    f201   density F 11    f011   density F 12    f111   density F 13    f211   density F 14    f021   density F 15    f121   density F 16    f221   density F 17    f002   density F 18    f102   density F 19    f202   density F 20    f012   density F 21    f112   density F 22    f212   density F 23    f022   density F 24    f122   density F 25    f222   density F 26    avgP   avgP    varUX   varUX    varUY   varUY    varUZ   varUZ    varUXUY   varUXUY    varUXUZ   varUXUZ    varUYUZ   varUYUZ    avgdxu2   avgdxu2    avgdyv2   avgdyv2    avgdzw2   avgdzw2    avgUX   avgUX    avgUY   avgUY    avgUZ   avgUZ",
            "title": "Solved fields"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_AVG_IB_SMAG/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment      f000  f000   density F 0    f100  f100   density F 1    f200  f200   density F 2    f010  f010   density F 3    f110  f110   density F 4    f210  f210   density F 5    f020  f020   density F 6    f120  f120   density F 7    f220  f220   density F 8    f001  f001   density F 9    f101  f101   density F 10    f201  f201   density F 11    f011  f011   density F 12    f111  f111   density F 13    f211  f211   density F 14    f021  f021   density F 15    f121  f121   density F 16    f221  f221   density F 17    f002  f002   density F 18    f102  f102   density F 19    f202  f202   density F 20    f012  f012   density F 21    f112  f112   density F 22    f212  f212   density F 23    f022  f022   density F 24    f122  f122   density F 25    f222  f222   density F 26    avgP  avgP   avgP    varUX  varUX   varUX    varUY  varUY   varUY    varUZ  varUZ   varUZ    varUXUY  varUXUY   varUXUY    varUXUZ  varUXUZ   varUXUZ    varUYUZ  varUYUZ   varUYUZ    avgdxu2  avgdxu2   avgdxu2    avgdyv2  avgdyv2   avgdyv2    avgdzw2  avgdzw2   avgdzw2    avgUX  avgUX   avgUX    avgUY  avgUY   avgUY    avgUZ  avgUZ   avgUZ",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_AVG_IB_SMAG/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      BaseIteration  Run  f000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222, avgP, varUX, varUY, varUZ, varUXUY, varUXUZ, varUYUZ, avgdxu2, avgdyv2, avgdzw2, avgUX, avgUY, avgUZ  f000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222, avgP, varUX, varUY, varUZ, varUXUY, varUXUZ, varUYUZ, avgdxu2, avgdyv2, avgdzw2, avgUX, avgUY, avgUZ    BaseInit  Init  none  f000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222, avgP, varUX, varUY, varUZ, varUXUY, varUXUZ, varUYUZ, avgdxu2, avgdyv2, avgdzw2, avgUX, avgUY, avgUZ",
            "title": "Action stages"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_AVG_IB_SMAG/#actions",
            "text": "Name  Stages      Iteration  BaseIteration    Init  BaseInit",
            "title": "Actions"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_AVG_SMAG/",
            "text": "Description\n\n\nd3q27_cumulant_AVG_SMAG\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nVelocity\n\n\nInlet velocity\n\n\n\n\n\n\nPressure\n\n\nInlet pressure\n\n\n\n\n\n\nTurbulence\n\n\nTurbulence intensity\n\n\n\n\n\n\nFluxInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nDragInObj\n\n\nWeight of [Force exerted on body in X-direction] in objective\n\n\n\n\n\n\nLiftInObj\n\n\nWeight of [Force exerted on body in Z-direction] in objective\n\n\n\n\n\n\nLateralInObj\n\n\nWeight of [Force exerted on body in Y-direction] in objective\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nnu\n\n\n\n\nViscosity\n\n\n\n\n\n\nnubuffer\n\n\n\n\nViscosity in the buffer layer\n\n\n\n\n\n\nGalileanCorrection\n\n\n\n\nGalilean correction term\n\n\n\n\n\n\nForceX\n\n\n\n\nForce force X\n\n\n\n\n\n\nForceY\n\n\n\n\nForce force Y\n\n\n\n\n\n\nForceZ\n\n\n\n\nForce force Z\n\n\n\n\n\n\nSmag\n\n\n\n\nSmagorinsky coefficient for SGS modeling\n\n\n\n\n\n\nOmega\n\n\n\n\nrelaxation rate for 3rd order cumulants\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nP\n\n\nPa\n\n\nP\n\n\n\n\n\n\nU\n\n\nm/s\n\n\nU\n\n\n\n\n\n\nKinE\n\n\n1\n\n\nTurbulent kinetic energy\n\n\n\n\n\n\nReStr\n\n\n1\n\n\nReynolds stress off-diagonal component\n\n\n\n\n\n\nDissipation\n\n\n1\n\n\nDissipation e\n\n\n\n\n\n\navgU\n\n\nm/s\n\n\navgU\n\n\n\n\n\n\nvarU\n\n\n1\n\n\nvarU\n\n\n\n\n\n\naverageP\n\n\nPa\n\n\naverageP\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nFlux\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nDrag\n\n\nN\n\n\nForce exerted on body in X-direction\n\n\n\n\n\n\nLift\n\n\nN\n\n\nForce exerted on body in Z-direction\n\n\n\n\n\n\nLateral\n\n\nN\n\n\nForce exerted on body in Y-direction\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nADDITIONALS\n\n\nNSymmetry, SSymmetry\n\n\n\n\n\n\nBODY\n\n\nBody\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, WVelocityTurbulent, NVelocity, SVelocity, NPressure, SPressure\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nHO_BOUNDARY\n\n\nIB\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf000\n\n\n\n\ndensity F 0\n\n\n\n\n\n\nf100\n\n\n\n\ndensity F 1\n\n\n\n\n\n\nf200\n\n\n\n\ndensity F 2\n\n\n\n\n\n\nf010\n\n\n\n\ndensity F 3\n\n\n\n\n\n\nf110\n\n\n\n\ndensity F 4\n\n\n\n\n\n\nf210\n\n\n\n\ndensity F 5\n\n\n\n\n\n\nf020\n\n\n\n\ndensity F 6\n\n\n\n\n\n\nf120\n\n\n\n\ndensity F 7\n\n\n\n\n\n\nf220\n\n\n\n\ndensity F 8\n\n\n\n\n\n\nf001\n\n\n\n\ndensity F 9\n\n\n\n\n\n\nf101\n\n\n\n\ndensity F 10\n\n\n\n\n\n\nf201\n\n\n\n\ndensity F 11\n\n\n\n\n\n\nf011\n\n\n\n\ndensity F 12\n\n\n\n\n\n\nf111\n\n\n\n\ndensity F 13\n\n\n\n\n\n\nf211\n\n\n\n\ndensity F 14\n\n\n\n\n\n\nf021\n\n\n\n\ndensity F 15\n\n\n\n\n\n\nf121\n\n\n\n\ndensity F 16\n\n\n\n\n\n\nf221\n\n\n\n\ndensity F 17\n\n\n\n\n\n\nf002\n\n\n\n\ndensity F 18\n\n\n\n\n\n\nf102\n\n\n\n\ndensity F 19\n\n\n\n\n\n\nf202\n\n\n\n\ndensity F 20\n\n\n\n\n\n\nf012\n\n\n\n\ndensity F 21\n\n\n\n\n\n\nf112\n\n\n\n\ndensity F 22\n\n\n\n\n\n\nf212\n\n\n\n\ndensity F 23\n\n\n\n\n\n\nf022\n\n\n\n\ndensity F 24\n\n\n\n\n\n\nf122\n\n\n\n\ndensity F 25\n\n\n\n\n\n\nf222\n\n\n\n\ndensity F 26\n\n\n\n\n\n\navgP\n\n\n\n\navgP\n\n\n\n\n\n\nvarUX\n\n\n\n\nvarUX\n\n\n\n\n\n\nvarUY\n\n\n\n\nvarUY\n\n\n\n\n\n\nvarUZ\n\n\n\n\nvarUZ\n\n\n\n\n\n\nvarUXUY\n\n\n\n\nvarUXUY\n\n\n\n\n\n\nvarUXUZ\n\n\n\n\nvarUXUZ\n\n\n\n\n\n\nvarUYUZ\n\n\n\n\nvarUYUZ\n\n\n\n\n\n\navgdxu2\n\n\n\n\navgdxu2\n\n\n\n\n\n\navgdyv2\n\n\n\n\navgdyv2\n\n\n\n\n\n\navgdzw2\n\n\n\n\navgdzw2\n\n\n\n\n\n\navgUX\n\n\n\n\navgUX\n\n\n\n\n\n\navgUY\n\n\n\n\navgUY\n\n\n\n\n\n\navgUZ\n\n\n\n\navgUZ\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf000\n\n\nf000\n\n\n\n\ndensity F 0\n\n\n\n\n\n\nf100\n\n\nf100\n\n\n\n\ndensity F 1\n\n\n\n\n\n\nf200\n\n\nf200\n\n\n\n\ndensity F 2\n\n\n\n\n\n\nf010\n\n\nf010\n\n\n\n\ndensity F 3\n\n\n\n\n\n\nf110\n\n\nf110\n\n\n\n\ndensity F 4\n\n\n\n\n\n\nf210\n\n\nf210\n\n\n\n\ndensity F 5\n\n\n\n\n\n\nf020\n\n\nf020\n\n\n\n\ndensity F 6\n\n\n\n\n\n\nf120\n\n\nf120\n\n\n\n\ndensity F 7\n\n\n\n\n\n\nf220\n\n\nf220\n\n\n\n\ndensity F 8\n\n\n\n\n\n\nf001\n\n\nf001\n\n\n\n\ndensity F 9\n\n\n\n\n\n\nf101\n\n\nf101\n\n\n\n\ndensity F 10\n\n\n\n\n\n\nf201\n\n\nf201\n\n\n\n\ndensity F 11\n\n\n\n\n\n\nf011\n\n\nf011\n\n\n\n\ndensity F 12\n\n\n\n\n\n\nf111\n\n\nf111\n\n\n\n\ndensity F 13\n\n\n\n\n\n\nf211\n\n\nf211\n\n\n\n\ndensity F 14\n\n\n\n\n\n\nf021\n\n\nf021\n\n\n\n\ndensity F 15\n\n\n\n\n\n\nf121\n\n\nf121\n\n\n\n\ndensity F 16\n\n\n\n\n\n\nf221\n\n\nf221\n\n\n\n\ndensity F 17\n\n\n\n\n\n\nf002\n\n\nf002\n\n\n\n\ndensity F 18\n\n\n\n\n\n\nf102\n\n\nf102\n\n\n\n\ndensity F 19\n\n\n\n\n\n\nf202\n\n\nf202\n\n\n\n\ndensity F 20\n\n\n\n\n\n\nf012\n\n\nf012\n\n\n\n\ndensity F 21\n\n\n\n\n\n\nf112\n\n\nf112\n\n\n\n\ndensity F 22\n\n\n\n\n\n\nf212\n\n\nf212\n\n\n\n\ndensity F 23\n\n\n\n\n\n\nf022\n\n\nf022\n\n\n\n\ndensity F 24\n\n\n\n\n\n\nf122\n\n\nf122\n\n\n\n\ndensity F 25\n\n\n\n\n\n\nf222\n\n\nf222\n\n\n\n\ndensity F 26\n\n\n\n\n\n\navgP\n\n\navgP\n\n\n\n\navgP\n\n\n\n\n\n\nvarUX\n\n\nvarUX\n\n\n\n\nvarUX\n\n\n\n\n\n\nvarUY\n\n\nvarUY\n\n\n\n\nvarUY\n\n\n\n\n\n\nvarUZ\n\n\nvarUZ\n\n\n\n\nvarUZ\n\n\n\n\n\n\nvarUXUY\n\n\nvarUXUY\n\n\n\n\nvarUXUY\n\n\n\n\n\n\nvarUXUZ\n\n\nvarUXUZ\n\n\n\n\nvarUXUZ\n\n\n\n\n\n\nvarUYUZ\n\n\nvarUYUZ\n\n\n\n\nvarUYUZ\n\n\n\n\n\n\navgdxu2\n\n\navgdxu2\n\n\n\n\navgdxu2\n\n\n\n\n\n\navgdyv2\n\n\navgdyv2\n\n\n\n\navgdyv2\n\n\n\n\n\n\navgdzw2\n\n\navgdzw2\n\n\n\n\navgdzw2\n\n\n\n\n\n\navgUX\n\n\navgUX\n\n\n\n\navgUX\n\n\n\n\n\n\navgUY\n\n\navgUY\n\n\n\n\navgUY\n\n\n\n\n\n\navgUZ\n\n\navgUZ\n\n\n\n\navgUZ\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nBaseIteration\n\n\nRun\n\n\nf000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222, avgP, varUX, varUY, varUZ, varUXUY, varUXUZ, varUYUZ, avgdxu2, avgdyv2, avgdzw2, avgUX, avgUY, avgUZ\n\n\nf000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222, avgP, varUX, varUY, varUZ, varUXUY, varUXUZ, varUYUZ, avgdxu2, avgdyv2, avgdzw2, avgUX, avgUY, avgUZ\n\n\n\n\n\n\nBaseInit\n\n\nInit\n\n\nnone\n\n\nf000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222, avgP, varUX, varUY, varUZ, varUXUY, varUXUZ, varUYUZ, avgdxu2, avgdyv2, avgdzw2, avgUX, avgUY, avgUZ\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIteration\n\n\n\n\n\n\nInit\n\n\nBaseInit",
            "title": "d3q27 cumulant AVG SMAG"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_AVG_SMAG/#description",
            "text": "d3q27_cumulant_AVG_SMAG",
            "title": "Description"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_AVG_SMAG/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_AVG_SMAG/#zonal-settings",
            "text": "Name  Comment      Velocity  Inlet velocity    Pressure  Inlet pressure    Turbulence  Turbulence intensity    FluxInObj  Weight of [Volume flux] in objective    DragInObj  Weight of [Force exerted on body in X-direction] in objective    LiftInObj  Weight of [Force exerted on body in Z-direction] in objective    LateralInObj  Weight of [Force exerted on body in Y-direction] in objective",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_AVG_SMAG/#global-settings",
            "text": "Name  Derived  Comment      nu   Viscosity    nubuffer   Viscosity in the buffer layer    GalileanCorrection   Galilean correction term    ForceX   Force force X    ForceY   Force force Y    ForceZ   Force force Z    Smag   Smagorinsky coefficient for SGS modeling    Omega   relaxation rate for 3rd order cumulants    Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_AVG_SMAG/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      P  Pa  P    U  m/s  U    KinE  1  Turbulent kinetic energy    ReStr  1  Reynolds stress off-diagonal component    Dissipation  1  Dissipation e    avgU  m/s  avgU    varU  1  varU    averageP  Pa  averageP",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_AVG_SMAG/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      Flux  m3/s  Volume flux    Drag  N  Force exerted on body in X-direction    Lift  N  Force exerted on body in Z-direction    Lateral  N  Force exerted on body in Y-direction    Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_AVG_SMAG/#node-types",
            "text": "Group  Types      ADDITIONALS  NSymmetry, SSymmetry    BODY  Body    BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, WVelocityTurbulent, NVelocity, SVelocity, NPressure, SPressure    COLLISION  BGK, MRT    DESIGNSPACE  DesignSpace    HO_BOUNDARY  IB    NONE  None    OBJECTIVE  Inlet, Outlet    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_AVG_SMAG/#solved-fields",
            "text": "Name  Access pattern  Comment      f000   density F 0    f100   density F 1    f200   density F 2    f010   density F 3    f110   density F 4    f210   density F 5    f020   density F 6    f120   density F 7    f220   density F 8    f001   density F 9    f101   density F 10    f201   density F 11    f011   density F 12    f111   density F 13    f211   density F 14    f021   density F 15    f121   density F 16    f221   density F 17    f002   density F 18    f102   density F 19    f202   density F 20    f012   density F 21    f112   density F 22    f212   density F 23    f022   density F 24    f122   density F 25    f222   density F 26    avgP   avgP    varUX   varUX    varUY   varUY    varUZ   varUZ    varUXUY   varUXUY    varUXUZ   varUXUZ    varUYUZ   varUYUZ    avgdxu2   avgdxu2    avgdyv2   avgdyv2    avgdzw2   avgdzw2    avgUX   avgUX    avgUY   avgUY    avgUZ   avgUZ",
            "title": "Solved fields"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_AVG_SMAG/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment      f000  f000   density F 0    f100  f100   density F 1    f200  f200   density F 2    f010  f010   density F 3    f110  f110   density F 4    f210  f210   density F 5    f020  f020   density F 6    f120  f120   density F 7    f220  f220   density F 8    f001  f001   density F 9    f101  f101   density F 10    f201  f201   density F 11    f011  f011   density F 12    f111  f111   density F 13    f211  f211   density F 14    f021  f021   density F 15    f121  f121   density F 16    f221  f221   density F 17    f002  f002   density F 18    f102  f102   density F 19    f202  f202   density F 20    f012  f012   density F 21    f112  f112   density F 22    f212  f212   density F 23    f022  f022   density F 24    f122  f122   density F 25    f222  f222   density F 26    avgP  avgP   avgP    varUX  varUX   varUX    varUY  varUY   varUY    varUZ  varUZ   varUZ    varUXUY  varUXUY   varUXUY    varUXUZ  varUXUZ   varUXUZ    varUYUZ  varUYUZ   varUYUZ    avgdxu2  avgdxu2   avgdxu2    avgdyv2  avgdyv2   avgdyv2    avgdzw2  avgdzw2   avgdzw2    avgUX  avgUX   avgUX    avgUY  avgUY   avgUY    avgUZ  avgUZ   avgUZ",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_AVG_SMAG/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      BaseIteration  Run  f000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222, avgP, varUX, varUY, varUZ, varUXUY, varUXUZ, varUYUZ, avgdxu2, avgdyv2, avgdzw2, avgUX, avgUY, avgUZ  f000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222, avgP, varUX, varUY, varUZ, varUXUY, varUXUZ, varUYUZ, avgdxu2, avgdyv2, avgdzw2, avgUX, avgUY, avgUZ    BaseInit  Init  none  f000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222, avgP, varUX, varUY, varUZ, varUXUY, varUXUZ, varUYUZ, avgdxu2, avgdyv2, avgdzw2, avgUX, avgUY, avgUZ",
            "title": "Action stages"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_AVG_SMAG/#actions",
            "text": "Name  Stages      Iteration  BaseIteration    Init  BaseInit",
            "title": "Actions"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_IB/",
            "text": "Description\n\n\nd3q27_cumulant_IB\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nVelocity\n\n\nInlet velocity\n\n\n\n\n\n\nPressure\n\n\nInlet pressure\n\n\n\n\n\n\nTurbulence\n\n\nTurbulence intensity\n\n\n\n\n\n\nFluxInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nDragInObj\n\n\nWeight of [Force exerted on body in X-direction] in objective\n\n\n\n\n\n\nLiftInObj\n\n\nWeight of [Force exerted on body in Z-direction] in objective\n\n\n\n\n\n\nLateralInObj\n\n\nWeight of [Force exerted on body in Y-direction] in objective\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nnu\n\n\n\n\nViscosity\n\n\n\n\n\n\nnubuffer\n\n\n\n\nViscosity in the buffer layer\n\n\n\n\n\n\nGalileanCorrection\n\n\n\n\nGalilean correction term\n\n\n\n\n\n\nForceX\n\n\n\n\nForce force X\n\n\n\n\n\n\nForceY\n\n\n\n\nForce force Y\n\n\n\n\n\n\nForceZ\n\n\n\n\nForce force Z\n\n\n\n\n\n\nSmag\n\n\n\n\nSmagorinsky coefficient for SGS modeling\n\n\n\n\n\n\nOmega\n\n\n\n\nrelaxation rate for 3rd order cumulants\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nP\n\n\nPa\n\n\nP\n\n\n\n\n\n\nU\n\n\nm/s\n\n\nU\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nFlux\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nDrag\n\n\nN\n\n\nForce exerted on body in X-direction\n\n\n\n\n\n\nLift\n\n\nN\n\n\nForce exerted on body in Z-direction\n\n\n\n\n\n\nLateral\n\n\nN\n\n\nForce exerted on body in Y-direction\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nADDITIONALS\n\n\nNSymmetry, SSymmetry\n\n\n\n\n\n\nBODY\n\n\nBody\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, WVelocityTurbulent, NVelocity, SVelocity, NPressure, SPressure\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nHO_BOUNDARY\n\n\nIB\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf000\n\n\n\n\ndensity F 0\n\n\n\n\n\n\nf100\n\n\n\n\ndensity F 1\n\n\n\n\n\n\nf200\n\n\n\n\ndensity F 2\n\n\n\n\n\n\nf010\n\n\n\n\ndensity F 3\n\n\n\n\n\n\nf110\n\n\n\n\ndensity F 4\n\n\n\n\n\n\nf210\n\n\n\n\ndensity F 5\n\n\n\n\n\n\nf020\n\n\n\n\ndensity F 6\n\n\n\n\n\n\nf120\n\n\n\n\ndensity F 7\n\n\n\n\n\n\nf220\n\n\n\n\ndensity F 8\n\n\n\n\n\n\nf001\n\n\n\n\ndensity F 9\n\n\n\n\n\n\nf101\n\n\n\n\ndensity F 10\n\n\n\n\n\n\nf201\n\n\n\n\ndensity F 11\n\n\n\n\n\n\nf011\n\n\n\n\ndensity F 12\n\n\n\n\n\n\nf111\n\n\n\n\ndensity F 13\n\n\n\n\n\n\nf211\n\n\n\n\ndensity F 14\n\n\n\n\n\n\nf021\n\n\n\n\ndensity F 15\n\n\n\n\n\n\nf121\n\n\n\n\ndensity F 16\n\n\n\n\n\n\nf221\n\n\n\n\ndensity F 17\n\n\n\n\n\n\nf002\n\n\n\n\ndensity F 18\n\n\n\n\n\n\nf102\n\n\n\n\ndensity F 19\n\n\n\n\n\n\nf202\n\n\n\n\ndensity F 20\n\n\n\n\n\n\nf012\n\n\n\n\ndensity F 21\n\n\n\n\n\n\nf112\n\n\n\n\ndensity F 22\n\n\n\n\n\n\nf212\n\n\n\n\ndensity F 23\n\n\n\n\n\n\nf022\n\n\n\n\ndensity F 24\n\n\n\n\n\n\nf122\n\n\n\n\ndensity F 25\n\n\n\n\n\n\nf222\n\n\n\n\ndensity F 26\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf000\n\n\nf000\n\n\n\n\ndensity F 0\n\n\n\n\n\n\nf100\n\n\nf100\n\n\n\n\ndensity F 1\n\n\n\n\n\n\nf200\n\n\nf200\n\n\n\n\ndensity F 2\n\n\n\n\n\n\nf010\n\n\nf010\n\n\n\n\ndensity F 3\n\n\n\n\n\n\nf110\n\n\nf110\n\n\n\n\ndensity F 4\n\n\n\n\n\n\nf210\n\n\nf210\n\n\n\n\ndensity F 5\n\n\n\n\n\n\nf020\n\n\nf020\n\n\n\n\ndensity F 6\n\n\n\n\n\n\nf120\n\n\nf120\n\n\n\n\ndensity F 7\n\n\n\n\n\n\nf220\n\n\nf220\n\n\n\n\ndensity F 8\n\n\n\n\n\n\nf001\n\n\nf001\n\n\n\n\ndensity F 9\n\n\n\n\n\n\nf101\n\n\nf101\n\n\n\n\ndensity F 10\n\n\n\n\n\n\nf201\n\n\nf201\n\n\n\n\ndensity F 11\n\n\n\n\n\n\nf011\n\n\nf011\n\n\n\n\ndensity F 12\n\n\n\n\n\n\nf111\n\n\nf111\n\n\n\n\ndensity F 13\n\n\n\n\n\n\nf211\n\n\nf211\n\n\n\n\ndensity F 14\n\n\n\n\n\n\nf021\n\n\nf021\n\n\n\n\ndensity F 15\n\n\n\n\n\n\nf121\n\n\nf121\n\n\n\n\ndensity F 16\n\n\n\n\n\n\nf221\n\n\nf221\n\n\n\n\ndensity F 17\n\n\n\n\n\n\nf002\n\n\nf002\n\n\n\n\ndensity F 18\n\n\n\n\n\n\nf102\n\n\nf102\n\n\n\n\ndensity F 19\n\n\n\n\n\n\nf202\n\n\nf202\n\n\n\n\ndensity F 20\n\n\n\n\n\n\nf012\n\n\nf012\n\n\n\n\ndensity F 21\n\n\n\n\n\n\nf112\n\n\nf112\n\n\n\n\ndensity F 22\n\n\n\n\n\n\nf212\n\n\nf212\n\n\n\n\ndensity F 23\n\n\n\n\n\n\nf022\n\n\nf022\n\n\n\n\ndensity F 24\n\n\n\n\n\n\nf122\n\n\nf122\n\n\n\n\ndensity F 25\n\n\n\n\n\n\nf222\n\n\nf222\n\n\n\n\ndensity F 26\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nBaseIteration\n\n\nRun\n\n\nf000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222\n\n\nf000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222\n\n\n\n\n\n\nBaseInit\n\n\nInit\n\n\nnone\n\n\nf000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIteration\n\n\n\n\n\n\nInit\n\n\nBaseInit",
            "title": "d3q27 cumulant IB"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_IB/#description",
            "text": "d3q27_cumulant_IB",
            "title": "Description"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_IB/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_IB/#zonal-settings",
            "text": "Name  Comment      Velocity  Inlet velocity    Pressure  Inlet pressure    Turbulence  Turbulence intensity    FluxInObj  Weight of [Volume flux] in objective    DragInObj  Weight of [Force exerted on body in X-direction] in objective    LiftInObj  Weight of [Force exerted on body in Z-direction] in objective    LateralInObj  Weight of [Force exerted on body in Y-direction] in objective",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_IB/#global-settings",
            "text": "Name  Derived  Comment      nu   Viscosity    nubuffer   Viscosity in the buffer layer    GalileanCorrection   Galilean correction term    ForceX   Force force X    ForceY   Force force Y    ForceZ   Force force Z    Smag   Smagorinsky coefficient for SGS modeling    Omega   relaxation rate for 3rd order cumulants    Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_IB/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      P  Pa  P    U  m/s  U",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_IB/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      Flux  m3/s  Volume flux    Drag  N  Force exerted on body in X-direction    Lift  N  Force exerted on body in Z-direction    Lateral  N  Force exerted on body in Y-direction    Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_IB/#node-types",
            "text": "Group  Types      ADDITIONALS  NSymmetry, SSymmetry    BODY  Body    BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, WVelocityTurbulent, NVelocity, SVelocity, NPressure, SPressure    COLLISION  BGK, MRT    DESIGNSPACE  DesignSpace    HO_BOUNDARY  IB    NONE  None    OBJECTIVE  Inlet, Outlet    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_IB/#solved-fields",
            "text": "Name  Access pattern  Comment      f000   density F 0    f100   density F 1    f200   density F 2    f010   density F 3    f110   density F 4    f210   density F 5    f020   density F 6    f120   density F 7    f220   density F 8    f001   density F 9    f101   density F 10    f201   density F 11    f011   density F 12    f111   density F 13    f211   density F 14    f021   density F 15    f121   density F 16    f221   density F 17    f002   density F 18    f102   density F 19    f202   density F 20    f012   density F 21    f112   density F 22    f212   density F 23    f022   density F 24    f122   density F 25    f222   density F 26",
            "title": "Solved fields"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_IB/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment      f000  f000   density F 0    f100  f100   density F 1    f200  f200   density F 2    f010  f010   density F 3    f110  f110   density F 4    f210  f210   density F 5    f020  f020   density F 6    f120  f120   density F 7    f220  f220   density F 8    f001  f001   density F 9    f101  f101   density F 10    f201  f201   density F 11    f011  f011   density F 12    f111  f111   density F 13    f211  f211   density F 14    f021  f021   density F 15    f121  f121   density F 16    f221  f221   density F 17    f002  f002   density F 18    f102  f102   density F 19    f202  f202   density F 20    f012  f012   density F 21    f112  f112   density F 22    f212  f212   density F 23    f022  f022   density F 24    f122  f122   density F 25    f222  f222   density F 26",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_IB/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      BaseIteration  Run  f000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222  f000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222    BaseInit  Init  none  f000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222",
            "title": "Action stages"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_IB/#actions",
            "text": "Name  Stages      Iteration  BaseIteration    Init  BaseInit",
            "title": "Actions"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_IB_SMAG/",
            "text": "Description\n\n\nd3q27_cumulant_IB_SMAG\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nVelocity\n\n\nInlet velocity\n\n\n\n\n\n\nPressure\n\n\nInlet pressure\n\n\n\n\n\n\nTurbulence\n\n\nTurbulence intensity\n\n\n\n\n\n\nFluxInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nDragInObj\n\n\nWeight of [Force exerted on body in X-direction] in objective\n\n\n\n\n\n\nLiftInObj\n\n\nWeight of [Force exerted on body in Z-direction] in objective\n\n\n\n\n\n\nLateralInObj\n\n\nWeight of [Force exerted on body in Y-direction] in objective\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nnu\n\n\n\n\nViscosity\n\n\n\n\n\n\nnubuffer\n\n\n\n\nViscosity in the buffer layer\n\n\n\n\n\n\nGalileanCorrection\n\n\n\n\nGalilean correction term\n\n\n\n\n\n\nForceX\n\n\n\n\nForce force X\n\n\n\n\n\n\nForceY\n\n\n\n\nForce force Y\n\n\n\n\n\n\nForceZ\n\n\n\n\nForce force Z\n\n\n\n\n\n\nSmag\n\n\n\n\nSmagorinsky coefficient for SGS modeling\n\n\n\n\n\n\nOmega\n\n\n\n\nrelaxation rate for 3rd order cumulants\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nP\n\n\nPa\n\n\nP\n\n\n\n\n\n\nU\n\n\nm/s\n\n\nU\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nFlux\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nDrag\n\n\nN\n\n\nForce exerted on body in X-direction\n\n\n\n\n\n\nLift\n\n\nN\n\n\nForce exerted on body in Z-direction\n\n\n\n\n\n\nLateral\n\n\nN\n\n\nForce exerted on body in Y-direction\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nADDITIONALS\n\n\nNSymmetry, SSymmetry\n\n\n\n\n\n\nBODY\n\n\nBody\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, WVelocityTurbulent, NVelocity, SVelocity, NPressure, SPressure\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nHO_BOUNDARY\n\n\nIB\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf000\n\n\n\n\ndensity F 0\n\n\n\n\n\n\nf100\n\n\n\n\ndensity F 1\n\n\n\n\n\n\nf200\n\n\n\n\ndensity F 2\n\n\n\n\n\n\nf010\n\n\n\n\ndensity F 3\n\n\n\n\n\n\nf110\n\n\n\n\ndensity F 4\n\n\n\n\n\n\nf210\n\n\n\n\ndensity F 5\n\n\n\n\n\n\nf020\n\n\n\n\ndensity F 6\n\n\n\n\n\n\nf120\n\n\n\n\ndensity F 7\n\n\n\n\n\n\nf220\n\n\n\n\ndensity F 8\n\n\n\n\n\n\nf001\n\n\n\n\ndensity F 9\n\n\n\n\n\n\nf101\n\n\n\n\ndensity F 10\n\n\n\n\n\n\nf201\n\n\n\n\ndensity F 11\n\n\n\n\n\n\nf011\n\n\n\n\ndensity F 12\n\n\n\n\n\n\nf111\n\n\n\n\ndensity F 13\n\n\n\n\n\n\nf211\n\n\n\n\ndensity F 14\n\n\n\n\n\n\nf021\n\n\n\n\ndensity F 15\n\n\n\n\n\n\nf121\n\n\n\n\ndensity F 16\n\n\n\n\n\n\nf221\n\n\n\n\ndensity F 17\n\n\n\n\n\n\nf002\n\n\n\n\ndensity F 18\n\n\n\n\n\n\nf102\n\n\n\n\ndensity F 19\n\n\n\n\n\n\nf202\n\n\n\n\ndensity F 20\n\n\n\n\n\n\nf012\n\n\n\n\ndensity F 21\n\n\n\n\n\n\nf112\n\n\n\n\ndensity F 22\n\n\n\n\n\n\nf212\n\n\n\n\ndensity F 23\n\n\n\n\n\n\nf022\n\n\n\n\ndensity F 24\n\n\n\n\n\n\nf122\n\n\n\n\ndensity F 25\n\n\n\n\n\n\nf222\n\n\n\n\ndensity F 26\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf000\n\n\nf000\n\n\n\n\ndensity F 0\n\n\n\n\n\n\nf100\n\n\nf100\n\n\n\n\ndensity F 1\n\n\n\n\n\n\nf200\n\n\nf200\n\n\n\n\ndensity F 2\n\n\n\n\n\n\nf010\n\n\nf010\n\n\n\n\ndensity F 3\n\n\n\n\n\n\nf110\n\n\nf110\n\n\n\n\ndensity F 4\n\n\n\n\n\n\nf210\n\n\nf210\n\n\n\n\ndensity F 5\n\n\n\n\n\n\nf020\n\n\nf020\n\n\n\n\ndensity F 6\n\n\n\n\n\n\nf120\n\n\nf120\n\n\n\n\ndensity F 7\n\n\n\n\n\n\nf220\n\n\nf220\n\n\n\n\ndensity F 8\n\n\n\n\n\n\nf001\n\n\nf001\n\n\n\n\ndensity F 9\n\n\n\n\n\n\nf101\n\n\nf101\n\n\n\n\ndensity F 10\n\n\n\n\n\n\nf201\n\n\nf201\n\n\n\n\ndensity F 11\n\n\n\n\n\n\nf011\n\n\nf011\n\n\n\n\ndensity F 12\n\n\n\n\n\n\nf111\n\n\nf111\n\n\n\n\ndensity F 13\n\n\n\n\n\n\nf211\n\n\nf211\n\n\n\n\ndensity F 14\n\n\n\n\n\n\nf021\n\n\nf021\n\n\n\n\ndensity F 15\n\n\n\n\n\n\nf121\n\n\nf121\n\n\n\n\ndensity F 16\n\n\n\n\n\n\nf221\n\n\nf221\n\n\n\n\ndensity F 17\n\n\n\n\n\n\nf002\n\n\nf002\n\n\n\n\ndensity F 18\n\n\n\n\n\n\nf102\n\n\nf102\n\n\n\n\ndensity F 19\n\n\n\n\n\n\nf202\n\n\nf202\n\n\n\n\ndensity F 20\n\n\n\n\n\n\nf012\n\n\nf012\n\n\n\n\ndensity F 21\n\n\n\n\n\n\nf112\n\n\nf112\n\n\n\n\ndensity F 22\n\n\n\n\n\n\nf212\n\n\nf212\n\n\n\n\ndensity F 23\n\n\n\n\n\n\nf022\n\n\nf022\n\n\n\n\ndensity F 24\n\n\n\n\n\n\nf122\n\n\nf122\n\n\n\n\ndensity F 25\n\n\n\n\n\n\nf222\n\n\nf222\n\n\n\n\ndensity F 26\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nBaseIteration\n\n\nRun\n\n\nf000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222\n\n\nf000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222\n\n\n\n\n\n\nBaseInit\n\n\nInit\n\n\nnone\n\n\nf000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIteration\n\n\n\n\n\n\nInit\n\n\nBaseInit",
            "title": "d3q27 cumulant IB SMAG"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_IB_SMAG/#description",
            "text": "d3q27_cumulant_IB_SMAG",
            "title": "Description"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_IB_SMAG/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_IB_SMAG/#zonal-settings",
            "text": "Name  Comment      Velocity  Inlet velocity    Pressure  Inlet pressure    Turbulence  Turbulence intensity    FluxInObj  Weight of [Volume flux] in objective    DragInObj  Weight of [Force exerted on body in X-direction] in objective    LiftInObj  Weight of [Force exerted on body in Z-direction] in objective    LateralInObj  Weight of [Force exerted on body in Y-direction] in objective",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_IB_SMAG/#global-settings",
            "text": "Name  Derived  Comment      nu   Viscosity    nubuffer   Viscosity in the buffer layer    GalileanCorrection   Galilean correction term    ForceX   Force force X    ForceY   Force force Y    ForceZ   Force force Z    Smag   Smagorinsky coefficient for SGS modeling    Omega   relaxation rate for 3rd order cumulants    Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_IB_SMAG/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      P  Pa  P    U  m/s  U",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_IB_SMAG/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      Flux  m3/s  Volume flux    Drag  N  Force exerted on body in X-direction    Lift  N  Force exerted on body in Z-direction    Lateral  N  Force exerted on body in Y-direction    Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_IB_SMAG/#node-types",
            "text": "Group  Types      ADDITIONALS  NSymmetry, SSymmetry    BODY  Body    BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, WVelocityTurbulent, NVelocity, SVelocity, NPressure, SPressure    COLLISION  BGK, MRT    DESIGNSPACE  DesignSpace    HO_BOUNDARY  IB    NONE  None    OBJECTIVE  Inlet, Outlet    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_IB_SMAG/#solved-fields",
            "text": "Name  Access pattern  Comment      f000   density F 0    f100   density F 1    f200   density F 2    f010   density F 3    f110   density F 4    f210   density F 5    f020   density F 6    f120   density F 7    f220   density F 8    f001   density F 9    f101   density F 10    f201   density F 11    f011   density F 12    f111   density F 13    f211   density F 14    f021   density F 15    f121   density F 16    f221   density F 17    f002   density F 18    f102   density F 19    f202   density F 20    f012   density F 21    f112   density F 22    f212   density F 23    f022   density F 24    f122   density F 25    f222   density F 26",
            "title": "Solved fields"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_IB_SMAG/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment      f000  f000   density F 0    f100  f100   density F 1    f200  f200   density F 2    f010  f010   density F 3    f110  f110   density F 4    f210  f210   density F 5    f020  f020   density F 6    f120  f120   density F 7    f220  f220   density F 8    f001  f001   density F 9    f101  f101   density F 10    f201  f201   density F 11    f011  f011   density F 12    f111  f111   density F 13    f211  f211   density F 14    f021  f021   density F 15    f121  f121   density F 16    f221  f221   density F 17    f002  f002   density F 18    f102  f102   density F 19    f202  f202   density F 20    f012  f012   density F 21    f112  f112   density F 22    f212  f212   density F 23    f022  f022   density F 24    f122  f122   density F 25    f222  f222   density F 26",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_IB_SMAG/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      BaseIteration  Run  f000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222  f000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222    BaseInit  Init  none  f000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222",
            "title": "Action stages"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_IB_SMAG/#actions",
            "text": "Name  Stages      Iteration  BaseIteration    Init  BaseInit",
            "title": "Actions"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_SMAG/",
            "text": "Description\n\n\nd3q27_cumulant_SMAG\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nVelocity\n\n\nInlet velocity\n\n\n\n\n\n\nPressure\n\n\nInlet pressure\n\n\n\n\n\n\nTurbulence\n\n\nTurbulence intensity\n\n\n\n\n\n\nFluxInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nDragInObj\n\n\nWeight of [Force exerted on body in X-direction] in objective\n\n\n\n\n\n\nLiftInObj\n\n\nWeight of [Force exerted on body in Z-direction] in objective\n\n\n\n\n\n\nLateralInObj\n\n\nWeight of [Force exerted on body in Y-direction] in objective\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nnu\n\n\n\n\nViscosity\n\n\n\n\n\n\nnubuffer\n\n\n\n\nViscosity in the buffer layer\n\n\n\n\n\n\nGalileanCorrection\n\n\n\n\nGalilean correction term\n\n\n\n\n\n\nForceX\n\n\n\n\nForce force X\n\n\n\n\n\n\nForceY\n\n\n\n\nForce force Y\n\n\n\n\n\n\nForceZ\n\n\n\n\nForce force Z\n\n\n\n\n\n\nSmag\n\n\n\n\nSmagorinsky coefficient for SGS modeling\n\n\n\n\n\n\nOmega\n\n\n\n\nrelaxation rate for 3rd order cumulants\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nP\n\n\nPa\n\n\nP\n\n\n\n\n\n\nU\n\n\nm/s\n\n\nU\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nFlux\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nDrag\n\n\nN\n\n\nForce exerted on body in X-direction\n\n\n\n\n\n\nLift\n\n\nN\n\n\nForce exerted on body in Z-direction\n\n\n\n\n\n\nLateral\n\n\nN\n\n\nForce exerted on body in Y-direction\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nADDITIONALS\n\n\nNSymmetry, SSymmetry\n\n\n\n\n\n\nBODY\n\n\nBody\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, WVelocityTurbulent, NVelocity, SVelocity, NPressure, SPressure\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nHO_BOUNDARY\n\n\nIB\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf000\n\n\n\n\ndensity F 0\n\n\n\n\n\n\nf100\n\n\n\n\ndensity F 1\n\n\n\n\n\n\nf200\n\n\n\n\ndensity F 2\n\n\n\n\n\n\nf010\n\n\n\n\ndensity F 3\n\n\n\n\n\n\nf110\n\n\n\n\ndensity F 4\n\n\n\n\n\n\nf210\n\n\n\n\ndensity F 5\n\n\n\n\n\n\nf020\n\n\n\n\ndensity F 6\n\n\n\n\n\n\nf120\n\n\n\n\ndensity F 7\n\n\n\n\n\n\nf220\n\n\n\n\ndensity F 8\n\n\n\n\n\n\nf001\n\n\n\n\ndensity F 9\n\n\n\n\n\n\nf101\n\n\n\n\ndensity F 10\n\n\n\n\n\n\nf201\n\n\n\n\ndensity F 11\n\n\n\n\n\n\nf011\n\n\n\n\ndensity F 12\n\n\n\n\n\n\nf111\n\n\n\n\ndensity F 13\n\n\n\n\n\n\nf211\n\n\n\n\ndensity F 14\n\n\n\n\n\n\nf021\n\n\n\n\ndensity F 15\n\n\n\n\n\n\nf121\n\n\n\n\ndensity F 16\n\n\n\n\n\n\nf221\n\n\n\n\ndensity F 17\n\n\n\n\n\n\nf002\n\n\n\n\ndensity F 18\n\n\n\n\n\n\nf102\n\n\n\n\ndensity F 19\n\n\n\n\n\n\nf202\n\n\n\n\ndensity F 20\n\n\n\n\n\n\nf012\n\n\n\n\ndensity F 21\n\n\n\n\n\n\nf112\n\n\n\n\ndensity F 22\n\n\n\n\n\n\nf212\n\n\n\n\ndensity F 23\n\n\n\n\n\n\nf022\n\n\n\n\ndensity F 24\n\n\n\n\n\n\nf122\n\n\n\n\ndensity F 25\n\n\n\n\n\n\nf222\n\n\n\n\ndensity F 26\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf000\n\n\nf000\n\n\n\n\ndensity F 0\n\n\n\n\n\n\nf100\n\n\nf100\n\n\n\n\ndensity F 1\n\n\n\n\n\n\nf200\n\n\nf200\n\n\n\n\ndensity F 2\n\n\n\n\n\n\nf010\n\n\nf010\n\n\n\n\ndensity F 3\n\n\n\n\n\n\nf110\n\n\nf110\n\n\n\n\ndensity F 4\n\n\n\n\n\n\nf210\n\n\nf210\n\n\n\n\ndensity F 5\n\n\n\n\n\n\nf020\n\n\nf020\n\n\n\n\ndensity F 6\n\n\n\n\n\n\nf120\n\n\nf120\n\n\n\n\ndensity F 7\n\n\n\n\n\n\nf220\n\n\nf220\n\n\n\n\ndensity F 8\n\n\n\n\n\n\nf001\n\n\nf001\n\n\n\n\ndensity F 9\n\n\n\n\n\n\nf101\n\n\nf101\n\n\n\n\ndensity F 10\n\n\n\n\n\n\nf201\n\n\nf201\n\n\n\n\ndensity F 11\n\n\n\n\n\n\nf011\n\n\nf011\n\n\n\n\ndensity F 12\n\n\n\n\n\n\nf111\n\n\nf111\n\n\n\n\ndensity F 13\n\n\n\n\n\n\nf211\n\n\nf211\n\n\n\n\ndensity F 14\n\n\n\n\n\n\nf021\n\n\nf021\n\n\n\n\ndensity F 15\n\n\n\n\n\n\nf121\n\n\nf121\n\n\n\n\ndensity F 16\n\n\n\n\n\n\nf221\n\n\nf221\n\n\n\n\ndensity F 17\n\n\n\n\n\n\nf002\n\n\nf002\n\n\n\n\ndensity F 18\n\n\n\n\n\n\nf102\n\n\nf102\n\n\n\n\ndensity F 19\n\n\n\n\n\n\nf202\n\n\nf202\n\n\n\n\ndensity F 20\n\n\n\n\n\n\nf012\n\n\nf012\n\n\n\n\ndensity F 21\n\n\n\n\n\n\nf112\n\n\nf112\n\n\n\n\ndensity F 22\n\n\n\n\n\n\nf212\n\n\nf212\n\n\n\n\ndensity F 23\n\n\n\n\n\n\nf022\n\n\nf022\n\n\n\n\ndensity F 24\n\n\n\n\n\n\nf122\n\n\nf122\n\n\n\n\ndensity F 25\n\n\n\n\n\n\nf222\n\n\nf222\n\n\n\n\ndensity F 26\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nBaseIteration\n\n\nRun\n\n\nf000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222\n\n\nf000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222\n\n\n\n\n\n\nBaseInit\n\n\nInit\n\n\nnone\n\n\nf000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIteration\n\n\n\n\n\n\nInit\n\n\nBaseInit",
            "title": "d3q27 cumulant SMAG"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_SMAG/#description",
            "text": "d3q27_cumulant_SMAG",
            "title": "Description"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_SMAG/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_SMAG/#zonal-settings",
            "text": "Name  Comment      Velocity  Inlet velocity    Pressure  Inlet pressure    Turbulence  Turbulence intensity    FluxInObj  Weight of [Volume flux] in objective    DragInObj  Weight of [Force exerted on body in X-direction] in objective    LiftInObj  Weight of [Force exerted on body in Z-direction] in objective    LateralInObj  Weight of [Force exerted on body in Y-direction] in objective",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_SMAG/#global-settings",
            "text": "Name  Derived  Comment      nu   Viscosity    nubuffer   Viscosity in the buffer layer    GalileanCorrection   Galilean correction term    ForceX   Force force X    ForceY   Force force Y    ForceZ   Force force Z    Smag   Smagorinsky coefficient for SGS modeling    Omega   relaxation rate for 3rd order cumulants    Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_SMAG/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      P  Pa  P    U  m/s  U",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_SMAG/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      Flux  m3/s  Volume flux    Drag  N  Force exerted on body in X-direction    Lift  N  Force exerted on body in Z-direction    Lateral  N  Force exerted on body in Y-direction    Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_SMAG/#node-types",
            "text": "Group  Types      ADDITIONALS  NSymmetry, SSymmetry    BODY  Body    BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, WVelocityTurbulent, NVelocity, SVelocity, NPressure, SPressure    COLLISION  BGK, MRT    DESIGNSPACE  DesignSpace    HO_BOUNDARY  IB    NONE  None    OBJECTIVE  Inlet, Outlet    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_SMAG/#solved-fields",
            "text": "Name  Access pattern  Comment      f000   density F 0    f100   density F 1    f200   density F 2    f010   density F 3    f110   density F 4    f210   density F 5    f020   density F 6    f120   density F 7    f220   density F 8    f001   density F 9    f101   density F 10    f201   density F 11    f011   density F 12    f111   density F 13    f211   density F 14    f021   density F 15    f121   density F 16    f221   density F 17    f002   density F 18    f102   density F 19    f202   density F 20    f012   density F 21    f112   density F 22    f212   density F 23    f022   density F 24    f122   density F 25    f222   density F 26",
            "title": "Solved fields"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_SMAG/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment      f000  f000   density F 0    f100  f100   density F 1    f200  f200   density F 2    f010  f010   density F 3    f110  f110   density F 4    f210  f210   density F 5    f020  f020   density F 6    f120  f120   density F 7    f220  f220   density F 8    f001  f001   density F 9    f101  f101   density F 10    f201  f201   density F 11    f011  f011   density F 12    f111  f111   density F 13    f211  f211   density F 14    f021  f021   density F 15    f121  f121   density F 16    f221  f221   density F 17    f002  f002   density F 18    f102  f102   density F 19    f202  f202   density F 20    f012  f012   density F 21    f112  f112   density F 22    f212  f212   density F 23    f022  f022   density F 24    f122  f122   density F 25    f222  f222   density F 26",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_SMAG/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      BaseIteration  Run  f000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222  f000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222    BaseInit  Init  none  f000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222",
            "title": "Action stages"
        },
        {
            "location": "/models/flow/d3q27_cumulant/d3q27_cumulant_SMAG/#actions",
            "text": "Name  Stages      Iteration  BaseIteration    Init  BaseInit",
            "title": "Actions"
        },
        {
            "location": "/models/flow/experimental/d3q27_BGK/",
            "text": "Description\n\n\nd3q27_BGK\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nVelocity\n\n\nInlet velocity\n\n\n\n\n\n\nPressure\n\n\nInlet pressure\n\n\n\n\n\n\nFluxInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nTotalRhoInObj\n\n\nWeight of [Total mass] in objective\n\n\n\n\n\n\nXYvxInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXYvyInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXYvzInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXYrho1InObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXYrho2InObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXYareaInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXZvxInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXZvyInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXZvzInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXZrho1InObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXZrho2InObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXZareaInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nYZvxInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nYZvyInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nYZvzInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nYZrho1InObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nYZrho2InObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nYZareaInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nnu\n\n\n\n\nViscosity\n\n\n\n\n\n\nGalileanCorrection\n\n\n\n\nGalilean correction term\n\n\n\n\n\n\nForceX\n\n\n\n\nForce X\n\n\n\n\n\n\nForceY\n\n\n\n\nForce Y\n\n\n\n\n\n\nForceZ\n\n\n\n\nForce Z\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nP\n\n\nPa\n\n\nP\n\n\n\n\n\n\nU\n\n\nm/s\n\n\nU\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nFlux\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nTotalRho\n\n\nkg\n\n\nTotal mass\n\n\n\n\n\n\nXYvx\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nXYvy\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nXYvz\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nXYrho1\n\n\nkg/m\n\n\nVolume flux\n\n\n\n\n\n\nXYrho2\n\n\nkg/m\n\n\nVolume flux\n\n\n\n\n\n\nXYarea\n\n\nm2\n\n\nVolume flux\n\n\n\n\n\n\nXZvx\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nXZvy\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nXZvz\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nXZrho1\n\n\nkg/m\n\n\nVolume flux\n\n\n\n\n\n\nXZrho2\n\n\nkg/m\n\n\nVolume flux\n\n\n\n\n\n\nXZarea\n\n\nm2\n\n\nVolume flux\n\n\n\n\n\n\nYZvx\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nYZvy\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nYZvz\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nYZrho1\n\n\nkg/m\n\n\nVolume flux\n\n\n\n\n\n\nYZrho2\n\n\nkg/m\n\n\nVolume flux\n\n\n\n\n\n\nYZarea\n\n\nm2\n\n\nVolume flux\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nADDITIONALS\n\n\nXYslice1, XZslice1, YZslice1, XYslice2, XZslice2, YZslice2\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, SymmetryY, SymmetryZ, TopSymmetry, BottomSymmetry, NVelocity, SVelocity, NPressure, SPressure\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf000\n\n\n\n\ndensity F 0\n\n\n\n\n\n\nf100\n\n\n\n\ndensity F 1\n\n\n\n\n\n\nf200\n\n\n\n\ndensity F 2\n\n\n\n\n\n\nf010\n\n\n\n\ndensity F 3\n\n\n\n\n\n\nf110\n\n\n\n\ndensity F 4\n\n\n\n\n\n\nf210\n\n\n\n\ndensity F 5\n\n\n\n\n\n\nf020\n\n\n\n\ndensity F 6\n\n\n\n\n\n\nf120\n\n\n\n\ndensity F 7\n\n\n\n\n\n\nf220\n\n\n\n\ndensity F 8\n\n\n\n\n\n\nf001\n\n\n\n\ndensity F 9\n\n\n\n\n\n\nf101\n\n\n\n\ndensity F 10\n\n\n\n\n\n\nf201\n\n\n\n\ndensity F 11\n\n\n\n\n\n\nf011\n\n\n\n\ndensity F 12\n\n\n\n\n\n\nf111\n\n\n\n\ndensity F 13\n\n\n\n\n\n\nf211\n\n\n\n\ndensity F 14\n\n\n\n\n\n\nf021\n\n\n\n\ndensity F 15\n\n\n\n\n\n\nf121\n\n\n\n\ndensity F 16\n\n\n\n\n\n\nf221\n\n\n\n\ndensity F 17\n\n\n\n\n\n\nf002\n\n\n\n\ndensity F 18\n\n\n\n\n\n\nf102\n\n\n\n\ndensity F 19\n\n\n\n\n\n\nf202\n\n\n\n\ndensity F 20\n\n\n\n\n\n\nf012\n\n\n\n\ndensity F 21\n\n\n\n\n\n\nf112\n\n\n\n\ndensity F 22\n\n\n\n\n\n\nf212\n\n\n\n\ndensity F 23\n\n\n\n\n\n\nf022\n\n\n\n\ndensity F 24\n\n\n\n\n\n\nf122\n\n\n\n\ndensity F 25\n\n\n\n\n\n\nf222\n\n\n\n\ndensity F 26\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf000\n\n\nf000\n\n\n\n\ndensity F 0\n\n\n\n\n\n\nf100\n\n\nf100\n\n\n\n\ndensity F 1\n\n\n\n\n\n\nf200\n\n\nf200\n\n\n\n\ndensity F 2\n\n\n\n\n\n\nf010\n\n\nf010\n\n\n\n\ndensity F 3\n\n\n\n\n\n\nf110\n\n\nf110\n\n\n\n\ndensity F 4\n\n\n\n\n\n\nf210\n\n\nf210\n\n\n\n\ndensity F 5\n\n\n\n\n\n\nf020\n\n\nf020\n\n\n\n\ndensity F 6\n\n\n\n\n\n\nf120\n\n\nf120\n\n\n\n\ndensity F 7\n\n\n\n\n\n\nf220\n\n\nf220\n\n\n\n\ndensity F 8\n\n\n\n\n\n\nf001\n\n\nf001\n\n\n\n\ndensity F 9\n\n\n\n\n\n\nf101\n\n\nf101\n\n\n\n\ndensity F 10\n\n\n\n\n\n\nf201\n\n\nf201\n\n\n\n\ndensity F 11\n\n\n\n\n\n\nf011\n\n\nf011\n\n\n\n\ndensity F 12\n\n\n\n\n\n\nf111\n\n\nf111\n\n\n\n\ndensity F 13\n\n\n\n\n\n\nf211\n\n\nf211\n\n\n\n\ndensity F 14\n\n\n\n\n\n\nf021\n\n\nf021\n\n\n\n\ndensity F 15\n\n\n\n\n\n\nf121\n\n\nf121\n\n\n\n\ndensity F 16\n\n\n\n\n\n\nf221\n\n\nf221\n\n\n\n\ndensity F 17\n\n\n\n\n\n\nf002\n\n\nf002\n\n\n\n\ndensity F 18\n\n\n\n\n\n\nf102\n\n\nf102\n\n\n\n\ndensity F 19\n\n\n\n\n\n\nf202\n\n\nf202\n\n\n\n\ndensity F 20\n\n\n\n\n\n\nf012\n\n\nf012\n\n\n\n\ndensity F 21\n\n\n\n\n\n\nf112\n\n\nf112\n\n\n\n\ndensity F 22\n\n\n\n\n\n\nf212\n\n\nf212\n\n\n\n\ndensity F 23\n\n\n\n\n\n\nf022\n\n\nf022\n\n\n\n\ndensity F 24\n\n\n\n\n\n\nf122\n\n\nf122\n\n\n\n\ndensity F 25\n\n\n\n\n\n\nf222\n\n\nf222\n\n\n\n\ndensity F 26\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nBaseIteration\n\n\nRun\n\n\nf000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222\n\n\nf000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222\n\n\n\n\n\n\nBaseInit\n\n\nInit\n\n\nnone\n\n\nf000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIteration\n\n\n\n\n\n\nInit\n\n\nBaseInit",
            "title": "d3q27 BGK"
        },
        {
            "location": "/models/flow/experimental/d3q27_BGK/#description",
            "text": "d3q27_BGK",
            "title": "Description"
        },
        {
            "location": "/models/flow/experimental/d3q27_BGK/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/flow/experimental/d3q27_BGK/#zonal-settings",
            "text": "Name  Comment      Velocity  Inlet velocity    Pressure  Inlet pressure    FluxInObj  Weight of [Volume flux] in objective    TotalRhoInObj  Weight of [Total mass] in objective    XYvxInObj  Weight of [Volume flux] in objective    XYvyInObj  Weight of [Volume flux] in objective    XYvzInObj  Weight of [Volume flux] in objective    XYrho1InObj  Weight of [Volume flux] in objective    XYrho2InObj  Weight of [Volume flux] in objective    XYareaInObj  Weight of [Volume flux] in objective    XZvxInObj  Weight of [Volume flux] in objective    XZvyInObj  Weight of [Volume flux] in objective    XZvzInObj  Weight of [Volume flux] in objective    XZrho1InObj  Weight of [Volume flux] in objective    XZrho2InObj  Weight of [Volume flux] in objective    XZareaInObj  Weight of [Volume flux] in objective    YZvxInObj  Weight of [Volume flux] in objective    YZvyInObj  Weight of [Volume flux] in objective    YZvzInObj  Weight of [Volume flux] in objective    YZrho1InObj  Weight of [Volume flux] in objective    YZrho2InObj  Weight of [Volume flux] in objective    YZareaInObj  Weight of [Volume flux] in objective",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/flow/experimental/d3q27_BGK/#global-settings",
            "text": "Name  Derived  Comment      nu   Viscosity    GalileanCorrection   Galilean correction term    ForceX   Force X    ForceY   Force Y    ForceZ   Force Z    Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/flow/experimental/d3q27_BGK/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      P  Pa  P    U  m/s  U",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/flow/experimental/d3q27_BGK/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      Flux  m3/s  Volume flux    TotalRho  kg  Total mass    XYvx  m3/s  Volume flux    XYvy  m3/s  Volume flux    XYvz  m3/s  Volume flux    XYrho1  kg/m  Volume flux    XYrho2  kg/m  Volume flux    XYarea  m2  Volume flux    XZvx  m3/s  Volume flux    XZvy  m3/s  Volume flux    XZvz  m3/s  Volume flux    XZrho1  kg/m  Volume flux    XZrho2  kg/m  Volume flux    XZarea  m2  Volume flux    YZvx  m3/s  Volume flux    YZvy  m3/s  Volume flux    YZvz  m3/s  Volume flux    YZrho1  kg/m  Volume flux    YZrho2  kg/m  Volume flux    YZarea  m2  Volume flux    Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/flow/experimental/d3q27_BGK/#node-types",
            "text": "Group  Types      ADDITIONALS  XYslice1, XZslice1, YZslice1, XYslice2, XZslice2, YZslice2    BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, SymmetryY, SymmetryZ, TopSymmetry, BottomSymmetry, NVelocity, SVelocity, NPressure, SPressure    COLLISION  BGK, MRT    DESIGNSPACE  DesignSpace    NONE  None    OBJECTIVE  Inlet, Outlet    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/flow/experimental/d3q27_BGK/#solved-fields",
            "text": "Name  Access pattern  Comment      f000   density F 0    f100   density F 1    f200   density F 2    f010   density F 3    f110   density F 4    f210   density F 5    f020   density F 6    f120   density F 7    f220   density F 8    f001   density F 9    f101   density F 10    f201   density F 11    f011   density F 12    f111   density F 13    f211   density F 14    f021   density F 15    f121   density F 16    f221   density F 17    f002   density F 18    f102   density F 19    f202   density F 20    f012   density F 21    f112   density F 22    f212   density F 23    f022   density F 24    f122   density F 25    f222   density F 26",
            "title": "Solved fields"
        },
        {
            "location": "/models/flow/experimental/d3q27_BGK/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment      f000  f000   density F 0    f100  f100   density F 1    f200  f200   density F 2    f010  f010   density F 3    f110  f110   density F 4    f210  f210   density F 5    f020  f020   density F 6    f120  f120   density F 7    f220  f220   density F 8    f001  f001   density F 9    f101  f101   density F 10    f201  f201   density F 11    f011  f011   density F 12    f111  f111   density F 13    f211  f211   density F 14    f021  f021   density F 15    f121  f121   density F 16    f221  f221   density F 17    f002  f002   density F 18    f102  f102   density F 19    f202  f202   density F 20    f012  f012   density F 21    f112  f112   density F 22    f212  f212   density F 23    f022  f022   density F 24    f122  f122   density F 25    f222  f222   density F 26",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/flow/experimental/d3q27_BGK/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      BaseIteration  Run  f000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222  f000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222    BaseInit  Init  none  f000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222",
            "title": "Action stages"
        },
        {
            "location": "/models/flow/experimental/d3q27_BGK/#actions",
            "text": "Name  Stages      Iteration  BaseIteration    Init  BaseInit",
            "title": "Actions"
        },
        {
            "location": "/models/flow/experimental/d3q27_BGK_galcor/",
            "text": "Description\n\n\nd3q27_BGK_galcor\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nVelocity\n\n\nInlet velocity\n\n\n\n\n\n\nPressure\n\n\nInlet pressure\n\n\n\n\n\n\nFluxInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nTotalRhoInObj\n\n\nWeight of [Total mass] in objective\n\n\n\n\n\n\nXYvxInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXYvyInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXYvzInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXYrho1InObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXYrho2InObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXYareaInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXZvxInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXZvyInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXZvzInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXZrho1InObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXZrho2InObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXZareaInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nYZvxInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nYZvyInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nYZvzInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nYZrho1InObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nYZrho2InObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nYZareaInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nnu\n\n\n\n\nViscosity\n\n\n\n\n\n\nGalileanCorrection\n\n\n\n\nGalilean correction term\n\n\n\n\n\n\nForceX\n\n\n\n\nForce X\n\n\n\n\n\n\nForceY\n\n\n\n\nForce Y\n\n\n\n\n\n\nForceZ\n\n\n\n\nForce Z\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nP\n\n\nPa\n\n\nP\n\n\n\n\n\n\nU\n\n\nm/s\n\n\nU\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nFlux\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nTotalRho\n\n\nkg\n\n\nTotal mass\n\n\n\n\n\n\nXYvx\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nXYvy\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nXYvz\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nXYrho1\n\n\nkg/m\n\n\nVolume flux\n\n\n\n\n\n\nXYrho2\n\n\nkg/m\n\n\nVolume flux\n\n\n\n\n\n\nXYarea\n\n\nm2\n\n\nVolume flux\n\n\n\n\n\n\nXZvx\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nXZvy\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nXZvz\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nXZrho1\n\n\nkg/m\n\n\nVolume flux\n\n\n\n\n\n\nXZrho2\n\n\nkg/m\n\n\nVolume flux\n\n\n\n\n\n\nXZarea\n\n\nm2\n\n\nVolume flux\n\n\n\n\n\n\nYZvx\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nYZvy\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nYZvz\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nYZrho1\n\n\nkg/m\n\n\nVolume flux\n\n\n\n\n\n\nYZrho2\n\n\nkg/m\n\n\nVolume flux\n\n\n\n\n\n\nYZarea\n\n\nm2\n\n\nVolume flux\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nADDITIONALS\n\n\nXYslice1, XZslice1, YZslice1, XYslice2, XZslice2, YZslice2\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, SymmetryY, SymmetryZ, TopSymmetry, BottomSymmetry, NVelocity, SVelocity, NPressure, SPressure\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf000\n\n\n\n\ndensity F 0\n\n\n\n\n\n\nf100\n\n\n\n\ndensity F 1\n\n\n\n\n\n\nf200\n\n\n\n\ndensity F 2\n\n\n\n\n\n\nf010\n\n\n\n\ndensity F 3\n\n\n\n\n\n\nf110\n\n\n\n\ndensity F 4\n\n\n\n\n\n\nf210\n\n\n\n\ndensity F 5\n\n\n\n\n\n\nf020\n\n\n\n\ndensity F 6\n\n\n\n\n\n\nf120\n\n\n\n\ndensity F 7\n\n\n\n\n\n\nf220\n\n\n\n\ndensity F 8\n\n\n\n\n\n\nf001\n\n\n\n\ndensity F 9\n\n\n\n\n\n\nf101\n\n\n\n\ndensity F 10\n\n\n\n\n\n\nf201\n\n\n\n\ndensity F 11\n\n\n\n\n\n\nf011\n\n\n\n\ndensity F 12\n\n\n\n\n\n\nf111\n\n\n\n\ndensity F 13\n\n\n\n\n\n\nf211\n\n\n\n\ndensity F 14\n\n\n\n\n\n\nf021\n\n\n\n\ndensity F 15\n\n\n\n\n\n\nf121\n\n\n\n\ndensity F 16\n\n\n\n\n\n\nf221\n\n\n\n\ndensity F 17\n\n\n\n\n\n\nf002\n\n\n\n\ndensity F 18\n\n\n\n\n\n\nf102\n\n\n\n\ndensity F 19\n\n\n\n\n\n\nf202\n\n\n\n\ndensity F 20\n\n\n\n\n\n\nf012\n\n\n\n\ndensity F 21\n\n\n\n\n\n\nf112\n\n\n\n\ndensity F 22\n\n\n\n\n\n\nf212\n\n\n\n\ndensity F 23\n\n\n\n\n\n\nf022\n\n\n\n\ndensity F 24\n\n\n\n\n\n\nf122\n\n\n\n\ndensity F 25\n\n\n\n\n\n\nf222\n\n\n\n\ndensity F 26\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf000\n\n\nf000\n\n\n\n\ndensity F 0\n\n\n\n\n\n\nf100\n\n\nf100\n\n\n\n\ndensity F 1\n\n\n\n\n\n\nf200\n\n\nf200\n\n\n\n\ndensity F 2\n\n\n\n\n\n\nf010\n\n\nf010\n\n\n\n\ndensity F 3\n\n\n\n\n\n\nf110\n\n\nf110\n\n\n\n\ndensity F 4\n\n\n\n\n\n\nf210\n\n\nf210\n\n\n\n\ndensity F 5\n\n\n\n\n\n\nf020\n\n\nf020\n\n\n\n\ndensity F 6\n\n\n\n\n\n\nf120\n\n\nf120\n\n\n\n\ndensity F 7\n\n\n\n\n\n\nf220\n\n\nf220\n\n\n\n\ndensity F 8\n\n\n\n\n\n\nf001\n\n\nf001\n\n\n\n\ndensity F 9\n\n\n\n\n\n\nf101\n\n\nf101\n\n\n\n\ndensity F 10\n\n\n\n\n\n\nf201\n\n\nf201\n\n\n\n\ndensity F 11\n\n\n\n\n\n\nf011\n\n\nf011\n\n\n\n\ndensity F 12\n\n\n\n\n\n\nf111\n\n\nf111\n\n\n\n\ndensity F 13\n\n\n\n\n\n\nf211\n\n\nf211\n\n\n\n\ndensity F 14\n\n\n\n\n\n\nf021\n\n\nf021\n\n\n\n\ndensity F 15\n\n\n\n\n\n\nf121\n\n\nf121\n\n\n\n\ndensity F 16\n\n\n\n\n\n\nf221\n\n\nf221\n\n\n\n\ndensity F 17\n\n\n\n\n\n\nf002\n\n\nf002\n\n\n\n\ndensity F 18\n\n\n\n\n\n\nf102\n\n\nf102\n\n\n\n\ndensity F 19\n\n\n\n\n\n\nf202\n\n\nf202\n\n\n\n\ndensity F 20\n\n\n\n\n\n\nf012\n\n\nf012\n\n\n\n\ndensity F 21\n\n\n\n\n\n\nf112\n\n\nf112\n\n\n\n\ndensity F 22\n\n\n\n\n\n\nf212\n\n\nf212\n\n\n\n\ndensity F 23\n\n\n\n\n\n\nf022\n\n\nf022\n\n\n\n\ndensity F 24\n\n\n\n\n\n\nf122\n\n\nf122\n\n\n\n\ndensity F 25\n\n\n\n\n\n\nf222\n\n\nf222\n\n\n\n\ndensity F 26\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nBaseIteration\n\n\nRun\n\n\nf000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222\n\n\nf000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222\n\n\n\n\n\n\nBaseInit\n\n\nInit\n\n\nnone\n\n\nf000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIteration\n\n\n\n\n\n\nInit\n\n\nBaseInit",
            "title": "d3q27 BGK galcor"
        },
        {
            "location": "/models/flow/experimental/d3q27_BGK_galcor/#description",
            "text": "d3q27_BGK_galcor",
            "title": "Description"
        },
        {
            "location": "/models/flow/experimental/d3q27_BGK_galcor/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/flow/experimental/d3q27_BGK_galcor/#zonal-settings",
            "text": "Name  Comment      Velocity  Inlet velocity    Pressure  Inlet pressure    FluxInObj  Weight of [Volume flux] in objective    TotalRhoInObj  Weight of [Total mass] in objective    XYvxInObj  Weight of [Volume flux] in objective    XYvyInObj  Weight of [Volume flux] in objective    XYvzInObj  Weight of [Volume flux] in objective    XYrho1InObj  Weight of [Volume flux] in objective    XYrho2InObj  Weight of [Volume flux] in objective    XYareaInObj  Weight of [Volume flux] in objective    XZvxInObj  Weight of [Volume flux] in objective    XZvyInObj  Weight of [Volume flux] in objective    XZvzInObj  Weight of [Volume flux] in objective    XZrho1InObj  Weight of [Volume flux] in objective    XZrho2InObj  Weight of [Volume flux] in objective    XZareaInObj  Weight of [Volume flux] in objective    YZvxInObj  Weight of [Volume flux] in objective    YZvyInObj  Weight of [Volume flux] in objective    YZvzInObj  Weight of [Volume flux] in objective    YZrho1InObj  Weight of [Volume flux] in objective    YZrho2InObj  Weight of [Volume flux] in objective    YZareaInObj  Weight of [Volume flux] in objective",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/flow/experimental/d3q27_BGK_galcor/#global-settings",
            "text": "Name  Derived  Comment      nu   Viscosity    GalileanCorrection   Galilean correction term    ForceX   Force X    ForceY   Force Y    ForceZ   Force Z    Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/flow/experimental/d3q27_BGK_galcor/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      P  Pa  P    U  m/s  U",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/flow/experimental/d3q27_BGK_galcor/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      Flux  m3/s  Volume flux    TotalRho  kg  Total mass    XYvx  m3/s  Volume flux    XYvy  m3/s  Volume flux    XYvz  m3/s  Volume flux    XYrho1  kg/m  Volume flux    XYrho2  kg/m  Volume flux    XYarea  m2  Volume flux    XZvx  m3/s  Volume flux    XZvy  m3/s  Volume flux    XZvz  m3/s  Volume flux    XZrho1  kg/m  Volume flux    XZrho2  kg/m  Volume flux    XZarea  m2  Volume flux    YZvx  m3/s  Volume flux    YZvy  m3/s  Volume flux    YZvz  m3/s  Volume flux    YZrho1  kg/m  Volume flux    YZrho2  kg/m  Volume flux    YZarea  m2  Volume flux    Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/flow/experimental/d3q27_BGK_galcor/#node-types",
            "text": "Group  Types      ADDITIONALS  XYslice1, XZslice1, YZslice1, XYslice2, XZslice2, YZslice2    BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, SymmetryY, SymmetryZ, TopSymmetry, BottomSymmetry, NVelocity, SVelocity, NPressure, SPressure    COLLISION  BGK, MRT    DESIGNSPACE  DesignSpace    NONE  None    OBJECTIVE  Inlet, Outlet    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/flow/experimental/d3q27_BGK_galcor/#solved-fields",
            "text": "Name  Access pattern  Comment      f000   density F 0    f100   density F 1    f200   density F 2    f010   density F 3    f110   density F 4    f210   density F 5    f020   density F 6    f120   density F 7    f220   density F 8    f001   density F 9    f101   density F 10    f201   density F 11    f011   density F 12    f111   density F 13    f211   density F 14    f021   density F 15    f121   density F 16    f221   density F 17    f002   density F 18    f102   density F 19    f202   density F 20    f012   density F 21    f112   density F 22    f212   density F 23    f022   density F 24    f122   density F 25    f222   density F 26",
            "title": "Solved fields"
        },
        {
            "location": "/models/flow/experimental/d3q27_BGK_galcor/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment      f000  f000   density F 0    f100  f100   density F 1    f200  f200   density F 2    f010  f010   density F 3    f110  f110   density F 4    f210  f210   density F 5    f020  f020   density F 6    f120  f120   density F 7    f220  f220   density F 8    f001  f001   density F 9    f101  f101   density F 10    f201  f201   density F 11    f011  f011   density F 12    f111  f111   density F 13    f211  f211   density F 14    f021  f021   density F 15    f121  f121   density F 16    f221  f221   density F 17    f002  f002   density F 18    f102  f102   density F 19    f202  f202   density F 20    f012  f012   density F 21    f112  f112   density F 22    f212  f212   density F 23    f022  f022   density F 24    f122  f122   density F 25    f222  f222   density F 26",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/flow/experimental/d3q27_BGK_galcor/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      BaseIteration  Run  f000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222  f000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222    BaseInit  Init  none  f000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222",
            "title": "Action stages"
        },
        {
            "location": "/models/flow/experimental/d3q27_BGK_galcor/#actions",
            "text": "Name  Stages      Iteration  BaseIteration    Init  BaseInit",
            "title": "Actions"
        },
        {
            "location": "/models/flow/qibb/d3q27_cumulant_qibb_small/",
            "text": "Description\n\n\nd3q27_cumulant_qibb_small\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nVelocity\n\n\nInlet velocity\n\n\n\n\n\n\nPressure\n\n\nInlet pressure\n\n\n\n\n\n\nFluxInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nTotalRhoInObj\n\n\nWeight of [Total mass] in objective\n\n\n\n\n\n\nXYvxInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXYvyInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXYvzInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXYrho1InObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXYrho2InObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXYareaInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXZvxInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXZvyInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXZvzInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXZrho1InObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXZrho2InObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXZareaInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nYZvxInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nYZvyInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nYZvzInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nYZrho1InObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nYZrho2InObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nYZareaInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nnu\n\n\n\n\nViscosity\n\n\n\n\n\n\nnubuffer\n\n\n\n\nViscosity in the buffer layer\n\n\n\n\n\n\nGalileanCorrection\n\n\n\n\nGalilean correction term\n\n\n\n\n\n\nForceX\n\n\n\n\nForce force X\n\n\n\n\n\n\nForceY\n\n\n\n\nForce force Y\n\n\n\n\n\n\nForceZ\n\n\n\n\nForce force Z\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nP\n\n\nPa\n\n\nP\n\n\n\n\n\n\nU\n\n\nm/s\n\n\nU\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nFlux\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nTotalRho\n\n\nkg\n\n\nTotal mass\n\n\n\n\n\n\nXYvx\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nXYvy\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nXYvz\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nXYrho1\n\n\nkg/m\n\n\nVolume flux\n\n\n\n\n\n\nXYrho2\n\n\nkg/m\n\n\nVolume flux\n\n\n\n\n\n\nXYarea\n\n\nm2\n\n\nVolume flux\n\n\n\n\n\n\nXZvx\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nXZvy\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nXZvz\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nXZrho1\n\n\nkg/m\n\n\nVolume flux\n\n\n\n\n\n\nXZrho2\n\n\nkg/m\n\n\nVolume flux\n\n\n\n\n\n\nXZarea\n\n\nm2\n\n\nVolume flux\n\n\n\n\n\n\nYZvx\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nYZvy\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nYZvz\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nYZrho1\n\n\nkg/m\n\n\nVolume flux\n\n\n\n\n\n\nYZrho2\n\n\nkg/m\n\n\nVolume flux\n\n\n\n\n\n\nYZarea\n\n\nm2\n\n\nVolume flux\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nADDITIONALS\n\n\nXYslice1, XZslice1, YZslice1, XYslice2, XZslice2, YZslice2\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, SymmetryY, SymmetryZ, TopSymmetry, BottomSymmetry, NVelocity, SVelocity, NPressure, SPressure, EOutlet, WVelocityEq, WVelocityBB\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nHO_BOUNDARY\n\n\nQIBB\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf000\n\n\n\n\ndensity F 0\n\n\n\n\n\n\nf100\n\n\n\n\ndensity F 1\n\n\n\n\n\n\nf200\n\n\n\n\ndensity F 2\n\n\n\n\n\n\nf010\n\n\n\n\ndensity F 3\n\n\n\n\n\n\nf110\n\n\n\n\ndensity F 4\n\n\n\n\n\n\nf210\n\n\n\n\ndensity F 5\n\n\n\n\n\n\nf020\n\n\n\n\ndensity F 6\n\n\n\n\n\n\nf120\n\n\n\n\ndensity F 7\n\n\n\n\n\n\nf220\n\n\n\n\ndensity F 8\n\n\n\n\n\n\nf001\n\n\n\n\ndensity F 9\n\n\n\n\n\n\nf101\n\n\n\n\ndensity F 10\n\n\n\n\n\n\nf201\n\n\n\n\ndensity F 11\n\n\n\n\n\n\nf011\n\n\n\n\ndensity F 12\n\n\n\n\n\n\nf111\n\n\n\n\ndensity F 13\n\n\n\n\n\n\nf211\n\n\n\n\ndensity F 14\n\n\n\n\n\n\nf021\n\n\n\n\ndensity F 15\n\n\n\n\n\n\nf121\n\n\n\n\ndensity F 16\n\n\n\n\n\n\nf221\n\n\n\n\ndensity F 17\n\n\n\n\n\n\nf002\n\n\n\n\ndensity F 18\n\n\n\n\n\n\nf102\n\n\n\n\ndensity F 19\n\n\n\n\n\n\nf202\n\n\n\n\ndensity F 20\n\n\n\n\n\n\nf012\n\n\n\n\ndensity F 21\n\n\n\n\n\n\nf112\n\n\n\n\ndensity F 22\n\n\n\n\n\n\nf212\n\n\n\n\ndensity F 23\n\n\n\n\n\n\nf022\n\n\n\n\ndensity F 24\n\n\n\n\n\n\nf122\n\n\n\n\ndensity F 25\n\n\n\n\n\n\nf222\n\n\n\n\ndensity F 26\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf000\n\n\nf000\n\n\n\n\ndensity F 0\n\n\n\n\n\n\nf100\n\n\nf100\n\n\n\n\ndensity F 1\n\n\n\n\n\n\nf200\n\n\nf200\n\n\n\n\ndensity F 2\n\n\n\n\n\n\nf010\n\n\nf010\n\n\n\n\ndensity F 3\n\n\n\n\n\n\nf110\n\n\nf110\n\n\n\n\ndensity F 4\n\n\n\n\n\n\nf210\n\n\nf210\n\n\n\n\ndensity F 5\n\n\n\n\n\n\nf020\n\n\nf020\n\n\n\n\ndensity F 6\n\n\n\n\n\n\nf120\n\n\nf120\n\n\n\n\ndensity F 7\n\n\n\n\n\n\nf220\n\n\nf220\n\n\n\n\ndensity F 8\n\n\n\n\n\n\nf001\n\n\nf001\n\n\n\n\ndensity F 9\n\n\n\n\n\n\nf101\n\n\nf101\n\n\n\n\ndensity F 10\n\n\n\n\n\n\nf201\n\n\nf201\n\n\n\n\ndensity F 11\n\n\n\n\n\n\nf011\n\n\nf011\n\n\n\n\ndensity F 12\n\n\n\n\n\n\nf111\n\n\nf111\n\n\n\n\ndensity F 13\n\n\n\n\n\n\nf211\n\n\nf211\n\n\n\n\ndensity F 14\n\n\n\n\n\n\nf021\n\n\nf021\n\n\n\n\ndensity F 15\n\n\n\n\n\n\nf121\n\n\nf121\n\n\n\n\ndensity F 16\n\n\n\n\n\n\nf221\n\n\nf221\n\n\n\n\ndensity F 17\n\n\n\n\n\n\nf002\n\n\nf002\n\n\n\n\ndensity F 18\n\n\n\n\n\n\nf102\n\n\nf102\n\n\n\n\ndensity F 19\n\n\n\n\n\n\nf202\n\n\nf202\n\n\n\n\ndensity F 20\n\n\n\n\n\n\nf012\n\n\nf012\n\n\n\n\ndensity F 21\n\n\n\n\n\n\nf112\n\n\nf112\n\n\n\n\ndensity F 22\n\n\n\n\n\n\nf212\n\n\nf212\n\n\n\n\ndensity F 23\n\n\n\n\n\n\nf022\n\n\nf022\n\n\n\n\ndensity F 24\n\n\n\n\n\n\nf122\n\n\nf122\n\n\n\n\ndensity F 25\n\n\n\n\n\n\nf222\n\n\nf222\n\n\n\n\ndensity F 26\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nBaseIteration\n\n\nRun\n\n\nf000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222\n\n\nf000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222\n\n\n\n\n\n\nBaseInit\n\n\nInit\n\n\nnone\n\n\nf000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIteration\n\n\n\n\n\n\nInit\n\n\nBaseInit",
            "title": "D3q27 cumulant qibb small"
        },
        {
            "location": "/models/flow/qibb/d3q27_cumulant_qibb_small/#description",
            "text": "d3q27_cumulant_qibb_small",
            "title": "Description"
        },
        {
            "location": "/models/flow/qibb/d3q27_cumulant_qibb_small/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/flow/qibb/d3q27_cumulant_qibb_small/#zonal-settings",
            "text": "Name  Comment      Velocity  Inlet velocity    Pressure  Inlet pressure    FluxInObj  Weight of [Volume flux] in objective    TotalRhoInObj  Weight of [Total mass] in objective    XYvxInObj  Weight of [Volume flux] in objective    XYvyInObj  Weight of [Volume flux] in objective    XYvzInObj  Weight of [Volume flux] in objective    XYrho1InObj  Weight of [Volume flux] in objective    XYrho2InObj  Weight of [Volume flux] in objective    XYareaInObj  Weight of [Volume flux] in objective    XZvxInObj  Weight of [Volume flux] in objective    XZvyInObj  Weight of [Volume flux] in objective    XZvzInObj  Weight of [Volume flux] in objective    XZrho1InObj  Weight of [Volume flux] in objective    XZrho2InObj  Weight of [Volume flux] in objective    XZareaInObj  Weight of [Volume flux] in objective    YZvxInObj  Weight of [Volume flux] in objective    YZvyInObj  Weight of [Volume flux] in objective    YZvzInObj  Weight of [Volume flux] in objective    YZrho1InObj  Weight of [Volume flux] in objective    YZrho2InObj  Weight of [Volume flux] in objective    YZareaInObj  Weight of [Volume flux] in objective",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/flow/qibb/d3q27_cumulant_qibb_small/#global-settings",
            "text": "Name  Derived  Comment      nu   Viscosity    nubuffer   Viscosity in the buffer layer    GalileanCorrection   Galilean correction term    ForceX   Force force X    ForceY   Force force Y    ForceZ   Force force Z    Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/flow/qibb/d3q27_cumulant_qibb_small/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      P  Pa  P    U  m/s  U",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/flow/qibb/d3q27_cumulant_qibb_small/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      Flux  m3/s  Volume flux    TotalRho  kg  Total mass    XYvx  m3/s  Volume flux    XYvy  m3/s  Volume flux    XYvz  m3/s  Volume flux    XYrho1  kg/m  Volume flux    XYrho2  kg/m  Volume flux    XYarea  m2  Volume flux    XZvx  m3/s  Volume flux    XZvy  m3/s  Volume flux    XZvz  m3/s  Volume flux    XZrho1  kg/m  Volume flux    XZrho2  kg/m  Volume flux    XZarea  m2  Volume flux    YZvx  m3/s  Volume flux    YZvy  m3/s  Volume flux    YZvz  m3/s  Volume flux    YZrho1  kg/m  Volume flux    YZrho2  kg/m  Volume flux    YZarea  m2  Volume flux    Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/flow/qibb/d3q27_cumulant_qibb_small/#node-types",
            "text": "Group  Types      ADDITIONALS  XYslice1, XZslice1, YZslice1, XYslice2, XZslice2, YZslice2    BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, SymmetryY, SymmetryZ, TopSymmetry, BottomSymmetry, NVelocity, SVelocity, NPressure, SPressure, EOutlet, WVelocityEq, WVelocityBB    COLLISION  BGK, MRT    DESIGNSPACE  DesignSpace    HO_BOUNDARY  QIBB    NONE  None    OBJECTIVE  Inlet, Outlet    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/flow/qibb/d3q27_cumulant_qibb_small/#solved-fields",
            "text": "Name  Access pattern  Comment      f000   density F 0    f100   density F 1    f200   density F 2    f010   density F 3    f110   density F 4    f210   density F 5    f020   density F 6    f120   density F 7    f220   density F 8    f001   density F 9    f101   density F 10    f201   density F 11    f011   density F 12    f111   density F 13    f211   density F 14    f021   density F 15    f121   density F 16    f221   density F 17    f002   density F 18    f102   density F 19    f202   density F 20    f012   density F 21    f112   density F 22    f212   density F 23    f022   density F 24    f122   density F 25    f222   density F 26",
            "title": "Solved fields"
        },
        {
            "location": "/models/flow/qibb/d3q27_cumulant_qibb_small/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment      f000  f000   density F 0    f100  f100   density F 1    f200  f200   density F 2    f010  f010   density F 3    f110  f110   density F 4    f210  f210   density F 5    f020  f020   density F 6    f120  f120   density F 7    f220  f220   density F 8    f001  f001   density F 9    f101  f101   density F 10    f201  f201   density F 11    f011  f011   density F 12    f111  f111   density F 13    f211  f211   density F 14    f021  f021   density F 15    f121  f121   density F 16    f221  f221   density F 17    f002  f002   density F 18    f102  f102   density F 19    f202  f202   density F 20    f012  f012   density F 21    f112  f112   density F 22    f212  f212   density F 23    f022  f022   density F 24    f122  f122   density F 25    f222  f222   density F 26",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/flow/qibb/d3q27_cumulant_qibb_small/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      BaseIteration  Run  f000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222  f000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222    BaseInit  Init  none  f000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222",
            "title": "Action stages"
        },
        {
            "location": "/models/flow/qibb/d3q27_cumulant_qibb_small/#actions",
            "text": "Name  Stages      Iteration  BaseIteration    Init  BaseInit",
            "title": "Actions"
        },
        {
            "location": "/models/heat/d3q19_heat/",
            "text": "Description\n\n\nd3q19_heat\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nVelocity\n\n\ninlet velocity\n\n\n\n\n\n\nPressure\n\n\ninlet pressure\n\n\n\n\n\n\nTemperature\n\n\ninlet density\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nnu\n\n\n\n\nviscosity\n\n\n\n\n\n\nFluidAlpha\n\n\n\n\ninlet density\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nRho\n\n\n1\n\n\nRho\n\n\n\n\n\n\nT\n\n\n1\n\n\nT\n\n\n\n\n\n\nU\n\n\n1\n\n\nU\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nADDITIONALS\n\n\nHeater\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf0\n\n\n\n\nflow LB density F 0\n\n\n\n\n\n\nf1\n\n\n\n\nflow LB density F 1\n\n\n\n\n\n\nf2\n\n\n\n\nflow LB density F 2\n\n\n\n\n\n\nf3\n\n\n\n\nflow LB density F 3\n\n\n\n\n\n\nf4\n\n\n\n\nflow LB density F 4\n\n\n\n\n\n\nf5\n\n\n\n\nflow LB density F 5\n\n\n\n\n\n\nf6\n\n\n\n\nflow LB density F 6\n\n\n\n\n\n\nf7\n\n\n\n\nflow LB density F 7\n\n\n\n\n\n\nf8\n\n\n\n\nflow LB density F 8\n\n\n\n\n\n\nf9\n\n\n\n\nflow LB density F 9\n\n\n\n\n\n\nf10\n\n\n\n\nflow LB density F 10\n\n\n\n\n\n\nf11\n\n\n\n\nflow LB density F 11\n\n\n\n\n\n\nf12\n\n\n\n\nflow LB density F 12\n\n\n\n\n\n\nf13\n\n\n\n\nflow LB density F 13\n\n\n\n\n\n\nf14\n\n\n\n\nflow LB density F 14\n\n\n\n\n\n\nf15\n\n\n\n\nflow LB density F 15\n\n\n\n\n\n\nf16\n\n\n\n\nflow LB density F 16\n\n\n\n\n\n\nf17\n\n\n\n\nflow LB density F 17\n\n\n\n\n\n\nf18\n\n\n\n\nflow LB density F 18\n\n\n\n\n\n\ng0\n\n\n\n\nheat LB density G 0\n\n\n\n\n\n\ng1\n\n\n\n\nheat LB density G 1\n\n\n\n\n\n\ng2\n\n\n\n\nheat LB density G 2\n\n\n\n\n\n\ng3\n\n\n\n\nheat LB density G 3\n\n\n\n\n\n\ng4\n\n\n\n\nheat LB density G 4\n\n\n\n\n\n\ng5\n\n\n\n\nheat LB density G 5\n\n\n\n\n\n\ng6\n\n\n\n\nheat LB density G 6\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf0\n\n\nf0\n\n\n\n\nflow LB density F 0\n\n\n\n\n\n\nf1\n\n\nf1\n\n\n\n\nflow LB density F 1\n\n\n\n\n\n\nf2\n\n\nf2\n\n\n\n\nflow LB density F 2\n\n\n\n\n\n\nf3\n\n\nf3\n\n\n\n\nflow LB density F 3\n\n\n\n\n\n\nf4\n\n\nf4\n\n\n\n\nflow LB density F 4\n\n\n\n\n\n\nf5\n\n\nf5\n\n\n\n\nflow LB density F 5\n\n\n\n\n\n\nf6\n\n\nf6\n\n\n\n\nflow LB density F 6\n\n\n\n\n\n\nf7\n\n\nf7\n\n\n\n\nflow LB density F 7\n\n\n\n\n\n\nf8\n\n\nf8\n\n\n\n\nflow LB density F 8\n\n\n\n\n\n\nf9\n\n\nf9\n\n\n\n\nflow LB density F 9\n\n\n\n\n\n\nf10\n\n\nf10\n\n\n\n\nflow LB density F 10\n\n\n\n\n\n\nf11\n\n\nf11\n\n\n\n\nflow LB density F 11\n\n\n\n\n\n\nf12\n\n\nf12\n\n\n\n\nflow LB density F 12\n\n\n\n\n\n\nf13\n\n\nf13\n\n\n\n\nflow LB density F 13\n\n\n\n\n\n\nf14\n\n\nf14\n\n\n\n\nflow LB density F 14\n\n\n\n\n\n\nf15\n\n\nf15\n\n\n\n\nflow LB density F 15\n\n\n\n\n\n\nf16\n\n\nf16\n\n\n\n\nflow LB density F 16\n\n\n\n\n\n\nf17\n\n\nf17\n\n\n\n\nflow LB density F 17\n\n\n\n\n\n\nf18\n\n\nf18\n\n\n\n\nflow LB density F 18\n\n\n\n\n\n\ng0\n\n\ng0\n\n\n\n\nheat LB density G 0\n\n\n\n\n\n\ng1\n\n\ng1\n\n\n\n\nheat LB density G 1\n\n\n\n\n\n\ng2\n\n\ng2\n\n\n\n\nheat LB density G 2\n\n\n\n\n\n\ng3\n\n\ng3\n\n\n\n\nheat LB density G 3\n\n\n\n\n\n\ng4\n\n\ng4\n\n\n\n\nheat LB density G 4\n\n\n\n\n\n\ng5\n\n\ng5\n\n\n\n\nheat LB density G 5\n\n\n\n\n\n\ng6\n\n\ng6\n\n\n\n\nheat LB density G 6\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nBaseIteration\n\n\nRun\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, g0, g1, g2, g3, g4, g5, g6\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, g0, g1, g2, g3, g4, g5, g6\n\n\n\n\n\n\nBaseInit\n\n\nInit\n\n\nnone\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, g0, g1, g2, g3, g4, g5, g6\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIteration\n\n\n\n\n\n\nInit\n\n\nBaseInit",
            "title": "D3q19 heat"
        },
        {
            "location": "/models/heat/d3q19_heat/#description",
            "text": "d3q19_heat",
            "title": "Description"
        },
        {
            "location": "/models/heat/d3q19_heat/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/heat/d3q19_heat/#zonal-settings",
            "text": "Name  Comment      Velocity  inlet velocity    Pressure  inlet pressure    Temperature  inlet density",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/heat/d3q19_heat/#global-settings",
            "text": "Name  Derived  Comment      nu   viscosity    FluidAlpha   inlet density    Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/heat/d3q19_heat/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      Rho  1  Rho    T  1  T    U  1  U",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/heat/d3q19_heat/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/heat/d3q19_heat/#node-types",
            "text": "Group  Types      ADDITIONALS  Heater    BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity    COLLISION  BGK, MRT    DESIGNSPACE  DesignSpace    NONE  None    OBJECTIVE  Inlet, Outlet    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/heat/d3q19_heat/#solved-fields",
            "text": "Name  Access pattern  Comment      f0   flow LB density F 0    f1   flow LB density F 1    f2   flow LB density F 2    f3   flow LB density F 3    f4   flow LB density F 4    f5   flow LB density F 5    f6   flow LB density F 6    f7   flow LB density F 7    f8   flow LB density F 8    f9   flow LB density F 9    f10   flow LB density F 10    f11   flow LB density F 11    f12   flow LB density F 12    f13   flow LB density F 13    f14   flow LB density F 14    f15   flow LB density F 15    f16   flow LB density F 16    f17   flow LB density F 17    f18   flow LB density F 18    g0   heat LB density G 0    g1   heat LB density G 1    g2   heat LB density G 2    g3   heat LB density G 3    g4   heat LB density G 4    g5   heat LB density G 5    g6   heat LB density G 6",
            "title": "Solved fields"
        },
        {
            "location": "/models/heat/d3q19_heat/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment      f0  f0   flow LB density F 0    f1  f1   flow LB density F 1    f2  f2   flow LB density F 2    f3  f3   flow LB density F 3    f4  f4   flow LB density F 4    f5  f5   flow LB density F 5    f6  f6   flow LB density F 6    f7  f7   flow LB density F 7    f8  f8   flow LB density F 8    f9  f9   flow LB density F 9    f10  f10   flow LB density F 10    f11  f11   flow LB density F 11    f12  f12   flow LB density F 12    f13  f13   flow LB density F 13    f14  f14   flow LB density F 14    f15  f15   flow LB density F 15    f16  f16   flow LB density F 16    f17  f17   flow LB density F 17    f18  f18   flow LB density F 18    g0  g0   heat LB density G 0    g1  g1   heat LB density G 1    g2  g2   heat LB density G 2    g3  g3   heat LB density G 3    g4  g4   heat LB density G 4    g5  g5   heat LB density G 5    g6  g6   heat LB density G 6",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/heat/d3q19_heat/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      BaseIteration  Run  f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, g0, g1, g2, g3, g4, g5, g6  f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, g0, g1, g2, g3, g4, g5, g6    BaseInit  Init  none  f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, g0, g1, g2, g3, g4, g5, g6",
            "title": "Action stages"
        },
        {
            "location": "/models/heat/d3q19_heat/#actions",
            "text": "Name  Stages      Iteration  BaseIteration    Init  BaseInit",
            "title": "Actions"
        },
        {
            "location": "/models/heat/experimental/d2q9_heat/",
            "text": "Description\n\n\nd2q9_heat\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nOutFluxInObj\n\n\nWeight of [OutFlux] in objective\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nomega\n\n\n1.0/(3*nu + 0.5)\n\n\none over relaxation time\n\n\n\n\n\n\nnu\n\n\n\n\nviscosity\n\n\n\n\n\n\nInletVelocity\n\n\n\n\ninlet velocity\n\n\n\n\n\n\nInletPressure\n\n\n\n\ninlet pressure\n\n\n\n\n\n\nInletDensity\n\n\n1.0+InletPressure/3\n\n\ninlet density\n\n\n\n\n\n\nInletTemperature\n\n\n\n\ninlet density\n\n\n\n\n\n\nInitTemperature\n\n\n\n\ninlet density\n\n\n\n\n\n\nFluidAlfa\n\n\n\n\ninlet density\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nRho\n\n\nkg/m3\n\n\nRho\n\n\n\n\n\n\nT\n\n\nK\n\n\nT\n\n\n\n\n\n\nU\n\n\nm/s\n\n\nU\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nOutFlux\n\n\n1\n\n\nOutFlux\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nADDITIONALS\n\n\nHeater\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf[0]\n\n\n\n\nf[0]\n\n\n\n\n\n\nf[1]\n\n\n\n\nf[1]\n\n\n\n\n\n\nf[2]\n\n\n\n\nf[2]\n\n\n\n\n\n\nf[3]\n\n\n\n\nf[3]\n\n\n\n\n\n\nf[4]\n\n\n\n\nf[4]\n\n\n\n\n\n\nf[5]\n\n\n\n\nf[5]\n\n\n\n\n\n\nf[6]\n\n\n\n\nf[6]\n\n\n\n\n\n\nf[7]\n\n\n\n\nf[7]\n\n\n\n\n\n\nf[8]\n\n\n\n\nf[8]\n\n\n\n\n\n\nT[0]\n\n\n\n\nT[0]\n\n\n\n\n\n\nT[1]\n\n\n\n\nT[1]\n\n\n\n\n\n\nT[2]\n\n\n\n\nT[2]\n\n\n\n\n\n\nT[3]\n\n\n\n\nT[3]\n\n\n\n\n\n\nT[4]\n\n\n\n\nT[4]\n\n\n\n\n\n\nT[5]\n\n\n\n\nT[5]\n\n\n\n\n\n\nT[6]\n\n\n\n\nT[6]\n\n\n\n\n\n\nT[7]\n\n\n\n\nT[7]\n\n\n\n\n\n\nT[8]\n\n\n\n\nT[8]\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf[0]\n\n\nf[0]\n\n\n\n\nf[0]\n\n\n\n\n\n\nf[1]\n\n\nf[1]\n\n\n\n\nf[1]\n\n\n\n\n\n\nf[2]\n\n\nf[2]\n\n\n\n\nf[2]\n\n\n\n\n\n\nf[3]\n\n\nf[3]\n\n\n\n\nf[3]\n\n\n\n\n\n\nf[4]\n\n\nf[4]\n\n\n\n\nf[4]\n\n\n\n\n\n\nf[5]\n\n\nf[5]\n\n\n\n\nf[5]\n\n\n\n\n\n\nf[6]\n\n\nf[6]\n\n\n\n\nf[6]\n\n\n\n\n\n\nf[7]\n\n\nf[7]\n\n\n\n\nf[7]\n\n\n\n\n\n\nf[8]\n\n\nf[8]\n\n\n\n\nf[8]\n\n\n\n\n\n\nT[0]\n\n\nT[0]\n\n\n\n\nT[0]\n\n\n\n\n\n\nT[1]\n\n\nT[1]\n\n\n\n\nT[1]\n\n\n\n\n\n\nT[2]\n\n\nT[2]\n\n\n\n\nT[2]\n\n\n\n\n\n\nT[3]\n\n\nT[3]\n\n\n\n\nT[3]\n\n\n\n\n\n\nT[4]\n\n\nT[4]\n\n\n\n\nT[4]\n\n\n\n\n\n\nT[5]\n\n\nT[5]\n\n\n\n\nT[5]\n\n\n\n\n\n\nT[6]\n\n\nT[6]\n\n\n\n\nT[6]\n\n\n\n\n\n\nT[7]\n\n\nT[7]\n\n\n\n\nT[7]\n\n\n\n\n\n\nT[8]\n\n\nT[8]\n\n\n\n\nT[8]\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nBaseIteration\n\n\nRun\n\n\nf[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], T[0], T[1], T[2], T[3], T[4], T[5], T[6], T[7], T[8]\n\n\nf[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], T[0], T[1], T[2], T[3], T[4], T[5], T[6], T[7], T[8]\n\n\n\n\n\n\nBaseInit\n\n\nInit\n\n\nnone\n\n\nf[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], T[0], T[1], T[2], T[3], T[4], T[5], T[6], T[7], T[8]\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIteration\n\n\n\n\n\n\nInit\n\n\nBaseInit",
            "title": "D2q9 heat"
        },
        {
            "location": "/models/heat/experimental/d2q9_heat/#description",
            "text": "d2q9_heat",
            "title": "Description"
        },
        {
            "location": "/models/heat/experimental/d2q9_heat/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/heat/experimental/d2q9_heat/#zonal-settings",
            "text": "Name  Comment      OutFluxInObj  Weight of [OutFlux] in objective",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/heat/experimental/d2q9_heat/#global-settings",
            "text": "Name  Derived  Comment      omega  1.0/(3*nu + 0.5)  one over relaxation time    nu   viscosity    InletVelocity   inlet velocity    InletPressure   inlet pressure    InletDensity  1.0+InletPressure/3  inlet density    InletTemperature   inlet density    InitTemperature   inlet density    FluidAlfa   inlet density    Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/heat/experimental/d2q9_heat/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      Rho  kg/m3  Rho    T  K  T    U  m/s  U",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/heat/experimental/d2q9_heat/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      OutFlux  1  OutFlux    Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/heat/experimental/d2q9_heat/#node-types",
            "text": "Group  Types      ADDITIONALS  Heater    BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity    COLLISION  BGK, MRT    DESIGNSPACE  DesignSpace    NONE  None    OBJECTIVE  Inlet, Outlet    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/heat/experimental/d2q9_heat/#solved-fields",
            "text": "Name  Access pattern  Comment      f[0]   f[0]    f[1]   f[1]    f[2]   f[2]    f[3]   f[3]    f[4]   f[4]    f[5]   f[5]    f[6]   f[6]    f[7]   f[7]    f[8]   f[8]    T[0]   T[0]    T[1]   T[1]    T[2]   T[2]    T[3]   T[3]    T[4]   T[4]    T[5]   T[5]    T[6]   T[6]    T[7]   T[7]    T[8]   T[8]",
            "title": "Solved fields"
        },
        {
            "location": "/models/heat/experimental/d2q9_heat/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment      f[0]  f[0]   f[0]    f[1]  f[1]   f[1]    f[2]  f[2]   f[2]    f[3]  f[3]   f[3]    f[4]  f[4]   f[4]    f[5]  f[5]   f[5]    f[6]  f[6]   f[6]    f[7]  f[7]   f[7]    f[8]  f[8]   f[8]    T[0]  T[0]   T[0]    T[1]  T[1]   T[1]    T[2]  T[2]   T[2]    T[3]  T[3]   T[3]    T[4]  T[4]   T[4]    T[5]  T[5]   T[5]    T[6]  T[6]   T[6]    T[7]  T[7]   T[7]    T[8]  T[8]   T[8]",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/heat/experimental/d2q9_heat/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      BaseIteration  Run  f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], T[0], T[1], T[2], T[3], T[4], T[5], T[6], T[7], T[8]  f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], T[0], T[1], T[2], T[3], T[4], T[5], T[6], T[7], T[8]    BaseInit  Init  none  f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], T[0], T[1], T[2], T[3], T[4], T[5], T[6], T[7], T[8]",
            "title": "Action stages"
        },
        {
            "location": "/models/heat/experimental/d2q9_heat/#actions",
            "text": "Name  Stages      Iteration  BaseIteration    Init  BaseInit",
            "title": "Actions"
        },
        {
            "location": "/models/moving/d2q9_plate/",
            "text": "Description\n\n\nd2q9_plate\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nVelocity\n\n\ninlet/outlet/init velocity\n\n\n\n\n\n\nDensity\n\n\ninlet/outlet/init density\n\n\n\n\n\n\nPX\n\n\nplate position X\n\n\n\n\n\n\nPY\n\n\nplate position Y\n\n\n\n\n\n\nPR\n\n\nplate angle\n\n\n\n\n\n\nForceXInObj\n\n\nWeight of [reaction force X] in objective\n\n\n\n\n\n\nForceYInObj\n\n\nWeight of [reaction force Y] in objective\n\n\n\n\n\n\nMomentInObj\n\n\nWeight of [reaction force X] in objective\n\n\n\n\n\n\nPowerXInObj\n\n\nWeight of [reaction force Y] in objective\n\n\n\n\n\n\nPowerYInObj\n\n\nWeight of [reaction force X] in objective\n\n\n\n\n\n\nPowerRInObj\n\n\nWeight of [reaction force Y] in objective\n\n\n\n\n\n\nPowerInObj\n\n\nWeight of [reaction force X] in objective\n\n\n\n\n\n\nPower2InObj\n\n\nWeight of [reaction force Y] in objective\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\ntau0\n\n\n3*nu + 0.5\n\n\none over relaxation time\n\n\n\n\n\n\nnu\n\n\n\n\nviscosity\n\n\n\n\n\n\nSmag\n\n\n\n\ninlet density\n\n\n\n\n\n\nPDX\n\n\n\n\nplate diameter X\n\n\n\n\n\n\nPDY\n\n\n\n\nplate diameter Y\n\n\n\n\n\n\nSM\n\n\n\n\nsmoothing diameter\n\n\n\n\n\n\nSM_M\n\n\n\n\nsmoothing bias\n\n\n\n\n\n\nDescent\n\n\n\n\nOptimization Descent\n\n\n\n\n\n\nGradientSmooth\n\n\n\n\nGradient smoothing in OptSolve\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nRho\n\n\nkg/m3\n\n\nRho\n\n\n\n\n\n\nU\n\n\nm/s\n\n\nU\n\n\n\n\n\n\nSolid\n\n\n1\n\n\nSolid\n\n\n\n\n\n\nRhoB\n\n\n1\n\n\nRhoB\n\n\n\n\n\n\nUB\n\n\n1\n\n\nUB\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nForceX\n\n\n1\n\n\nreaction force X\n\n\n\n\n\n\nForceY\n\n\n1\n\n\nreaction force Y\n\n\n\n\n\n\nMoment\n\n\n1\n\n\nreaction force X\n\n\n\n\n\n\nPowerX\n\n\n1\n\n\nreaction force Y\n\n\n\n\n\n\nPowerY\n\n\n1\n\n\nreaction force X\n\n\n\n\n\n\nPowerR\n\n\n1\n\n\nreaction force Y\n\n\n\n\n\n\nPower\n\n\n1\n\n\nreaction force X\n\n\n\n\n\n\nPower2\n\n\n1\n\n\nreaction force Y\n\n\n\n\n\n\ntau0_D\n\n\n1\n\n\nGradient of objective with respect to [one over relaxation time]\n\n\n\n\n\n\nnu_D\n\n\n1\n\n\nGradient of objective with respect to [viscosity]\n\n\n\n\n\n\nSmag_D\n\n\n1\n\n\nGradient of objective with respect to [inlet density]\n\n\n\n\n\n\nPDX_D\n\n\n1\n\n\nGradient of objective with respect to [plate diameter X]\n\n\n\n\n\n\nPDY_D\n\n\n1\n\n\nGradient of objective with respect to [plate diameter Y]\n\n\n\n\n\n\nSM_D\n\n\n1\n\n\nGradient of objective with respect to [smoothing diameter]\n\n\n\n\n\n\nSM_M_D\n\n\n1\n\n\nGradient of objective with respect to [smoothing bias]\n\n\n\n\n\n\nAdjointRes\n\n\n1\n\n\nsquare L2 norm of adjoint change\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf0\n\n\n\n\nf0\n\n\n\n\n\n\nf1\n\n\n\n\nf1\n\n\n\n\n\n\nf2\n\n\n\n\nf2\n\n\n\n\n\n\nf3\n\n\n\n\nf3\n\n\n\n\n\n\nf4\n\n\n\n\nf4\n\n\n\n\n\n\nf5\n\n\n\n\nf5\n\n\n\n\n\n\nf6\n\n\n\n\nf6\n\n\n\n\n\n\nf7\n\n\n\n\nf7\n\n\n\n\n\n\nf8\n\n\n\n\nf8\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf0\n\n\nf0\n\n\n\n\nf0\n\n\n\n\n\n\nf1\n\n\nf1\n\n\n\n\nf1\n\n\n\n\n\n\nf2\n\n\nf2\n\n\n\n\nf2\n\n\n\n\n\n\nf3\n\n\nf3\n\n\n\n\nf3\n\n\n\n\n\n\nf4\n\n\nf4\n\n\n\n\nf4\n\n\n\n\n\n\nf5\n\n\nf5\n\n\n\n\nf5\n\n\n\n\n\n\nf6\n\n\nf6\n\n\n\n\nf6\n\n\n\n\n\n\nf7\n\n\nf7\n\n\n\n\nf7\n\n\n\n\n\n\nf8\n\n\nf8\n\n\n\n\nf8\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nBaseIteration\n\n\nRun\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8\n\n\n\n\n\n\nBaseInit\n\n\nInit\n\n\nnone\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIteration\n\n\n\n\n\n\nInit\n\n\nBaseInit",
            "title": "D2q9 plate"
        },
        {
            "location": "/models/moving/d2q9_plate/#description",
            "text": "d2q9_plate",
            "title": "Description"
        },
        {
            "location": "/models/moving/d2q9_plate/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/moving/d2q9_plate/#zonal-settings",
            "text": "Name  Comment      Velocity  inlet/outlet/init velocity    Density  inlet/outlet/init density    PX  plate position X    PY  plate position Y    PR  plate angle    ForceXInObj  Weight of [reaction force X] in objective    ForceYInObj  Weight of [reaction force Y] in objective    MomentInObj  Weight of [reaction force X] in objective    PowerXInObj  Weight of [reaction force Y] in objective    PowerYInObj  Weight of [reaction force X] in objective    PowerRInObj  Weight of [reaction force Y] in objective    PowerInObj  Weight of [reaction force X] in objective    Power2InObj  Weight of [reaction force Y] in objective",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/moving/d2q9_plate/#global-settings",
            "text": "Name  Derived  Comment      tau0  3*nu + 0.5  one over relaxation time    nu   viscosity    Smag   inlet density    PDX   plate diameter X    PDY   plate diameter Y    SM   smoothing diameter    SM_M   smoothing bias    Descent   Optimization Descent    GradientSmooth   Gradient smoothing in OptSolve    Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/moving/d2q9_plate/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      Rho  kg/m3  Rho    U  m/s  U    Solid  1  Solid    RhoB  1  RhoB    UB  1  UB",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/moving/d2q9_plate/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      ForceX  1  reaction force X    ForceY  1  reaction force Y    Moment  1  reaction force X    PowerX  1  reaction force Y    PowerY  1  reaction force X    PowerR  1  reaction force Y    Power  1  reaction force X    Power2  1  reaction force Y    tau0_D  1  Gradient of objective with respect to [one over relaxation time]    nu_D  1  Gradient of objective with respect to [viscosity]    Smag_D  1  Gradient of objective with respect to [inlet density]    PDX_D  1  Gradient of objective with respect to [plate diameter X]    PDY_D  1  Gradient of objective with respect to [plate diameter Y]    SM_D  1  Gradient of objective with respect to [smoothing diameter]    SM_M_D  1  Gradient of objective with respect to [smoothing bias]    AdjointRes  1  square L2 norm of adjoint change    Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/moving/d2q9_plate/#node-types",
            "text": "Group  Types      BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity    COLLISION  BGK, MRT    DESIGNSPACE  DesignSpace    NONE  None    OBJECTIVE  Inlet, Outlet    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/moving/d2q9_plate/#solved-fields",
            "text": "Name  Access pattern  Comment      f0   f0    f1   f1    f2   f2    f3   f3    f4   f4    f5   f5    f6   f6    f7   f7    f8   f8",
            "title": "Solved fields"
        },
        {
            "location": "/models/moving/d2q9_plate/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment      f0  f0   f0    f1  f1   f1    f2  f2   f2    f3  f3   f3    f4  f4   f4    f5  f5   f5    f6  f6   f6    f7  f7   f7    f8  f8   f8",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/moving/d2q9_plate/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      BaseIteration  Run  f0, f1, f2, f3, f4, f5, f6, f7, f8  f0, f1, f2, f3, f4, f5, f6, f7, f8    BaseInit  Init  none  f0, f1, f2, f3, f4, f5, f6, f7, f8",
            "title": "Action stages"
        },
        {
            "location": "/models/moving/d2q9_plate/#actions",
            "text": "Name  Stages      Iteration  BaseIteration    Init  BaseInit",
            "title": "Actions"
        },
        {
            "location": "/models/multiphase/d2q9_csf/",
            "text": "Description\n\n\nd2q9_csf\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nVelocity\n\n\ninlet/outlet/init velocity\n\n\n\n\n\n\nPressure\n\n\ninlet/outlet/init density\n\n\n\n\n\n\nPhaseField\n\n\nPhase Field marker scalar\n\n\n\n\n\n\nWettingAngle\n\n\nWettingAngle\n\n\n\n\n\n\nWallAdhesionDecay\n\n\nWallAdhesionDecay\n\n\n\n\n\n\nBrinkmanHeightInv\n\n\nBrinkmanHeightInv\n\n\n\n\n\n\nPressureLossInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\nOutletFluxInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\nInletFluxInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nPF_Advection_Switch\n\n\n\n\nParameter to turn on/off advection of phase field - usefull for initialisation\n\n\n\n\n\n\nomega\n\n\n1.0/(3*Viscosity + 0.5)\n\n\none over relaxation time\n\n\n\n\n\n\nomega_l\n\n\n1.0/(3*Viscosity_l + 0.5)\n\n\none over relaxation time, light phase\n\n\n\n\n\n\nViscosity\n\n\n\n\nviscosity\n\n\n\n\n\n\nViscosity_l\n\n\n\n\nviscosity\n\n\n\n\n\n\nIntWidth\n\n\n\n\nAnty-diffusivity coeff\n\n\n\n\n\n\nMobility\n\n\n\n\nMobility\n\n\n\n\n\n\nGravitationX\n\n\n\n\nGravitationX\n\n\n\n\n\n\nGravitationY\n\n\n\n\nGravitationY\n\n\n\n\n\n\nGravitationX_l\n\n\n\n\nGravitationX_l\n\n\n\n\n\n\nGravitationY_l\n\n\n\n\nGravitationY_l\n\n\n\n\n\n\nSurfaceTensionDecay\n\n\n\n\nSurfaceTensionDecay\n\n\n\n\n\n\nSurfaceTensionRate\n\n\n\n\nSurfaceTensionRate\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nH_Z\n\n\n1\n\n\nH_Z\n\n\n\n\n\n\nRho\n\n\nkg/m3\n\n\nRho\n\n\n\n\n\n\nU\n\n\nm/s\n\n\nU\n\n\n\n\n\n\nNormal\n\n\n1/m\n\n\nNormal\n\n\n\n\n\n\nPhaseField\n\n\n1\n\n\nPhaseField\n\n\n\n\n\n\nCurvature\n\n\n1\n\n\nCurvature\n\n\n\n\n\n\nInterfaceForce\n\n\n1\n\n\nInterfaceForce\n\n\n\n\n\n\nDEBUG\n\n\n1\n\n\nDEBUG\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nPressureLoss\n\n\n1mPa\n\n\npressure loss\n\n\n\n\n\n\nOutletFlux\n\n\n1m2/s\n\n\npressure loss\n\n\n\n\n\n\nInletFlux\n\n\n1m2/s\n\n\npressure loss\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, NSymmetry, SSymmetry\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf[0]\n\n\n\n\nf[0]\n\n\n\n\n\n\nf[1]\n\n\n\n\nf[1]\n\n\n\n\n\n\nf[2]\n\n\n\n\nf[2]\n\n\n\n\n\n\nf[3]\n\n\n\n\nf[3]\n\n\n\n\n\n\nf[4]\n\n\n\n\nf[4]\n\n\n\n\n\n\nf[5]\n\n\n\n\nf[5]\n\n\n\n\n\n\nf[6]\n\n\n\n\nf[6]\n\n\n\n\n\n\nf[7]\n\n\n\n\nf[7]\n\n\n\n\n\n\nf[8]\n\n\n\n\nf[8]\n\n\n\n\n\n\nh[0]\n\n\n\n\nh[0]\n\n\n\n\n\n\nh[1]\n\n\n\n\nh[1]\n\n\n\n\n\n\nh[2]\n\n\n\n\nh[2]\n\n\n\n\n\n\nh[3]\n\n\n\n\nh[3]\n\n\n\n\n\n\nh[4]\n\n\n\n\nh[4]\n\n\n\n\n\n\nh[5]\n\n\n\n\nh[5]\n\n\n\n\n\n\nh[6]\n\n\n\n\nh[6]\n\n\n\n\n\n\nh[7]\n\n\n\n\nh[7]\n\n\n\n\n\n\nh[8]\n\n\n\n\nh[8]\n\n\n\n\n\n\nh_Z\n\n\n\n\nh_Z\n\n\n\n\n\n\nnw_x\n\n\n\n\nnw_x\n\n\n\n\n\n\nnw_y\n\n\n\n\nnw_y\n\n\n\n\n\n\nphi\n\n\n\n\nphi\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf[0]\n\n\nf[0]\n\n\n\n\nf[0]\n\n\n\n\n\n\nf[1]\n\n\nf[1]\n\n\n\n\nf[1]\n\n\n\n\n\n\nf[2]\n\n\nf[2]\n\n\n\n\nf[2]\n\n\n\n\n\n\nf[3]\n\n\nf[3]\n\n\n\n\nf[3]\n\n\n\n\n\n\nf[4]\n\n\nf[4]\n\n\n\n\nf[4]\n\n\n\n\n\n\nf[5]\n\n\nf[5]\n\n\n\n\nf[5]\n\n\n\n\n\n\nf[6]\n\n\nf[6]\n\n\n\n\nf[6]\n\n\n\n\n\n\nf[7]\n\n\nf[7]\n\n\n\n\nf[7]\n\n\n\n\n\n\nf[8]\n\n\nf[8]\n\n\n\n\nf[8]\n\n\n\n\n\n\nh[0]\n\n\nh[0]\n\n\n\n\nh[0]\n\n\n\n\n\n\nh[1]\n\n\nh[1]\n\n\n\n\nh[1]\n\n\n\n\n\n\nh[2]\n\n\nh[2]\n\n\n\n\nh[2]\n\n\n\n\n\n\nh[3]\n\n\nh[3]\n\n\n\n\nh[3]\n\n\n\n\n\n\nh[4]\n\n\nh[4]\n\n\n\n\nh[4]\n\n\n\n\n\n\nh[5]\n\n\nh[5]\n\n\n\n\nh[5]\n\n\n\n\n\n\nh[6]\n\n\nh[6]\n\n\n\n\nh[6]\n\n\n\n\n\n\nh[7]\n\n\nh[7]\n\n\n\n\nh[7]\n\n\n\n\n\n\nh[8]\n\n\nh[8]\n\n\n\n\nh[8]\n\n\n\n\n\n\nh_Z\n\n\nh_Z\n\n\n\n\nh_Z\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nBaseIteration\n\n\nRun\n\n\nf[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8], h_Z\n\n\nf[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8], h_Z, nw_x, nw_y\n\n\n\n\n\n\nCalcPhi\n\n\nCalcPhi\n\n\nh[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8]\n\n\nphi\n\n\n\n\n\n\nBaseInit\n\n\nInit\n\n\nnone\n\n\nf[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8], h_Z\n\n\n\n\n\n\nCalcWallNormall\n\n\nCalcNormal\n\n\nnone\n\n\nnw_x, nw_y\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIteration, CalcPhi\n\n\n\n\n\n\nInit\n\n\nBaseInit, CalcPhi, CalcWallNormall",
            "title": "D2q9 csf"
        },
        {
            "location": "/models/multiphase/d2q9_csf/#description",
            "text": "d2q9_csf",
            "title": "Description"
        },
        {
            "location": "/models/multiphase/d2q9_csf/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/multiphase/d2q9_csf/#zonal-settings",
            "text": "Name  Comment      Velocity  inlet/outlet/init velocity    Pressure  inlet/outlet/init density    PhaseField  Phase Field marker scalar    WettingAngle  WettingAngle    WallAdhesionDecay  WallAdhesionDecay    BrinkmanHeightInv  BrinkmanHeightInv    PressureLossInObj  Weight of [pressure loss] in objective    OutletFluxInObj  Weight of [pressure loss] in objective    InletFluxInObj  Weight of [pressure loss] in objective",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/multiphase/d2q9_csf/#global-settings",
            "text": "Name  Derived  Comment      PF_Advection_Switch   Parameter to turn on/off advection of phase field - usefull for initialisation    omega  1.0/(3*Viscosity + 0.5)  one over relaxation time    omega_l  1.0/(3*Viscosity_l + 0.5)  one over relaxation time, light phase    Viscosity   viscosity    Viscosity_l   viscosity    IntWidth   Anty-diffusivity coeff    Mobility   Mobility    GravitationX   GravitationX    GravitationY   GravitationY    GravitationX_l   GravitationX_l    GravitationY_l   GravitationY_l    SurfaceTensionDecay   SurfaceTensionDecay    SurfaceTensionRate   SurfaceTensionRate    Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/multiphase/d2q9_csf/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      H_Z  1  H_Z    Rho  kg/m3  Rho    U  m/s  U    Normal  1/m  Normal    PhaseField  1  PhaseField    Curvature  1  Curvature    InterfaceForce  1  InterfaceForce    DEBUG  1  DEBUG",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/multiphase/d2q9_csf/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      PressureLoss  1mPa  pressure loss    OutletFlux  1m2/s  pressure loss    InletFlux  1m2/s  pressure loss    Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/multiphase/d2q9_csf/#node-types",
            "text": "Group  Types      BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, NSymmetry, SSymmetry    COLLISION  BGK, MRT    DESIGNSPACE  DesignSpace    NONE  None    OBJECTIVE  Inlet, Outlet    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/multiphase/d2q9_csf/#solved-fields",
            "text": "Name  Access pattern  Comment      f[0]   f[0]    f[1]   f[1]    f[2]   f[2]    f[3]   f[3]    f[4]   f[4]    f[5]   f[5]    f[6]   f[6]    f[7]   f[7]    f[8]   f[8]    h[0]   h[0]    h[1]   h[1]    h[2]   h[2]    h[3]   h[3]    h[4]   h[4]    h[5]   h[5]    h[6]   h[6]    h[7]   h[7]    h[8]   h[8]    h_Z   h_Z    nw_x   nw_x    nw_y   nw_y    phi   phi",
            "title": "Solved fields"
        },
        {
            "location": "/models/multiphase/d2q9_csf/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment      f[0]  f[0]   f[0]    f[1]  f[1]   f[1]    f[2]  f[2]   f[2]    f[3]  f[3]   f[3]    f[4]  f[4]   f[4]    f[5]  f[5]   f[5]    f[6]  f[6]   f[6]    f[7]  f[7]   f[7]    f[8]  f[8]   f[8]    h[0]  h[0]   h[0]    h[1]  h[1]   h[1]    h[2]  h[2]   h[2]    h[3]  h[3]   h[3]    h[4]  h[4]   h[4]    h[5]  h[5]   h[5]    h[6]  h[6]   h[6]    h[7]  h[7]   h[7]    h[8]  h[8]   h[8]    h_Z  h_Z   h_Z",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/multiphase/d2q9_csf/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      BaseIteration  Run  f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8], h_Z  f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8], h_Z, nw_x, nw_y    CalcPhi  CalcPhi  h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8]  phi    BaseInit  Init  none  f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8], h_Z    CalcWallNormall  CalcNormal  none  nw_x, nw_y",
            "title": "Action stages"
        },
        {
            "location": "/models/multiphase/d2q9_csf/#actions",
            "text": "Name  Stages      Iteration  BaseIteration, CalcPhi    Init  BaseInit, CalcPhi, CalcWallNormall",
            "title": "Actions"
        },
        {
            "location": "/models/multiphase/d2q9_kuper/",
            "text": "Description\n\n\nd2q9_kuper\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nDensity\n\n\nzonal density\n\n\n\n\n\n\nPressure1InObj\n\n\nWeight of [pressure at Obj1] in objective\n\n\n\n\n\n\nPressure2InObj\n\n\nWeight of [pressure at Obj2] in objective\n\n\n\n\n\n\nPressure3InObj\n\n\nWeight of [pressure at Obj3] in objective\n\n\n\n\n\n\nDensity1InObj\n\n\nWeight of [density at Obj1] in objective\n\n\n\n\n\n\nDensity2InObj\n\n\nWeight of [density at Obj2] in objective\n\n\n\n\n\n\nDensity3InObj\n\n\nWeight of [density at Obj3] in objective\n\n\n\n\n\n\nSumUsqrInObj\n\n\nWeight of [Sumo o U**2] in objective\n\n\n\n\n\n\nWallForceXInObj\n\n\nWeight of [force x] in objective\n\n\n\n\n\n\nWallForceYInObj\n\n\nWeight of [force y] in objective\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nomega\n\n\n1.0/(3*nu + 0.5)\n\n\nrelaxation factor\n\n\n\n\n\n\nnu\n\n\n\n\nviscosity\n\n\n\n\n\n\nVelocity\n\n\n\n\ninlet velocity\n\n\n\n\n\n\nTemperature\n\n\n\n\ntemperature of the liquid/gas\n\n\n\n\n\n\nFAcc\n\n\n\n\nMultiplier of potential\n\n\n\n\n\n\nMagic\n\n\n\n\nK\n\n\n\n\n\n\nMagicA\n\n\n\n\nA in force calculation\n\n\n\n\n\n\nMagicF\n\n\n\n\nForce multiplier\n\n\n\n\n\n\nGravitationY\n\n\n\n\nGravitation in the direction of y\n\n\n\n\n\n\nGravitationX\n\n\n\n\nGravitation in the direction of x\n\n\n\n\n\n\nMovingWallVelocity\n\n\n\n\nVelocity of the MovingWall\n\n\n\n\n\n\nWetting\n\n\n\n\nwetting factor\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nRho\n\n\nkg/m3\n\n\nRho\n\n\n\n\n\n\nU\n\n\nm/s\n\n\nU\n\n\n\n\n\n\nP\n\n\nPa\n\n\nP\n\n\n\n\n\n\nF\n\n\nN\n\n\nF\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nPressure1\n\n\n1\n\n\npressure at Obj1\n\n\n\n\n\n\nPressure2\n\n\n1\n\n\npressure at Obj2\n\n\n\n\n\n\nPressure3\n\n\n1\n\n\npressure at Obj3\n\n\n\n\n\n\nDensity1\n\n\n1\n\n\ndensity at Obj1\n\n\n\n\n\n\nDensity2\n\n\n1\n\n\ndensity at Obj2\n\n\n\n\n\n\nDensity3\n\n\n1\n\n\ndensity at Obj3\n\n\n\n\n\n\nSumUsqr\n\n\n1\n\n\nSumo o U**2\n\n\n\n\n\n\nWallForceX\n\n\n1\n\n\nforce x\n\n\n\n\n\n\nWallForceY\n\n\n1\n\n\nforce y\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, NMovingWall, MovingWall, ESymmetry, NSymmetry, SSymmetry\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf0\n\n\n\n\nf0\n\n\n\n\n\n\nf1\n\n\n\n\nf1\n\n\n\n\n\n\nf2\n\n\n\n\nf2\n\n\n\n\n\n\nf3\n\n\n\n\nf3\n\n\n\n\n\n\nf4\n\n\n\n\nf4\n\n\n\n\n\n\nf5\n\n\n\n\nf5\n\n\n\n\n\n\nf6\n\n\n\n\nf6\n\n\n\n\n\n\nf7\n\n\n\n\nf7\n\n\n\n\n\n\nf8\n\n\n\n\nf8\n\n\n\n\n\n\nphi\n\n\n\n\nphi\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf0\n\n\nf0\n\n\n\n\nf0\n\n\n\n\n\n\nf1\n\n\nf1\n\n\n\n\nf1\n\n\n\n\n\n\nf2\n\n\nf2\n\n\n\n\nf2\n\n\n\n\n\n\nf3\n\n\nf3\n\n\n\n\nf3\n\n\n\n\n\n\nf4\n\n\nf4\n\n\n\n\nf4\n\n\n\n\n\n\nf5\n\n\nf5\n\n\n\n\nf5\n\n\n\n\n\n\nf6\n\n\nf6\n\n\n\n\nf6\n\n\n\n\n\n\nf7\n\n\nf7\n\n\n\n\nf7\n\n\n\n\n\n\nf8\n\n\nf8\n\n\n\n\nf8\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nBaseIteration\n\n\nRun\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8\n\n\n\n\n\n\nCalcPhi\n\n\nCalcPhi\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8\n\n\nphi\n\n\n\n\n\n\nBaseInit\n\n\nInit\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIteration, CalcPhi\n\n\n\n\n\n\nInit\n\n\nBaseInit, CalcPhi",
            "title": "D2q9 kuper"
        },
        {
            "location": "/models/multiphase/d2q9_kuper/#description",
            "text": "d2q9_kuper",
            "title": "Description"
        },
        {
            "location": "/models/multiphase/d2q9_kuper/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/multiphase/d2q9_kuper/#zonal-settings",
            "text": "Name  Comment      Density  zonal density    Pressure1InObj  Weight of [pressure at Obj1] in objective    Pressure2InObj  Weight of [pressure at Obj2] in objective    Pressure3InObj  Weight of [pressure at Obj3] in objective    Density1InObj  Weight of [density at Obj1] in objective    Density2InObj  Weight of [density at Obj2] in objective    Density3InObj  Weight of [density at Obj3] in objective    SumUsqrInObj  Weight of [Sumo o U**2] in objective    WallForceXInObj  Weight of [force x] in objective    WallForceYInObj  Weight of [force y] in objective",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/multiphase/d2q9_kuper/#global-settings",
            "text": "Name  Derived  Comment      omega  1.0/(3*nu + 0.5)  relaxation factor    nu   viscosity    Velocity   inlet velocity    Temperature   temperature of the liquid/gas    FAcc   Multiplier of potential    Magic   K    MagicA   A in force calculation    MagicF   Force multiplier    GravitationY   Gravitation in the direction of y    GravitationX   Gravitation in the direction of x    MovingWallVelocity   Velocity of the MovingWall    Wetting   wetting factor    Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/multiphase/d2q9_kuper/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      Rho  kg/m3  Rho    U  m/s  U    P  Pa  P    F  N  F",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/multiphase/d2q9_kuper/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      Pressure1  1  pressure at Obj1    Pressure2  1  pressure at Obj2    Pressure3  1  pressure at Obj3    Density1  1  density at Obj1    Density2  1  density at Obj2    Density3  1  density at Obj3    SumUsqr  1  Sumo o U**2    WallForceX  1  force x    WallForceY  1  force y    Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/multiphase/d2q9_kuper/#node-types",
            "text": "Group  Types      BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, NMovingWall, MovingWall, ESymmetry, NSymmetry, SSymmetry    COLLISION  BGK, MRT    DESIGNSPACE  DesignSpace    NONE  None    OBJECTIVE  Inlet, Outlet    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/multiphase/d2q9_kuper/#solved-fields",
            "text": "Name  Access pattern  Comment      f0   f0    f1   f1    f2   f2    f3   f3    f4   f4    f5   f5    f6   f6    f7   f7    f8   f8    phi   phi",
            "title": "Solved fields"
        },
        {
            "location": "/models/multiphase/d2q9_kuper/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment      f0  f0   f0    f1  f1   f1    f2  f2   f2    f3  f3   f3    f4  f4   f4    f5  f5   f5    f6  f6   f6    f7  f7   f7    f8  f8   f8",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/multiphase/d2q9_kuper/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      BaseIteration  Run  f0, f1, f2, f3, f4, f5, f6, f7, f8  f0, f1, f2, f3, f4, f5, f6, f7, f8    CalcPhi  CalcPhi  f0, f1, f2, f3, f4, f5, f6, f7, f8  phi    BaseInit  Init  f0, f1, f2, f3, f4, f5, f6, f7, f8  f0, f1, f2, f3, f4, f5, f6, f7, f8",
            "title": "Action stages"
        },
        {
            "location": "/models/multiphase/d2q9_kuper/#actions",
            "text": "Name  Stages      Iteration  BaseIteration, CalcPhi    Init  BaseInit, CalcPhi",
            "title": "Actions"
        },
        {
            "location": "/models/multiphase/d2q9_pf/",
            "text": "Description\n\n\nd2q9_pf\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nPhaseField\n\n\nPhase Field marker scalar\n\n\n\n\n\n\nVelocityX\n\n\ninlet/outlet/init velocity\n\n\n\n\n\n\nVelocityY\n\n\ninlet/outlet/init velocity\n\n\n\n\n\n\nPressure\n\n\ninlet/outlet/init density\n\n\n\n\n\n\nPressureLossInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\nOutletFluxInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\nInletFluxInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nIntWidth\n\n\n\n\nInterface width\n\n\n\n\n\n\nMobility\n\n\n\n\nMobility\n\n\n\n\n\n\nOverwriteVelocityField\n\n\n\n\nOverwriteVelocityField\n\n\n\n\n\n\nRelaxationRate\n\n\n1.0/(3*Viscosity + 0.5)\n\n\none over relaxation time\n\n\n\n\n\n\nViscosity\n\n\n\n\nviscosity\n\n\n\n\n\n\nGravitationX\n\n\n\n\nGravitationX\n\n\n\n\n\n\nGravitationY\n\n\n\n\nGravitationY\n\n\n\n\n\n\nS2\n\n\n1-RelaxationRate\n\n\nMRT Sx\n\n\n\n\n\n\nS3\n\n\n\n\nMRT Sx\n\n\n\n\n\n\nS4\n\n\n\n\nMRT Sx\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nNormal\n\n\n1/m\n\n\nNormal\n\n\n\n\n\n\nPhaseField\n\n\n1\n\n\nPhaseField\n\n\n\n\n\n\nRho\n\n\nkg/m3\n\n\nRho\n\n\n\n\n\n\nU\n\n\nm/s\n\n\nU\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nPressureLoss\n\n\n1mPa\n\n\npressure loss\n\n\n\n\n\n\nOutletFlux\n\n\n1m2/s\n\n\npressure loss\n\n\n\n\n\n\nInletFlux\n\n\n1m2/s\n\n\npressure loss\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, NPressure, SPressure\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf[0]\n\n\n\n\nf[0]\n\n\n\n\n\n\nf[1]\n\n\n\n\nf[1]\n\n\n\n\n\n\nf[2]\n\n\n\n\nf[2]\n\n\n\n\n\n\nf[3]\n\n\n\n\nf[3]\n\n\n\n\n\n\nf[4]\n\n\n\n\nf[4]\n\n\n\n\n\n\nf[5]\n\n\n\n\nf[5]\n\n\n\n\n\n\nf[6]\n\n\n\n\nf[6]\n\n\n\n\n\n\nf[7]\n\n\n\n\nf[7]\n\n\n\n\n\n\nf[8]\n\n\n\n\nf[8]\n\n\n\n\n\n\nh[0]\n\n\n\n\nh[0]\n\n\n\n\n\n\nh[1]\n\n\n\n\nh[1]\n\n\n\n\n\n\nh[2]\n\n\n\n\nh[2]\n\n\n\n\n\n\nh[3]\n\n\n\n\nh[3]\n\n\n\n\n\n\nh[4]\n\n\n\n\nh[4]\n\n\n\n\n\n\nh[5]\n\n\n\n\nh[5]\n\n\n\n\n\n\nh[6]\n\n\n\n\nh[6]\n\n\n\n\n\n\nh[7]\n\n\n\n\nh[7]\n\n\n\n\n\n\nh[8]\n\n\n\n\nh[8]\n\n\n\n\n\n\nBC[0]\n\n\n\n\nBC[0]\n\n\n\n\n\n\nBC[1]\n\n\n\n\nBC[1]\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf[0]\n\n\nf[0]\n\n\n\n\nf[0]\n\n\n\n\n\n\nf[1]\n\n\nf[1]\n\n\n\n\nf[1]\n\n\n\n\n\n\nf[2]\n\n\nf[2]\n\n\n\n\nf[2]\n\n\n\n\n\n\nf[3]\n\n\nf[3]\n\n\n\n\nf[3]\n\n\n\n\n\n\nf[4]\n\n\nf[4]\n\n\n\n\nf[4]\n\n\n\n\n\n\nf[5]\n\n\nf[5]\n\n\n\n\nf[5]\n\n\n\n\n\n\nf[6]\n\n\nf[6]\n\n\n\n\nf[6]\n\n\n\n\n\n\nf[7]\n\n\nf[7]\n\n\n\n\nf[7]\n\n\n\n\n\n\nf[8]\n\n\nf[8]\n\n\n\n\nf[8]\n\n\n\n\n\n\nh[0]\n\n\nh[0]\n\n\n\n\nh[0]\n\n\n\n\n\n\nh[1]\n\n\nh[1]\n\n\n\n\nh[1]\n\n\n\n\n\n\nh[2]\n\n\nh[2]\n\n\n\n\nh[2]\n\n\n\n\n\n\nh[3]\n\n\nh[3]\n\n\n\n\nh[3]\n\n\n\n\n\n\nh[4]\n\n\nh[4]\n\n\n\n\nh[4]\n\n\n\n\n\n\nh[5]\n\n\nh[5]\n\n\n\n\nh[5]\n\n\n\n\n\n\nh[6]\n\n\nh[6]\n\n\n\n\nh[6]\n\n\n\n\n\n\nh[7]\n\n\nh[7]\n\n\n\n\nh[7]\n\n\n\n\n\n\nh[8]\n\n\nh[8]\n\n\n\n\nh[8]\n\n\n\n\n\n\nBC[0]\n\n\nBC[0]\n\n\n\n\nBC[0]\n\n\n\n\n\n\nBC[1]\n\n\nBC[1]\n\n\n\n\nBC[1]\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nBaseIteration\n\n\nRun\n\n\nf[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8], BC[0], BC[1]\n\n\nf[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8], BC[0], BC[1]\n\n\n\n\n\n\nBaseInit\n\n\nInit\n\n\nnone\n\n\nf[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8], BC[0], BC[1]\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIteration\n\n\n\n\n\n\nInit\n\n\nBaseInit",
            "title": "D2q9 pf"
        },
        {
            "location": "/models/multiphase/d2q9_pf/#description",
            "text": "d2q9_pf",
            "title": "Description"
        },
        {
            "location": "/models/multiphase/d2q9_pf/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/multiphase/d2q9_pf/#zonal-settings",
            "text": "Name  Comment      PhaseField  Phase Field marker scalar    VelocityX  inlet/outlet/init velocity    VelocityY  inlet/outlet/init velocity    Pressure  inlet/outlet/init density    PressureLossInObj  Weight of [pressure loss] in objective    OutletFluxInObj  Weight of [pressure loss] in objective    InletFluxInObj  Weight of [pressure loss] in objective",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/multiphase/d2q9_pf/#global-settings",
            "text": "Name  Derived  Comment      IntWidth   Interface width    Mobility   Mobility    OverwriteVelocityField   OverwriteVelocityField    RelaxationRate  1.0/(3*Viscosity + 0.5)  one over relaxation time    Viscosity   viscosity    GravitationX   GravitationX    GravitationY   GravitationY    S2  1-RelaxationRate  MRT Sx    S3   MRT Sx    S4   MRT Sx    Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/multiphase/d2q9_pf/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      Normal  1/m  Normal    PhaseField  1  PhaseField    Rho  kg/m3  Rho    U  m/s  U",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/multiphase/d2q9_pf/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      PressureLoss  1mPa  pressure loss    OutletFlux  1m2/s  pressure loss    InletFlux  1m2/s  pressure loss    Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/multiphase/d2q9_pf/#node-types",
            "text": "Group  Types      BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, NPressure, SPressure    COLLISION  BGK, MRT    DESIGNSPACE  DesignSpace    NONE  None    OBJECTIVE  Inlet, Outlet    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/multiphase/d2q9_pf/#solved-fields",
            "text": "Name  Access pattern  Comment      f[0]   f[0]    f[1]   f[1]    f[2]   f[2]    f[3]   f[3]    f[4]   f[4]    f[5]   f[5]    f[6]   f[6]    f[7]   f[7]    f[8]   f[8]    h[0]   h[0]    h[1]   h[1]    h[2]   h[2]    h[3]   h[3]    h[4]   h[4]    h[5]   h[5]    h[6]   h[6]    h[7]   h[7]    h[8]   h[8]    BC[0]   BC[0]    BC[1]   BC[1]",
            "title": "Solved fields"
        },
        {
            "location": "/models/multiphase/d2q9_pf/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment      f[0]  f[0]   f[0]    f[1]  f[1]   f[1]    f[2]  f[2]   f[2]    f[3]  f[3]   f[3]    f[4]  f[4]   f[4]    f[5]  f[5]   f[5]    f[6]  f[6]   f[6]    f[7]  f[7]   f[7]    f[8]  f[8]   f[8]    h[0]  h[0]   h[0]    h[1]  h[1]   h[1]    h[2]  h[2]   h[2]    h[3]  h[3]   h[3]    h[4]  h[4]   h[4]    h[5]  h[5]   h[5]    h[6]  h[6]   h[6]    h[7]  h[7]   h[7]    h[8]  h[8]   h[8]    BC[0]  BC[0]   BC[0]    BC[1]  BC[1]   BC[1]",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/multiphase/d2q9_pf/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      BaseIteration  Run  f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8], BC[0], BC[1]  f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8], BC[0], BC[1]    BaseInit  Init  none  f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8], BC[0], BC[1]",
            "title": "Action stages"
        },
        {
            "location": "/models/multiphase/d2q9_pf/#actions",
            "text": "Name  Stages      Iteration  BaseIteration    Init  BaseInit",
            "title": "Actions"
        },
        {
            "location": "/models/multiphase/d2q9_pf_pressureEvolution/",
            "text": "Description\n\n\nd2q9_pf_pressureEvolution\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nPhaseField\n\n\nInitial PhaseField distribution\n\n\n\n\n\n\nVelocityX\n\n\ninlet/outlet/init velocity\n\n\n\n\n\n\nVelocityY\n\n\ninlet/outlet/init velocity\n\n\n\n\n\n\nPressure\n\n\ninlet/outlet/init density\n\n\n\n\n\n\nPressureLossInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\nOutletFluxInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\nInletFluxInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\nTotalDensityInObj\n\n\nWeight of [Mass conservation check] in objective\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nDensity_h\n\n\n\n\nHigh density\n\n\n\n\n\n\nDensity_l\n\n\n\n\nLow  density\n\n\n\n\n\n\nPhaseField_h\n\n\n\n\nPhaseField in Liquid\n\n\n\n\n\n\nPhaseField_l\n\n\n\n\nPhaseField gas\n\n\n\n\n\n\nW\n\n\n\n\nAnti-diffusivity coeff\n\n\n\n\n\n\nM\n\n\n\n\nMobility\n\n\n\n\n\n\nsigma\n\n\n\n\nsurface tension\n\n\n\n\n\n\nomega_l\n\n\n1.0/(3*Viscosity_l)\n\n\none over relaxation time (low density fluid)\n\n\n\n\n\n\nomega_h\n\n\n1.0/(3*Viscosity_h)\n\n\none over relaxation time (high density fluid)\n\n\n\n\n\n\nViscosity_l\n\n\n\n\nkinematic viscosity\n\n\n\n\n\n\nViscosity_h\n\n\n\n\nkinematic viscosity\n\n\n\n\n\n\nGravitationX\n\n\n\n\napplied (rho)*GravitationX\n\n\n\n\n\n\nGravitationY\n\n\n\n\napplied (rho)*GravitationY\n\n\n\n\n\n\nBuoyancyX\n\n\n\n\napplied (rho-rho_h)*BuoyancyX\n\n\n\n\n\n\nBuoyancyY\n\n\n\n\napplied (rho-rho_h)*BuoyancyY\n\n\n\n\n\n\nGmatchedX\n\n\n\n\napplied (1-phi)*GmatchedX\n\n\n\n\n\n\nGmatchedY\n\n\n\n\napplied (1-phi)*GmatchedY\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nRho\n\n\nkg/m3\n\n\nRho\n\n\n\n\n\n\nPhaseField\n\n\n1\n\n\nPhaseField\n\n\n\n\n\n\nU\n\n\nm/s\n\n\nU\n\n\n\n\n\n\nP\n\n\nPa\n\n\nP\n\n\n\n\n\n\nMu\n\n\n1\n\n\nMu\n\n\n\n\n\n\nNormal\n\n\n1/m\n\n\nNormal\n\n\n\n\n\n\nInterfaceForce\n\n\nN\n\n\nInterfaceForce\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nPressureLoss\n\n\n1mPa\n\n\npressure loss\n\n\n\n\n\n\nOutletFlux\n\n\n1m2/s\n\n\npressure loss\n\n\n\n\n\n\nInletFlux\n\n\n1m2/s\n\n\npressure loss\n\n\n\n\n\n\nTotalDensity\n\n\n1kg/m3\n\n\nMass conservation check\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf[0]\n\n\n\n\nf[0]\n\n\n\n\n\n\nf[1]\n\n\n\n\nf[1]\n\n\n\n\n\n\nf[2]\n\n\n\n\nf[2]\n\n\n\n\n\n\nf[3]\n\n\n\n\nf[3]\n\n\n\n\n\n\nf[4]\n\n\n\n\nf[4]\n\n\n\n\n\n\nf[5]\n\n\n\n\nf[5]\n\n\n\n\n\n\nf[6]\n\n\n\n\nf[6]\n\n\n\n\n\n\nf[7]\n\n\n\n\nf[7]\n\n\n\n\n\n\nf[8]\n\n\n\n\nf[8]\n\n\n\n\n\n\nh[0]\n\n\n\n\nh[0]\n\n\n\n\n\n\nh[1]\n\n\n\n\nh[1]\n\n\n\n\n\n\nh[2]\n\n\n\n\nh[2]\n\n\n\n\n\n\nh[3]\n\n\n\n\nh[3]\n\n\n\n\n\n\nh[4]\n\n\n\n\nh[4]\n\n\n\n\n\n\nh[5]\n\n\n\n\nh[5]\n\n\n\n\n\n\nh[6]\n\n\n\n\nh[6]\n\n\n\n\n\n\nh[7]\n\n\n\n\nh[7]\n\n\n\n\n\n\nh[8]\n\n\n\n\nh[8]\n\n\n\n\n\n\nPhaseF\n\n\n\n\nPhaseF\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf[0]\n\n\nf[0]\n\n\n\n\nf[0]\n\n\n\n\n\n\nf[1]\n\n\nf[1]\n\n\n\n\nf[1]\n\n\n\n\n\n\nf[2]\n\n\nf[2]\n\n\n\n\nf[2]\n\n\n\n\n\n\nf[3]\n\n\nf[3]\n\n\n\n\nf[3]\n\n\n\n\n\n\nf[4]\n\n\nf[4]\n\n\n\n\nf[4]\n\n\n\n\n\n\nf[5]\n\n\nf[5]\n\n\n\n\nf[5]\n\n\n\n\n\n\nf[6]\n\n\nf[6]\n\n\n\n\nf[6]\n\n\n\n\n\n\nf[7]\n\n\nf[7]\n\n\n\n\nf[7]\n\n\n\n\n\n\nf[8]\n\n\nf[8]\n\n\n\n\nf[8]\n\n\n\n\n\n\nh[0]\n\n\nh[0]\n\n\n\n\nh[0]\n\n\n\n\n\n\nh[1]\n\n\nh[1]\n\n\n\n\nh[1]\n\n\n\n\n\n\nh[2]\n\n\nh[2]\n\n\n\n\nh[2]\n\n\n\n\n\n\nh[3]\n\n\nh[3]\n\n\n\n\nh[3]\n\n\n\n\n\n\nh[4]\n\n\nh[4]\n\n\n\n\nh[4]\n\n\n\n\n\n\nh[5]\n\n\nh[5]\n\n\n\n\nh[5]\n\n\n\n\n\n\nh[6]\n\n\nh[6]\n\n\n\n\nh[6]\n\n\n\n\n\n\nh[7]\n\n\nh[7]\n\n\n\n\nh[7]\n\n\n\n\n\n\nh[8]\n\n\nh[8]\n\n\n\n\nh[8]\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nPhaseInit\n\n\nInit\n\n\nnone\n\n\nPhaseF\n\n\n\n\n\n\nBaseInit\n\n\nInit_distributions\n\n\nnone\n\n\nf[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8]\n\n\n\n\n\n\ncalcPhase\n\n\ncalcPhaseF\n\n\nh[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8]\n\n\nPhaseF\n\n\n\n\n\n\nBaseIter\n\n\nRun\n\n\nf[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8]\n\n\nf[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8]\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIter, calcPhase\n\n\n\n\n\n\nInit\n\n\nPhaseInit, BaseInit, calcPhase",
            "title": "d2q9 pf pressureEvolution"
        },
        {
            "location": "/models/multiphase/d2q9_pf_pressureEvolution/#description",
            "text": "d2q9_pf_pressureEvolution",
            "title": "Description"
        },
        {
            "location": "/models/multiphase/d2q9_pf_pressureEvolution/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/multiphase/d2q9_pf_pressureEvolution/#zonal-settings",
            "text": "Name  Comment      PhaseField  Initial PhaseField distribution    VelocityX  inlet/outlet/init velocity    VelocityY  inlet/outlet/init velocity    Pressure  inlet/outlet/init density    PressureLossInObj  Weight of [pressure loss] in objective    OutletFluxInObj  Weight of [pressure loss] in objective    InletFluxInObj  Weight of [pressure loss] in objective    TotalDensityInObj  Weight of [Mass conservation check] in objective",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/multiphase/d2q9_pf_pressureEvolution/#global-settings",
            "text": "Name  Derived  Comment      Density_h   High density    Density_l   Low  density    PhaseField_h   PhaseField in Liquid    PhaseField_l   PhaseField gas    W   Anti-diffusivity coeff    M   Mobility    sigma   surface tension    omega_l  1.0/(3*Viscosity_l)  one over relaxation time (low density fluid)    omega_h  1.0/(3*Viscosity_h)  one over relaxation time (high density fluid)    Viscosity_l   kinematic viscosity    Viscosity_h   kinematic viscosity    GravitationX   applied (rho)*GravitationX    GravitationY   applied (rho)*GravitationY    BuoyancyX   applied (rho-rho_h)*BuoyancyX    BuoyancyY   applied (rho-rho_h)*BuoyancyY    GmatchedX   applied (1-phi)*GmatchedX    GmatchedY   applied (1-phi)*GmatchedY    Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/multiphase/d2q9_pf_pressureEvolution/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      Rho  kg/m3  Rho    PhaseField  1  PhaseField    U  m/s  U    P  Pa  P    Mu  1  Mu    Normal  1/m  Normal    InterfaceForce  N  InterfaceForce",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/multiphase/d2q9_pf_pressureEvolution/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      PressureLoss  1mPa  pressure loss    OutletFlux  1m2/s  pressure loss    InletFlux  1m2/s  pressure loss    TotalDensity  1kg/m3  Mass conservation check    Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/multiphase/d2q9_pf_pressureEvolution/#node-types",
            "text": "Group  Types      BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity    COLLISION  BGK, MRT    DESIGNSPACE  DesignSpace    NONE  None    OBJECTIVE  Inlet, Outlet    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/multiphase/d2q9_pf_pressureEvolution/#solved-fields",
            "text": "Name  Access pattern  Comment      f[0]   f[0]    f[1]   f[1]    f[2]   f[2]    f[3]   f[3]    f[4]   f[4]    f[5]   f[5]    f[6]   f[6]    f[7]   f[7]    f[8]   f[8]    h[0]   h[0]    h[1]   h[1]    h[2]   h[2]    h[3]   h[3]    h[4]   h[4]    h[5]   h[5]    h[6]   h[6]    h[7]   h[7]    h[8]   h[8]    PhaseF   PhaseF",
            "title": "Solved fields"
        },
        {
            "location": "/models/multiphase/d2q9_pf_pressureEvolution/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment      f[0]  f[0]   f[0]    f[1]  f[1]   f[1]    f[2]  f[2]   f[2]    f[3]  f[3]   f[3]    f[4]  f[4]   f[4]    f[5]  f[5]   f[5]    f[6]  f[6]   f[6]    f[7]  f[7]   f[7]    f[8]  f[8]   f[8]    h[0]  h[0]   h[0]    h[1]  h[1]   h[1]    h[2]  h[2]   h[2]    h[3]  h[3]   h[3]    h[4]  h[4]   h[4]    h[5]  h[5]   h[5]    h[6]  h[6]   h[6]    h[7]  h[7]   h[7]    h[8]  h[8]   h[8]",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/multiphase/d2q9_pf_pressureEvolution/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      PhaseInit  Init  none  PhaseF    BaseInit  Init_distributions  none  f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8]    calcPhase  calcPhaseF  h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8]  PhaseF    BaseIter  Run  f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8]  f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8]",
            "title": "Action stages"
        },
        {
            "location": "/models/multiphase/d2q9_pf_pressureEvolution/#actions",
            "text": "Name  Stages      Iteration  BaseIter, calcPhase    Init  PhaseInit, BaseInit, calcPhase",
            "title": "Actions"
        },
        {
            "location": "/models/multiphase/d3q19_kuper/",
            "text": "Description\n\n\nd3q19_kuper\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nDensity\n\n\nzonal density\n\n\n\n\n\n\nMovingWallForceXInObj\n\n\nWeight of [force x] in objective\n\n\n\n\n\n\nMovingWallForceYInObj\n\n\nWeight of [force y] in objective\n\n\n\n\n\n\nMovingWallForceZInObj\n\n\nWeight of [force Z] in objective\n\n\n\n\n\n\nPressure1InObj\n\n\nWeight of [pressure at Obj1] in objective\n\n\n\n\n\n\nPressure2InObj\n\n\nWeight of [pressure at Obj2] in objective\n\n\n\n\n\n\nPressure3InObj\n\n\nWeight of [pressure at Obj3] in objective\n\n\n\n\n\n\nDensity1InObj\n\n\nWeight of [density at Obj1] in objective\n\n\n\n\n\n\nDensity2InObj\n\n\nWeight of [density at Obj2] in objective\n\n\n\n\n\n\nDensity3InObj\n\n\nWeight of [density at Obj3] in objective\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nomega\n\n\n1.0/(3*nu + 0.5)\n\n\none over relaxation time\n\n\n\n\n\n\nnu\n\n\n\n\nviscosity\n\n\n\n\n\n\nInletVelocity\n\n\n\n\ninlet velocity\n\n\n\n\n\n\nTemperature\n\n\n\n\ntemperature of the liquid/gas\n\n\n\n\n\n\nFAcc\n\n\n\n\nMultiplier of potential\n\n\n\n\n\n\nBoundaryVelocity_x\n\n\n\n\nboundary velocity\n\n\n\n\n\n\nBoundaryVelocity_y\n\n\n\n\nboundary velocity\n\n\n\n\n\n\nBoundaryVelocity_z\n\n\n\n\nboundary velocity\n\n\n\n\n\n\nBoundary_rho\n\n\n\n\nboundary velocity\n\n\n\n\n\n\nMagic\n\n\n\n\nK\n\n\n\n\n\n\nMagicA\n\n\n\n\nA in force calculation\n\n\n\n\n\n\nGravitationY\n\n\n\n\nGravitation in the direction of y\n\n\n\n\n\n\nGravitationX\n\n\n\n\nGravitation in the direction of x\n\n\n\n\n\n\nGravitationZ\n\n\n\n\nGravitation in the direction of x\n\n\n\n\n\n\nMovingWallVelocity\n\n\n\n\nVelocity of the MovingWall\n\n\n\n\n\n\nWetting\n\n\n\n\nwetting factor\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nRho\n\n\nkg/m3\n\n\nRho\n\n\n\n\n\n\nU\n\n\nm/s\n\n\nU\n\n\n\n\n\n\nP\n\n\nPa\n\n\nP\n\n\n\n\n\n\nPhi\n\n\n1\n\n\nPhi\n\n\n\n\n\n\nF\n\n\nN\n\n\nF\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nMovingWallForceX\n\n\n1\n\n\nforce x\n\n\n\n\n\n\nMovingWallForceY\n\n\n1\n\n\nforce y\n\n\n\n\n\n\nMovingWallForceZ\n\n\n1\n\n\nforce Z\n\n\n\n\n\n\nPressure1\n\n\n1\n\n\npressure at Obj1\n\n\n\n\n\n\nPressure2\n\n\n1\n\n\npressure at Obj2\n\n\n\n\n\n\nPressure3\n\n\n1\n\n\npressure at Obj3\n\n\n\n\n\n\nDensity1\n\n\n1\n\n\ndensity at Obj1\n\n\n\n\n\n\nDensity2\n\n\n1\n\n\ndensity at Obj2\n\n\n\n\n\n\nDensity3\n\n\n1\n\n\ndensity at Obj3\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf0\n\n\n\n\ndensity F 0\n\n\n\n\n\n\nf1\n\n\n\n\ndensity F 1\n\n\n\n\n\n\nf2\n\n\n\n\ndensity F 2\n\n\n\n\n\n\nf3\n\n\n\n\ndensity F 3\n\n\n\n\n\n\nf4\n\n\n\n\ndensity F 4\n\n\n\n\n\n\nf5\n\n\n\n\ndensity F 5\n\n\n\n\n\n\nf6\n\n\n\n\ndensity F 6\n\n\n\n\n\n\nf7\n\n\n\n\ndensity F 7\n\n\n\n\n\n\nf8\n\n\n\n\ndensity F 8\n\n\n\n\n\n\nf9\n\n\n\n\ndensity F 9\n\n\n\n\n\n\nf10\n\n\n\n\ndensity F 10\n\n\n\n\n\n\nf11\n\n\n\n\ndensity F 11\n\n\n\n\n\n\nf12\n\n\n\n\ndensity F 12\n\n\n\n\n\n\nf13\n\n\n\n\ndensity F 13\n\n\n\n\n\n\nf14\n\n\n\n\ndensity F 14\n\n\n\n\n\n\nf15\n\n\n\n\ndensity F 15\n\n\n\n\n\n\nf16\n\n\n\n\ndensity F 16\n\n\n\n\n\n\nf17\n\n\n\n\ndensity F 17\n\n\n\n\n\n\nf18\n\n\n\n\ndensity F 18\n\n\n\n\n\n\nphi\n\n\n\n\nphi\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf0\n\n\nf0\n\n\n\n\ndensity F 0\n\n\n\n\n\n\nf1\n\n\nf1\n\n\n\n\ndensity F 1\n\n\n\n\n\n\nf2\n\n\nf2\n\n\n\n\ndensity F 2\n\n\n\n\n\n\nf3\n\n\nf3\n\n\n\n\ndensity F 3\n\n\n\n\n\n\nf4\n\n\nf4\n\n\n\n\ndensity F 4\n\n\n\n\n\n\nf5\n\n\nf5\n\n\n\n\ndensity F 5\n\n\n\n\n\n\nf6\n\n\nf6\n\n\n\n\ndensity F 6\n\n\n\n\n\n\nf7\n\n\nf7\n\n\n\n\ndensity F 7\n\n\n\n\n\n\nf8\n\n\nf8\n\n\n\n\ndensity F 8\n\n\n\n\n\n\nf9\n\n\nf9\n\n\n\n\ndensity F 9\n\n\n\n\n\n\nf10\n\n\nf10\n\n\n\n\ndensity F 10\n\n\n\n\n\n\nf11\n\n\nf11\n\n\n\n\ndensity F 11\n\n\n\n\n\n\nf12\n\n\nf12\n\n\n\n\ndensity F 12\n\n\n\n\n\n\nf13\n\n\nf13\n\n\n\n\ndensity F 13\n\n\n\n\n\n\nf14\n\n\nf14\n\n\n\n\ndensity F 14\n\n\n\n\n\n\nf15\n\n\nf15\n\n\n\n\ndensity F 15\n\n\n\n\n\n\nf16\n\n\nf16\n\n\n\n\ndensity F 16\n\n\n\n\n\n\nf17\n\n\nf17\n\n\n\n\ndensity F 17\n\n\n\n\n\n\nf18\n\n\nf18\n\n\n\n\ndensity F 18\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nBaseIteration\n\n\nRun\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18\n\n\n\n\n\n\nCalcPhi\n\n\nCalcPhi\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18\n\n\nphi\n\n\n\n\n\n\nBaseInit\n\n\nInit\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIteration, CalcPhi\n\n\n\n\n\n\nInit\n\n\nBaseInit, CalcPhi",
            "title": "D3q19 kuper"
        },
        {
            "location": "/models/multiphase/d3q19_kuper/#description",
            "text": "d3q19_kuper",
            "title": "Description"
        },
        {
            "location": "/models/multiphase/d3q19_kuper/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/multiphase/d3q19_kuper/#zonal-settings",
            "text": "Name  Comment      Density  zonal density    MovingWallForceXInObj  Weight of [force x] in objective    MovingWallForceYInObj  Weight of [force y] in objective    MovingWallForceZInObj  Weight of [force Z] in objective    Pressure1InObj  Weight of [pressure at Obj1] in objective    Pressure2InObj  Weight of [pressure at Obj2] in objective    Pressure3InObj  Weight of [pressure at Obj3] in objective    Density1InObj  Weight of [density at Obj1] in objective    Density2InObj  Weight of [density at Obj2] in objective    Density3InObj  Weight of [density at Obj3] in objective",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/multiphase/d3q19_kuper/#global-settings",
            "text": "Name  Derived  Comment      omega  1.0/(3*nu + 0.5)  one over relaxation time    nu   viscosity    InletVelocity   inlet velocity    Temperature   temperature of the liquid/gas    FAcc   Multiplier of potential    BoundaryVelocity_x   boundary velocity    BoundaryVelocity_y   boundary velocity    BoundaryVelocity_z   boundary velocity    Boundary_rho   boundary velocity    Magic   K    MagicA   A in force calculation    GravitationY   Gravitation in the direction of y    GravitationX   Gravitation in the direction of x    GravitationZ   Gravitation in the direction of x    MovingWallVelocity   Velocity of the MovingWall    Wetting   wetting factor    Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/multiphase/d3q19_kuper/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      Rho  kg/m3  Rho    U  m/s  U    P  Pa  P    Phi  1  Phi    F  N  F",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/multiphase/d3q19_kuper/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      MovingWallForceX  1  force x    MovingWallForceY  1  force y    MovingWallForceZ  1  force Z    Pressure1  1  pressure at Obj1    Pressure2  1  pressure at Obj2    Pressure3  1  pressure at Obj3    Density1  1  density at Obj1    Density2  1  density at Obj2    Density3  1  density at Obj3    Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/multiphase/d3q19_kuper/#node-types",
            "text": "Group  Types      BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity    COLLISION  BGK, MRT    DESIGNSPACE  DesignSpace    NONE  None    OBJECTIVE  Inlet, Outlet    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/multiphase/d3q19_kuper/#solved-fields",
            "text": "Name  Access pattern  Comment      f0   density F 0    f1   density F 1    f2   density F 2    f3   density F 3    f4   density F 4    f5   density F 5    f6   density F 6    f7   density F 7    f8   density F 8    f9   density F 9    f10   density F 10    f11   density F 11    f12   density F 12    f13   density F 13    f14   density F 14    f15   density F 15    f16   density F 16    f17   density F 17    f18   density F 18    phi   phi",
            "title": "Solved fields"
        },
        {
            "location": "/models/multiphase/d3q19_kuper/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment      f0  f0   density F 0    f1  f1   density F 1    f2  f2   density F 2    f3  f3   density F 3    f4  f4   density F 4    f5  f5   density F 5    f6  f6   density F 6    f7  f7   density F 7    f8  f8   density F 8    f9  f9   density F 9    f10  f10   density F 10    f11  f11   density F 11    f12  f12   density F 12    f13  f13   density F 13    f14  f14   density F 14    f15  f15   density F 15    f16  f16   density F 16    f17  f17   density F 17    f18  f18   density F 18",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/multiphase/d3q19_kuper/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      BaseIteration  Run  f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18  f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18    CalcPhi  CalcPhi  f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18  phi    BaseInit  Init  f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18  f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18",
            "title": "Action stages"
        },
        {
            "location": "/models/multiphase/d3q19_kuper/#actions",
            "text": "Name  Stages      Iteration  BaseIteration, CalcPhi    Init  BaseInit, CalcPhi",
            "title": "Actions"
        },
        {
            "location": "/models/multiphase/d2q9_pf_velocity/d2q9_pf_velocity/",
            "text": "Description\n\n\nd2q9_pf_velocity\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nPhaseField\n\n\nInitial PhaseField distribution\n\n\n\n\n\n\nVelocityX\n\n\ninlet/outlet/init velocity\n\n\n\n\n\n\nVelocityY\n\n\ninlet/outlet/init velocity\n\n\n\n\n\n\nPressure\n\n\ninlet/outlet/init density\n\n\n\n\n\n\nPressureLossInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\nOutletFluxInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\nInletFluxInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\nTotalDensityInObj\n\n\nWeight of [Mass conservation check] in objective\n\n\n\n\n\n\nRTIBubbleInObj\n\n\nWeight of [Bubble Tracker] in objective\n\n\n\n\n\n\nRTISpikeInObj\n\n\nWeight of [Spike Tracker] in objective\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nPeriod\n\n\n\n\nNumber of cells per cos wave\n\n\n\n\n\n\nPerturbation\n\n\n\n\nSize of wave perturbation, Perturbation Period\n\n\n\n\n\n\nMidPoint\n\n\n\n\nheight of RTI centerline\n\n\n\n\n\n\nRadius\n\n\n\n\nRadius of diffuse interface circle\n\n\n\n\n\n\nCenterX\n\n\n\n\nCircle center x-coord\n\n\n\n\n\n\nCenterY\n\n\n\n\nCircle Center y-coord\n\n\n\n\n\n\nBubbleType\n\n\n\n\nDrop/bubble\n\n\n\n\n\n\nDensity_h\n\n\n\n\nHigh density\n\n\n\n\n\n\nDensity_l\n\n\n\n\nLow  density\n\n\n\n\n\n\nPhaseField_h\n\n\n\n\nPhaseField in Liquid\n\n\n\n\n\n\nPhaseField_l\n\n\n\n\nPhaseField gas\n\n\n\n\n\n\nW\n\n\n\n\nAnti-diffusivity coeff\n\n\n\n\n\n\nomega_phi\n\n\n1.0/(3*M+0.5)\n\n\none over relaxation time (phase field)\n\n\n\n\n\n\nM\n\n\n\n\nMobility\n\n\n\n\n\n\nsigma\n\n\n\n\nsurface tension\n\n\n\n\n\n\ntau_l\n\n\n(3*Viscosity_l)\n\n\nrelaxation time (low density fluid)\n\n\n\n\n\n\ntau_h\n\n\n(3*Viscosity_h)\n\n\nrelaxation time (high density fluid)\n\n\n\n\n\n\nViscosity_l\n\n\n\n\nkinematic viscosity\n\n\n\n\n\n\nViscosity_h\n\n\n\n\nkinematic viscosity\n\n\n\n\n\n\nGravitationX\n\n\n\n\napplied (rho)*GravitationX\n\n\n\n\n\n\nGravitationY\n\n\n\n\napplied (rho)*GravitationY\n\n\n\n\n\n\nBuoyancyX\n\n\n\n\napplied (rho-rho_h)*BuoyancyX\n\n\n\n\n\n\nBuoyancyY\n\n\n\n\napplied (rho-rho_h)*BuoyancyY\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nRho\n\n\nkg/m3\n\n\nRho\n\n\n\n\n\n\nPhaseField\n\n\n1\n\n\nPhaseField\n\n\n\n\n\n\nU\n\n\nm/s\n\n\nU\n\n\n\n\n\n\nP\n\n\nPa\n\n\nP\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nPressureLoss\n\n\n1mPa\n\n\npressure loss\n\n\n\n\n\n\nOutletFlux\n\n\n1m2/s\n\n\npressure loss\n\n\n\n\n\n\nInletFlux\n\n\n1m2/s\n\n\npressure loss\n\n\n\n\n\n\nTotalDensity\n\n\n1kg/m3\n\n\nMass conservation check\n\n\n\n\n\n\nRTIBubble\n\n\n1\n\n\nBubble Tracker\n\n\n\n\n\n\nRTISpike\n\n\n1\n\n\nSpike Tracker\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nADDITIONALS\n\n\nSpikeTrack, BubbleTrack\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, MovingWall_N, MovingWall_S\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\ng[0]\n\n\n\n\ng[0]\n\n\n\n\n\n\ng[1]\n\n\n\n\ng[1]\n\n\n\n\n\n\ng[2]\n\n\n\n\ng[2]\n\n\n\n\n\n\ng[3]\n\n\n\n\ng[3]\n\n\n\n\n\n\ng[4]\n\n\n\n\ng[4]\n\n\n\n\n\n\ng[5]\n\n\n\n\ng[5]\n\n\n\n\n\n\ng[6]\n\n\n\n\ng[6]\n\n\n\n\n\n\ng[7]\n\n\n\n\ng[7]\n\n\n\n\n\n\ng[8]\n\n\n\n\ng[8]\n\n\n\n\n\n\nh[0]\n\n\n\n\nh[0]\n\n\n\n\n\n\nh[1]\n\n\n\n\nh[1]\n\n\n\n\n\n\nh[2]\n\n\n\n\nh[2]\n\n\n\n\n\n\nh[3]\n\n\n\n\nh[3]\n\n\n\n\n\n\nh[4]\n\n\n\n\nh[4]\n\n\n\n\n\n\nh[5]\n\n\n\n\nh[5]\n\n\n\n\n\n\nh[6]\n\n\n\n\nh[6]\n\n\n\n\n\n\nh[7]\n\n\n\n\nh[7]\n\n\n\n\n\n\nh[8]\n\n\n\n\nh[8]\n\n\n\n\n\n\nU\n\n\n\n\nU\n\n\n\n\n\n\nV\n\n\n\n\nV\n\n\n\n\n\n\nPhaseF\n\n\n\n\nPhaseF\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\ng[0]\n\n\ng[0]\n\n\n\n\ng[0]\n\n\n\n\n\n\ng[1]\n\n\ng[1]\n\n\n\n\ng[1]\n\n\n\n\n\n\ng[2]\n\n\ng[2]\n\n\n\n\ng[2]\n\n\n\n\n\n\ng[3]\n\n\ng[3]\n\n\n\n\ng[3]\n\n\n\n\n\n\ng[4]\n\n\ng[4]\n\n\n\n\ng[4]\n\n\n\n\n\n\ng[5]\n\n\ng[5]\n\n\n\n\ng[5]\n\n\n\n\n\n\ng[6]\n\n\ng[6]\n\n\n\n\ng[6]\n\n\n\n\n\n\ng[7]\n\n\ng[7]\n\n\n\n\ng[7]\n\n\n\n\n\n\ng[8]\n\n\ng[8]\n\n\n\n\ng[8]\n\n\n\n\n\n\nh[0]\n\n\nh[0]\n\n\n\n\nh[0]\n\n\n\n\n\n\nh[1]\n\n\nh[1]\n\n\n\n\nh[1]\n\n\n\n\n\n\nh[2]\n\n\nh[2]\n\n\n\n\nh[2]\n\n\n\n\n\n\nh[3]\n\n\nh[3]\n\n\n\n\nh[3]\n\n\n\n\n\n\nh[4]\n\n\nh[4]\n\n\n\n\nh[4]\n\n\n\n\n\n\nh[5]\n\n\nh[5]\n\n\n\n\nh[5]\n\n\n\n\n\n\nh[6]\n\n\nh[6]\n\n\n\n\nh[6]\n\n\n\n\n\n\nh[7]\n\n\nh[7]\n\n\n\n\nh[7]\n\n\n\n\n\n\nh[8]\n\n\nh[8]\n\n\n\n\nh[8]\n\n\n\n\n\n\nU\n\n\nU\n\n\n\n\nU\n\n\n\n\n\n\nV\n\n\nV\n\n\n\n\nV\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nPhaseInit\n\n\nInit\n\n\nnone\n\n\nPhaseF\n\n\n\n\n\n\nBaseInit\n\n\nInit_distributions\n\n\nnone\n\n\ng[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8], h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8], U, V\n\n\n\n\n\n\ncalcPhase\n\n\ncalcPhaseF\n\n\nh[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8]\n\n\nPhaseF\n\n\n\n\n\n\nBaseIter\n\n\nRun\n\n\ng[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8], h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8], U, V\n\n\ng[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8], h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8], U, V\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIter, calcPhase\n\n\n\n\n\n\nInit\n\n\nPhaseInit, BaseInit",
            "title": "D2q9 pf velocity"
        },
        {
            "location": "/models/multiphase/d2q9_pf_velocity/d2q9_pf_velocity/#description",
            "text": "d2q9_pf_velocity",
            "title": "Description"
        },
        {
            "location": "/models/multiphase/d2q9_pf_velocity/d2q9_pf_velocity/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/multiphase/d2q9_pf_velocity/d2q9_pf_velocity/#zonal-settings",
            "text": "Name  Comment      PhaseField  Initial PhaseField distribution    VelocityX  inlet/outlet/init velocity    VelocityY  inlet/outlet/init velocity    Pressure  inlet/outlet/init density    PressureLossInObj  Weight of [pressure loss] in objective    OutletFluxInObj  Weight of [pressure loss] in objective    InletFluxInObj  Weight of [pressure loss] in objective    TotalDensityInObj  Weight of [Mass conservation check] in objective    RTIBubbleInObj  Weight of [Bubble Tracker] in objective    RTISpikeInObj  Weight of [Spike Tracker] in objective",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/multiphase/d2q9_pf_velocity/d2q9_pf_velocity/#global-settings",
            "text": "Name  Derived  Comment      Period   Number of cells per cos wave    Perturbation   Size of wave perturbation, Perturbation Period    MidPoint   height of RTI centerline    Radius   Radius of diffuse interface circle    CenterX   Circle center x-coord    CenterY   Circle Center y-coord    BubbleType   Drop/bubble    Density_h   High density    Density_l   Low  density    PhaseField_h   PhaseField in Liquid    PhaseField_l   PhaseField gas    W   Anti-diffusivity coeff    omega_phi  1.0/(3*M+0.5)  one over relaxation time (phase field)    M   Mobility    sigma   surface tension    tau_l  (3*Viscosity_l)  relaxation time (low density fluid)    tau_h  (3*Viscosity_h)  relaxation time (high density fluid)    Viscosity_l   kinematic viscosity    Viscosity_h   kinematic viscosity    GravitationX   applied (rho)*GravitationX    GravitationY   applied (rho)*GravitationY    BuoyancyX   applied (rho-rho_h)*BuoyancyX    BuoyancyY   applied (rho-rho_h)*BuoyancyY    Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/multiphase/d2q9_pf_velocity/d2q9_pf_velocity/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      Rho  kg/m3  Rho    PhaseField  1  PhaseField    U  m/s  U    P  Pa  P",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/multiphase/d2q9_pf_velocity/d2q9_pf_velocity/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      PressureLoss  1mPa  pressure loss    OutletFlux  1m2/s  pressure loss    InletFlux  1m2/s  pressure loss    TotalDensity  1kg/m3  Mass conservation check    RTIBubble  1  Bubble Tracker    RTISpike  1  Spike Tracker    Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/multiphase/d2q9_pf_velocity/d2q9_pf_velocity/#node-types",
            "text": "Group  Types      ADDITIONALS  SpikeTrack, BubbleTrack    BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, MovingWall_N, MovingWall_S    COLLISION  BGK, MRT    DESIGNSPACE  DesignSpace    NONE  None    OBJECTIVE  Inlet, Outlet    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/multiphase/d2q9_pf_velocity/d2q9_pf_velocity/#solved-fields",
            "text": "Name  Access pattern  Comment      g[0]   g[0]    g[1]   g[1]    g[2]   g[2]    g[3]   g[3]    g[4]   g[4]    g[5]   g[5]    g[6]   g[6]    g[7]   g[7]    g[8]   g[8]    h[0]   h[0]    h[1]   h[1]    h[2]   h[2]    h[3]   h[3]    h[4]   h[4]    h[5]   h[5]    h[6]   h[6]    h[7]   h[7]    h[8]   h[8]    U   U    V   V    PhaseF   PhaseF",
            "title": "Solved fields"
        },
        {
            "location": "/models/multiphase/d2q9_pf_velocity/d2q9_pf_velocity/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment      g[0]  g[0]   g[0]    g[1]  g[1]   g[1]    g[2]  g[2]   g[2]    g[3]  g[3]   g[3]    g[4]  g[4]   g[4]    g[5]  g[5]   g[5]    g[6]  g[6]   g[6]    g[7]  g[7]   g[7]    g[8]  g[8]   g[8]    h[0]  h[0]   h[0]    h[1]  h[1]   h[1]    h[2]  h[2]   h[2]    h[3]  h[3]   h[3]    h[4]  h[4]   h[4]    h[5]  h[5]   h[5]    h[6]  h[6]   h[6]    h[7]  h[7]   h[7]    h[8]  h[8]   h[8]    U  U   U    V  V   V",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/multiphase/d2q9_pf_velocity/d2q9_pf_velocity/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      PhaseInit  Init  none  PhaseF    BaseInit  Init_distributions  none  g[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8], h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8], U, V    calcPhase  calcPhaseF  h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8]  PhaseF    BaseIter  Run  g[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8], h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8], U, V  g[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8], h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8], U, V",
            "title": "Action stages"
        },
        {
            "location": "/models/multiphase/d2q9_pf_velocity/d2q9_pf_velocity/#actions",
            "text": "Name  Stages      Iteration  BaseIter, calcPhase    Init  PhaseInit, BaseInit",
            "title": "Actions"
        },
        {
            "location": "/models/multiphase/d2q9_pf_velocity/d2q9_pf_velocity_GF/",
            "text": "Description\n\n\nd2q9_pf_velocity_GF\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nPhaseField\n\n\nInitial PhaseField distribution\n\n\n\n\n\n\nVelocityX\n\n\ninlet/outlet/init velocity\n\n\n\n\n\n\nVelocityY\n\n\ninlet/outlet/init velocity\n\n\n\n\n\n\nPressure\n\n\ninlet/outlet/init density\n\n\n\n\n\n\nPressureLossInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\nOutletFluxInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\nInletFluxInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\nTotalDensityInObj\n\n\nWeight of [Mass conservation check] in objective\n\n\n\n\n\n\nRTIBubbleInObj\n\n\nWeight of [Bubble Tracker] in objective\n\n\n\n\n\n\nRTISpikeInObj\n\n\nWeight of [Spike Tracker] in objective\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nPeriod\n\n\n\n\nNumber of cells per cos wave\n\n\n\n\n\n\nPerturbation\n\n\n\n\nSize of wave perturbation, Perturbation Period\n\n\n\n\n\n\nMidPoint\n\n\n\n\nheight of RTI centerline\n\n\n\n\n\n\nRadius\n\n\n\n\nRadius of diffuse interface circle\n\n\n\n\n\n\nCenterX\n\n\n\n\nCircle center x-coord\n\n\n\n\n\n\nCenterY\n\n\n\n\nCircle Center y-coord\n\n\n\n\n\n\nBubbleType\n\n\n\n\nDrop/bubble\n\n\n\n\n\n\nDensity_h\n\n\n\n\nHigh density\n\n\n\n\n\n\nDensity_l\n\n\n\n\nLow  density\n\n\n\n\n\n\nPhaseField_h\n\n\n\n\nPhaseField in Liquid\n\n\n\n\n\n\nPhaseField_l\n\n\n\n\nPhaseField gas\n\n\n\n\n\n\nW\n\n\n\n\nAnti-diffusivity coeff\n\n\n\n\n\n\nomega_phi\n\n\n1.0/(3*M+0.5)\n\n\none over relaxation time (phase field)\n\n\n\n\n\n\nM\n\n\n\n\nMobility\n\n\n\n\n\n\nsigma\n\n\n\n\nsurface tension\n\n\n\n\n\n\ntau_l\n\n\n(3*Viscosity_l)\n\n\nrelaxation time (low density fluid)\n\n\n\n\n\n\ntau_h\n\n\n(3*Viscosity_h)\n\n\nrelaxation time (high density fluid)\n\n\n\n\n\n\nViscosity_l\n\n\n\n\nkinematic viscosity\n\n\n\n\n\n\nViscosity_h\n\n\n\n\nkinematic viscosity\n\n\n\n\n\n\nGravitationX\n\n\n\n\napplied (rho)*GravitationX\n\n\n\n\n\n\nGravitationY\n\n\n\n\napplied (rho)*GravitationY\n\n\n\n\n\n\nBuoyancyX\n\n\n\n\napplied (rho-rho_h)*BuoyancyX\n\n\n\n\n\n\nBuoyancyY\n\n\n\n\napplied (rho-rho_h)*BuoyancyY\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nRho\n\n\nkg/m3\n\n\nRho\n\n\n\n\n\n\nPhaseField\n\n\n1\n\n\nPhaseField\n\n\n\n\n\n\nU\n\n\nm/s\n\n\nU\n\n\n\n\n\n\nP\n\n\nPa\n\n\nP\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nPressureLoss\n\n\n1mPa\n\n\npressure loss\n\n\n\n\n\n\nOutletFlux\n\n\n1m2/s\n\n\npressure loss\n\n\n\n\n\n\nInletFlux\n\n\n1m2/s\n\n\npressure loss\n\n\n\n\n\n\nTotalDensity\n\n\n1kg/m3\n\n\nMass conservation check\n\n\n\n\n\n\nRTIBubble\n\n\n1\n\n\nBubble Tracker\n\n\n\n\n\n\nRTISpike\n\n\n1\n\n\nSpike Tracker\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nADDITIONALS\n\n\nSpikeTrack, BubbleTrack\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, MovingWall_N, MovingWall_S\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\ng[0]\n\n\n\n\ng[0]\n\n\n\n\n\n\ng[1]\n\n\n\n\ng[1]\n\n\n\n\n\n\ng[2]\n\n\n\n\ng[2]\n\n\n\n\n\n\ng[3]\n\n\n\n\ng[3]\n\n\n\n\n\n\ng[4]\n\n\n\n\ng[4]\n\n\n\n\n\n\ng[5]\n\n\n\n\ng[5]\n\n\n\n\n\n\ng[6]\n\n\n\n\ng[6]\n\n\n\n\n\n\ng[7]\n\n\n\n\ng[7]\n\n\n\n\n\n\ng[8]\n\n\n\n\ng[8]\n\n\n\n\n\n\nh[0]\n\n\n\n\nh[0]\n\n\n\n\n\n\nh[1]\n\n\n\n\nh[1]\n\n\n\n\n\n\nh[2]\n\n\n\n\nh[2]\n\n\n\n\n\n\nh[3]\n\n\n\n\nh[3]\n\n\n\n\n\n\nh[4]\n\n\n\n\nh[4]\n\n\n\n\n\n\nh[5]\n\n\n\n\nh[5]\n\n\n\n\n\n\nh[6]\n\n\n\n\nh[6]\n\n\n\n\n\n\nh[7]\n\n\n\n\nh[7]\n\n\n\n\n\n\nh[8]\n\n\n\n\nh[8]\n\n\n\n\n\n\nU\n\n\n\n\nU\n\n\n\n\n\n\nV\n\n\n\n\nV\n\n\n\n\n\n\nPhaseF\n\n\n\n\nPhaseF\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\ng[0]\n\n\ng[0]\n\n\n\n\ng[0]\n\n\n\n\n\n\ng[1]\n\n\ng[1]\n\n\n\n\ng[1]\n\n\n\n\n\n\ng[2]\n\n\ng[2]\n\n\n\n\ng[2]\n\n\n\n\n\n\ng[3]\n\n\ng[3]\n\n\n\n\ng[3]\n\n\n\n\n\n\ng[4]\n\n\ng[4]\n\n\n\n\ng[4]\n\n\n\n\n\n\ng[5]\n\n\ng[5]\n\n\n\n\ng[5]\n\n\n\n\n\n\ng[6]\n\n\ng[6]\n\n\n\n\ng[6]\n\n\n\n\n\n\ng[7]\n\n\ng[7]\n\n\n\n\ng[7]\n\n\n\n\n\n\ng[8]\n\n\ng[8]\n\n\n\n\ng[8]\n\n\n\n\n\n\nh[0]\n\n\nh[0]\n\n\n\n\nh[0]\n\n\n\n\n\n\nh[1]\n\n\nh[1]\n\n\n\n\nh[1]\n\n\n\n\n\n\nh[2]\n\n\nh[2]\n\n\n\n\nh[2]\n\n\n\n\n\n\nh[3]\n\n\nh[3]\n\n\n\n\nh[3]\n\n\n\n\n\n\nh[4]\n\n\nh[4]\n\n\n\n\nh[4]\n\n\n\n\n\n\nh[5]\n\n\nh[5]\n\n\n\n\nh[5]\n\n\n\n\n\n\nh[6]\n\n\nh[6]\n\n\n\n\nh[6]\n\n\n\n\n\n\nh[7]\n\n\nh[7]\n\n\n\n\nh[7]\n\n\n\n\n\n\nh[8]\n\n\nh[8]\n\n\n\n\nh[8]\n\n\n\n\n\n\nU\n\n\nU\n\n\n\n\nU\n\n\n\n\n\n\nV\n\n\nV\n\n\n\n\nV\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nPhaseInit\n\n\nInit\n\n\nnone\n\n\nPhaseF\n\n\n\n\n\n\nBaseInit\n\n\nInit_distributions\n\n\nnone\n\n\ng[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8], h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8], U, V\n\n\n\n\n\n\ncalcPhase\n\n\ncalcPhaseF\n\n\nh[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8]\n\n\nPhaseF\n\n\n\n\n\n\nBaseIter\n\n\nRun\n\n\ng[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8], h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8], U, V\n\n\ng[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8], h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8], U, V\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIter, calcPhase\n\n\n\n\n\n\nInit\n\n\nPhaseInit, BaseInit",
            "title": "d2q9 pf velocity GF"
        },
        {
            "location": "/models/multiphase/d2q9_pf_velocity/d2q9_pf_velocity_GF/#description",
            "text": "d2q9_pf_velocity_GF",
            "title": "Description"
        },
        {
            "location": "/models/multiphase/d2q9_pf_velocity/d2q9_pf_velocity_GF/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/multiphase/d2q9_pf_velocity/d2q9_pf_velocity_GF/#zonal-settings",
            "text": "Name  Comment      PhaseField  Initial PhaseField distribution    VelocityX  inlet/outlet/init velocity    VelocityY  inlet/outlet/init velocity    Pressure  inlet/outlet/init density    PressureLossInObj  Weight of [pressure loss] in objective    OutletFluxInObj  Weight of [pressure loss] in objective    InletFluxInObj  Weight of [pressure loss] in objective    TotalDensityInObj  Weight of [Mass conservation check] in objective    RTIBubbleInObj  Weight of [Bubble Tracker] in objective    RTISpikeInObj  Weight of [Spike Tracker] in objective",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/multiphase/d2q9_pf_velocity/d2q9_pf_velocity_GF/#global-settings",
            "text": "Name  Derived  Comment      Period   Number of cells per cos wave    Perturbation   Size of wave perturbation, Perturbation Period    MidPoint   height of RTI centerline    Radius   Radius of diffuse interface circle    CenterX   Circle center x-coord    CenterY   Circle Center y-coord    BubbleType   Drop/bubble    Density_h   High density    Density_l   Low  density    PhaseField_h   PhaseField in Liquid    PhaseField_l   PhaseField gas    W   Anti-diffusivity coeff    omega_phi  1.0/(3*M+0.5)  one over relaxation time (phase field)    M   Mobility    sigma   surface tension    tau_l  (3*Viscosity_l)  relaxation time (low density fluid)    tau_h  (3*Viscosity_h)  relaxation time (high density fluid)    Viscosity_l   kinematic viscosity    Viscosity_h   kinematic viscosity    GravitationX   applied (rho)*GravitationX    GravitationY   applied (rho)*GravitationY    BuoyancyX   applied (rho-rho_h)*BuoyancyX    BuoyancyY   applied (rho-rho_h)*BuoyancyY    Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/multiphase/d2q9_pf_velocity/d2q9_pf_velocity_GF/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      Rho  kg/m3  Rho    PhaseField  1  PhaseField    U  m/s  U    P  Pa  P",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/multiphase/d2q9_pf_velocity/d2q9_pf_velocity_GF/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      PressureLoss  1mPa  pressure loss    OutletFlux  1m2/s  pressure loss    InletFlux  1m2/s  pressure loss    TotalDensity  1kg/m3  Mass conservation check    RTIBubble  1  Bubble Tracker    RTISpike  1  Spike Tracker    Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/multiphase/d2q9_pf_velocity/d2q9_pf_velocity_GF/#node-types",
            "text": "Group  Types      ADDITIONALS  SpikeTrack, BubbleTrack    BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, MovingWall_N, MovingWall_S    COLLISION  BGK, MRT    DESIGNSPACE  DesignSpace    NONE  None    OBJECTIVE  Inlet, Outlet    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/multiphase/d2q9_pf_velocity/d2q9_pf_velocity_GF/#solved-fields",
            "text": "Name  Access pattern  Comment      g[0]   g[0]    g[1]   g[1]    g[2]   g[2]    g[3]   g[3]    g[4]   g[4]    g[5]   g[5]    g[6]   g[6]    g[7]   g[7]    g[8]   g[8]    h[0]   h[0]    h[1]   h[1]    h[2]   h[2]    h[3]   h[3]    h[4]   h[4]    h[5]   h[5]    h[6]   h[6]    h[7]   h[7]    h[8]   h[8]    U   U    V   V    PhaseF   PhaseF",
            "title": "Solved fields"
        },
        {
            "location": "/models/multiphase/d2q9_pf_velocity/d2q9_pf_velocity_GF/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment      g[0]  g[0]   g[0]    g[1]  g[1]   g[1]    g[2]  g[2]   g[2]    g[3]  g[3]   g[3]    g[4]  g[4]   g[4]    g[5]  g[5]   g[5]    g[6]  g[6]   g[6]    g[7]  g[7]   g[7]    g[8]  g[8]   g[8]    h[0]  h[0]   h[0]    h[1]  h[1]   h[1]    h[2]  h[2]   h[2]    h[3]  h[3]   h[3]    h[4]  h[4]   h[4]    h[5]  h[5]   h[5]    h[6]  h[6]   h[6]    h[7]  h[7]   h[7]    h[8]  h[8]   h[8]    U  U   U    V  V   V",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/multiphase/d2q9_pf_velocity/d2q9_pf_velocity_GF/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      PhaseInit  Init  none  PhaseF    BaseInit  Init_distributions  none  g[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8], h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8], U, V    calcPhase  calcPhaseF  h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8]  PhaseF    BaseIter  Run  g[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8], h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8], U, V  g[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8], h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8], U, V",
            "title": "Action stages"
        },
        {
            "location": "/models/multiphase/d2q9_pf_velocity/d2q9_pf_velocity_GF/#actions",
            "text": "Name  Stages      Iteration  BaseIter, calcPhase    Init  PhaseInit, BaseInit",
            "title": "Actions"
        },
        {
            "location": "/models/multiphase/d2q9_pf_velocity/d2q9_pf_velocity_RT/",
            "text": "Description\n\n\nd2q9_pf_velocity_RT\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nPhaseField\n\n\nInitial PhaseField distribution\n\n\n\n\n\n\nVelocityX\n\n\ninlet/outlet/init velocity\n\n\n\n\n\n\nVelocityY\n\n\ninlet/outlet/init velocity\n\n\n\n\n\n\nPressure\n\n\ninlet/outlet/init density\n\n\n\n\n\n\nPressureLossInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\nOutletFluxInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\nInletFluxInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\nTotalDensityInObj\n\n\nWeight of [Mass conservation check] in objective\n\n\n\n\n\n\nRTIBubbleInObj\n\n\nWeight of [Bubble Tracker] in objective\n\n\n\n\n\n\nRTISpikeInObj\n\n\nWeight of [Spike Tracker] in objective\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nPeriod\n\n\n\n\nNumber of cells per cos wave\n\n\n\n\n\n\nPerturbation\n\n\n\n\nSize of wave perturbation, Perturbation Period\n\n\n\n\n\n\nMidPoint\n\n\n\n\nheight of RTI centerline\n\n\n\n\n\n\nRadius\n\n\n\n\nRadius of diffuse interface circle\n\n\n\n\n\n\nCenterX\n\n\n\n\nCircle center x-coord\n\n\n\n\n\n\nCenterY\n\n\n\n\nCircle Center y-coord\n\n\n\n\n\n\nBubbleType\n\n\n\n\nDrop/bubble\n\n\n\n\n\n\nDensity_h\n\n\n\n\nHigh density\n\n\n\n\n\n\nDensity_l\n\n\n\n\nLow  density\n\n\n\n\n\n\nPhaseField_h\n\n\n\n\nPhaseField in Liquid\n\n\n\n\n\n\nPhaseField_l\n\n\n\n\nPhaseField gas\n\n\n\n\n\n\nW\n\n\n\n\nAnti-diffusivity coeff\n\n\n\n\n\n\nomega_phi\n\n\n1.0/(3*M+0.5)\n\n\none over relaxation time (phase field)\n\n\n\n\n\n\nM\n\n\n\n\nMobility\n\n\n\n\n\n\nsigma\n\n\n\n\nsurface tension\n\n\n\n\n\n\ntau_l\n\n\n(3*Viscosity_l)\n\n\nrelaxation time (low density fluid)\n\n\n\n\n\n\ntau_h\n\n\n(3*Viscosity_h)\n\n\nrelaxation time (high density fluid)\n\n\n\n\n\n\nViscosity_l\n\n\n\n\nkinematic viscosity\n\n\n\n\n\n\nViscosity_h\n\n\n\n\nkinematic viscosity\n\n\n\n\n\n\nGravitationX\n\n\n\n\napplied (rho)*GravitationX\n\n\n\n\n\n\nGravitationY\n\n\n\n\napplied (rho)*GravitationY\n\n\n\n\n\n\nBuoyancyX\n\n\n\n\napplied (rho-rho_h)*BuoyancyX\n\n\n\n\n\n\nBuoyancyY\n\n\n\n\napplied (rho-rho_h)*BuoyancyY\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nRho\n\n\nkg/m3\n\n\nRho\n\n\n\n\n\n\nPhaseField\n\n\n1\n\n\nPhaseField\n\n\n\n\n\n\nU\n\n\nm/s\n\n\nU\n\n\n\n\n\n\nP\n\n\nPa\n\n\nP\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nPressureLoss\n\n\n1mPa\n\n\npressure loss\n\n\n\n\n\n\nOutletFlux\n\n\n1m2/s\n\n\npressure loss\n\n\n\n\n\n\nInletFlux\n\n\n1m2/s\n\n\npressure loss\n\n\n\n\n\n\nTotalDensity\n\n\n1kg/m3\n\n\nMass conservation check\n\n\n\n\n\n\nRTIBubble\n\n\n1\n\n\nBubble Tracker\n\n\n\n\n\n\nRTISpike\n\n\n1\n\n\nSpike Tracker\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nADDITIONALS\n\n\nSpikeTrack, BubbleTrack\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, MovingWall_N, MovingWall_S\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\ng[0]\n\n\n\n\ng[0]\n\n\n\n\n\n\ng[1]\n\n\n\n\ng[1]\n\n\n\n\n\n\ng[2]\n\n\n\n\ng[2]\n\n\n\n\n\n\ng[3]\n\n\n\n\ng[3]\n\n\n\n\n\n\ng[4]\n\n\n\n\ng[4]\n\n\n\n\n\n\ng[5]\n\n\n\n\ng[5]\n\n\n\n\n\n\ng[6]\n\n\n\n\ng[6]\n\n\n\n\n\n\ng[7]\n\n\n\n\ng[7]\n\n\n\n\n\n\ng[8]\n\n\n\n\ng[8]\n\n\n\n\n\n\nh[0]\n\n\n\n\nh[0]\n\n\n\n\n\n\nh[1]\n\n\n\n\nh[1]\n\n\n\n\n\n\nh[2]\n\n\n\n\nh[2]\n\n\n\n\n\n\nh[3]\n\n\n\n\nh[3]\n\n\n\n\n\n\nh[4]\n\n\n\n\nh[4]\n\n\n\n\n\n\nh[5]\n\n\n\n\nh[5]\n\n\n\n\n\n\nh[6]\n\n\n\n\nh[6]\n\n\n\n\n\n\nh[7]\n\n\n\n\nh[7]\n\n\n\n\n\n\nh[8]\n\n\n\n\nh[8]\n\n\n\n\n\n\nU\n\n\n\n\nU\n\n\n\n\n\n\nV\n\n\n\n\nV\n\n\n\n\n\n\nPhaseF\n\n\n\n\nPhaseF\n\n\n\n\n\n\nPhaseOld\n\n\n\n\nPhaseOld\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\ng[0]\n\n\ng[0]\n\n\n\n\ng[0]\n\n\n\n\n\n\ng[1]\n\n\ng[1]\n\n\n\n\ng[1]\n\n\n\n\n\n\ng[2]\n\n\ng[2]\n\n\n\n\ng[2]\n\n\n\n\n\n\ng[3]\n\n\ng[3]\n\n\n\n\ng[3]\n\n\n\n\n\n\ng[4]\n\n\ng[4]\n\n\n\n\ng[4]\n\n\n\n\n\n\ng[5]\n\n\ng[5]\n\n\n\n\ng[5]\n\n\n\n\n\n\ng[6]\n\n\ng[6]\n\n\n\n\ng[6]\n\n\n\n\n\n\ng[7]\n\n\ng[7]\n\n\n\n\ng[7]\n\n\n\n\n\n\ng[8]\n\n\ng[8]\n\n\n\n\ng[8]\n\n\n\n\n\n\nh[0]\n\n\nh[0]\n\n\n\n\nh[0]\n\n\n\n\n\n\nh[1]\n\n\nh[1]\n\n\n\n\nh[1]\n\n\n\n\n\n\nh[2]\n\n\nh[2]\n\n\n\n\nh[2]\n\n\n\n\n\n\nh[3]\n\n\nh[3]\n\n\n\n\nh[3]\n\n\n\n\n\n\nh[4]\n\n\nh[4]\n\n\n\n\nh[4]\n\n\n\n\n\n\nh[5]\n\n\nh[5]\n\n\n\n\nh[5]\n\n\n\n\n\n\nh[6]\n\n\nh[6]\n\n\n\n\nh[6]\n\n\n\n\n\n\nh[7]\n\n\nh[7]\n\n\n\n\nh[7]\n\n\n\n\n\n\nh[8]\n\n\nh[8]\n\n\n\n\nh[8]\n\n\n\n\n\n\nU\n\n\nU\n\n\n\n\nU\n\n\n\n\n\n\nV\n\n\nV\n\n\n\n\nV\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nPhaseInit\n\n\nInit\n\n\nnone\n\n\nPhaseF\n\n\n\n\n\n\nBaseInit\n\n\nInit_distributions\n\n\nnone\n\n\ng[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8], h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8], U, V\n\n\n\n\n\n\ncalcPhase\n\n\ncalcPhaseF\n\n\nh[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8]\n\n\nPhaseF, PhaseOld\n\n\n\n\n\n\nBaseIter\n\n\nRun\n\n\ng[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8], h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8], U, V\n\n\ng[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8], h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8], U, V\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIter, calcPhase\n\n\n\n\n\n\nInit\n\n\nPhaseInit, BaseInit",
            "title": "d2q9 pf velocity RT"
        },
        {
            "location": "/models/multiphase/d2q9_pf_velocity/d2q9_pf_velocity_RT/#description",
            "text": "d2q9_pf_velocity_RT",
            "title": "Description"
        },
        {
            "location": "/models/multiphase/d2q9_pf_velocity/d2q9_pf_velocity_RT/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/multiphase/d2q9_pf_velocity/d2q9_pf_velocity_RT/#zonal-settings",
            "text": "Name  Comment      PhaseField  Initial PhaseField distribution    VelocityX  inlet/outlet/init velocity    VelocityY  inlet/outlet/init velocity    Pressure  inlet/outlet/init density    PressureLossInObj  Weight of [pressure loss] in objective    OutletFluxInObj  Weight of [pressure loss] in objective    InletFluxInObj  Weight of [pressure loss] in objective    TotalDensityInObj  Weight of [Mass conservation check] in objective    RTIBubbleInObj  Weight of [Bubble Tracker] in objective    RTISpikeInObj  Weight of [Spike Tracker] in objective",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/multiphase/d2q9_pf_velocity/d2q9_pf_velocity_RT/#global-settings",
            "text": "Name  Derived  Comment      Period   Number of cells per cos wave    Perturbation   Size of wave perturbation, Perturbation Period    MidPoint   height of RTI centerline    Radius   Radius of diffuse interface circle    CenterX   Circle center x-coord    CenterY   Circle Center y-coord    BubbleType   Drop/bubble    Density_h   High density    Density_l   Low  density    PhaseField_h   PhaseField in Liquid    PhaseField_l   PhaseField gas    W   Anti-diffusivity coeff    omega_phi  1.0/(3*M+0.5)  one over relaxation time (phase field)    M   Mobility    sigma   surface tension    tau_l  (3*Viscosity_l)  relaxation time (low density fluid)    tau_h  (3*Viscosity_h)  relaxation time (high density fluid)    Viscosity_l   kinematic viscosity    Viscosity_h   kinematic viscosity    GravitationX   applied (rho)*GravitationX    GravitationY   applied (rho)*GravitationY    BuoyancyX   applied (rho-rho_h)*BuoyancyX    BuoyancyY   applied (rho-rho_h)*BuoyancyY    Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/multiphase/d2q9_pf_velocity/d2q9_pf_velocity_RT/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      Rho  kg/m3  Rho    PhaseField  1  PhaseField    U  m/s  U    P  Pa  P",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/multiphase/d2q9_pf_velocity/d2q9_pf_velocity_RT/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      PressureLoss  1mPa  pressure loss    OutletFlux  1m2/s  pressure loss    InletFlux  1m2/s  pressure loss    TotalDensity  1kg/m3  Mass conservation check    RTIBubble  1  Bubble Tracker    RTISpike  1  Spike Tracker    Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/multiphase/d2q9_pf_velocity/d2q9_pf_velocity_RT/#node-types",
            "text": "Group  Types      ADDITIONALS  SpikeTrack, BubbleTrack    BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, MovingWall_N, MovingWall_S    COLLISION  BGK, MRT    DESIGNSPACE  DesignSpace    NONE  None    OBJECTIVE  Inlet, Outlet    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/multiphase/d2q9_pf_velocity/d2q9_pf_velocity_RT/#solved-fields",
            "text": "Name  Access pattern  Comment      g[0]   g[0]    g[1]   g[1]    g[2]   g[2]    g[3]   g[3]    g[4]   g[4]    g[5]   g[5]    g[6]   g[6]    g[7]   g[7]    g[8]   g[8]    h[0]   h[0]    h[1]   h[1]    h[2]   h[2]    h[3]   h[3]    h[4]   h[4]    h[5]   h[5]    h[6]   h[6]    h[7]   h[7]    h[8]   h[8]    U   U    V   V    PhaseF   PhaseF    PhaseOld   PhaseOld",
            "title": "Solved fields"
        },
        {
            "location": "/models/multiphase/d2q9_pf_velocity/d2q9_pf_velocity_RT/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment      g[0]  g[0]   g[0]    g[1]  g[1]   g[1]    g[2]  g[2]   g[2]    g[3]  g[3]   g[3]    g[4]  g[4]   g[4]    g[5]  g[5]   g[5]    g[6]  g[6]   g[6]    g[7]  g[7]   g[7]    g[8]  g[8]   g[8]    h[0]  h[0]   h[0]    h[1]  h[1]   h[1]    h[2]  h[2]   h[2]    h[3]  h[3]   h[3]    h[4]  h[4]   h[4]    h[5]  h[5]   h[5]    h[6]  h[6]   h[6]    h[7]  h[7]   h[7]    h[8]  h[8]   h[8]    U  U   U    V  V   V",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/multiphase/d2q9_pf_velocity/d2q9_pf_velocity_RT/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      PhaseInit  Init  none  PhaseF    BaseInit  Init_distributions  none  g[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8], h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8], U, V    calcPhase  calcPhaseF  h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8]  PhaseF, PhaseOld    BaseIter  Run  g[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8], h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8], U, V  g[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8], h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8], U, V",
            "title": "Action stages"
        },
        {
            "location": "/models/multiphase/d2q9_pf_velocity/d2q9_pf_velocity_RT/#actions",
            "text": "Name  Stages      Iteration  BaseIter, calcPhase    Init  PhaseInit, BaseInit",
            "title": "Actions"
        },
        {
            "location": "/models/multiphase/d3q27_pf_velocity/d3q27_pf_velocity/",
            "text": "Description\n\n\nd3q27_pf_velocity\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nPhaseField\n\n\nInitial PhaseField distribution\n\n\n\n\n\n\nVelocityX\n\n\ninlet/outlet/init velocity\n\n\n\n\n\n\nVelocityY\n\n\ninlet/outlet/init velocity\n\n\n\n\n\n\nVelocityZ\n\n\ninlet/outlet/init velocity\n\n\n\n\n\n\nPressure\n\n\ninlet/outlet/init density\n\n\n\n\n\n\nInterfacePositionInObj\n\n\nWeight of [trackPosition] in objective\n\n\n\n\n\n\nRTISpikeInObj\n\n\nWeight of [SpikeTracker ] in objective\n\n\n\n\n\n\nRTIBubbleInObj\n\n\nWeight of [BubbleTracker] in objective\n\n\n\n\n\n\nRTISaddleInObj\n\n\nWeight of [SaddleTracker] in objective\n\n\n\n\n\n\nPressureLossInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\nOutletFluxInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\nInletFluxInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\nTotalDensityInObj\n\n\nWeight of [Mass conservation check] in objective\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nDensity_h\n\n\n\n\nHigh density\n\n\n\n\n\n\nDensity_l\n\n\n\n\nLow  density\n\n\n\n\n\n\nPhaseField_h\n\n\n\n\nPhaseField in Liquid\n\n\n\n\n\n\nPhaseField_l\n\n\n\n\nPhaseField gas\n\n\n\n\n\n\nIntWidth\n\n\n\n\nAnti-diffusivity coeff\n\n\n\n\n\n\nomega_phi\n\n\n1.0/(3*M+0.5)\n\n\none over relaxation time (phase field)\n\n\n\n\n\n\nM\n\n\n\n\nMobility\n\n\n\n\n\n\nsigma\n\n\n\n\nsurface tension\n\n\n\n\n\n\nRTI_Characteristic_Length\n\n\n\n\nUse for RTI instability\n\n\n\n\n\n\nRadius\n\n\n\n\nDiffuse Sphere Radius\n\n\n\n\n\n\nCenterX\n\n\n\n\nDiffuse sphere center_x\n\n\n\n\n\n\nCenterY\n\n\n\n\nDiffuse sphere center_y\n\n\n\n\n\n\nCenterZ\n\n\n\n\nDiffuse sphere center_z\n\n\n\n\n\n\nBubbleType\n\n\n\n\ndroplet or bubble?!\n\n\n\n\n\n\ntau_l\n\n\n(3*Viscosity_l)\n\n\nrelaxation time (low density fluid)\n\n\n\n\n\n\ntau_h\n\n\n(3*Viscosity_h)\n\n\nrelaxation time (high density fluid)\n\n\n\n\n\n\nViscosity_l\n\n\n\n\nkinematic viscosity\n\n\n\n\n\n\nViscosity_h\n\n\n\n\nkinematic viscosity\n\n\n\n\n\n\nGravitationX\n\n\n\n\napplied (rho)*GravitationX\n\n\n\n\n\n\nGravitationY\n\n\n\n\napplied (rho)*GravitationY\n\n\n\n\n\n\nGravitationZ\n\n\n\n\napplied (rho)*GravitationZ\n\n\n\n\n\n\nBuoyancyX\n\n\n\n\napplied (rho-rho_h)*BuoyancyX\n\n\n\n\n\n\nBuoyancyY\n\n\n\n\napplied (rho-rho_h)*BuoyancyY\n\n\n\n\n\n\nBuoyancyZ\n\n\n\n\napplied (rho-rho_h)*BuoyancyZ\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nPhaseField\n\n\n1\n\n\nPhaseField\n\n\n\n\n\n\nU\n\n\nm/s\n\n\nU\n\n\n\n\n\n\nP\n\n\nPa\n\n\nP\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nInterfacePosition\n\n\n1\n\n\ntrackPosition\n\n\n\n\n\n\nRTISpike\n\n\n1\n\n\nSpikeTracker\n\n\n\n\n\n\nRTIBubble\n\n\n1\n\n\nBubbleTracker\n\n\n\n\n\n\nRTISaddle\n\n\n1\n\n\nSaddleTracker\n\n\n\n\n\n\nPressureLoss\n\n\n1mPa\n\n\npressure loss\n\n\n\n\n\n\nOutletFlux\n\n\n1m2/s\n\n\npressure loss\n\n\n\n\n\n\nInletFlux\n\n\n1m2/s\n\n\npressure loss\n\n\n\n\n\n\nTotalDensity\n\n\n1kg/m3\n\n\nMass conservation check\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nADDITIONALS\n\n\nCenterline, Spiketrack, Saddletrack, Bubbletrack, SymmetricXY_W, SymmetricXY_E\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, MovingWall_N, MovingWall_S\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\ng0\n\n\n\n\ng0\n\n\n\n\n\n\ng1\n\n\n\n\ng1\n\n\n\n\n\n\ng2\n\n\n\n\ng2\n\n\n\n\n\n\ng3\n\n\n\n\ng3\n\n\n\n\n\n\ng4\n\n\n\n\ng4\n\n\n\n\n\n\ng5\n\n\n\n\ng5\n\n\n\n\n\n\ng6\n\n\n\n\ng6\n\n\n\n\n\n\ng7\n\n\n\n\ng7\n\n\n\n\n\n\ng8\n\n\n\n\ng8\n\n\n\n\n\n\ng9\n\n\n\n\ng9\n\n\n\n\n\n\ng10\n\n\n\n\ng10\n\n\n\n\n\n\ng11\n\n\n\n\ng11\n\n\n\n\n\n\ng12\n\n\n\n\ng12\n\n\n\n\n\n\ng13\n\n\n\n\ng13\n\n\n\n\n\n\ng14\n\n\n\n\ng14\n\n\n\n\n\n\ng15\n\n\n\n\ng15\n\n\n\n\n\n\ng16\n\n\n\n\ng16\n\n\n\n\n\n\ng17\n\n\n\n\ng17\n\n\n\n\n\n\ng18\n\n\n\n\ng18\n\n\n\n\n\n\ng19\n\n\n\n\ng19\n\n\n\n\n\n\ng20\n\n\n\n\ng20\n\n\n\n\n\n\ng21\n\n\n\n\ng21\n\n\n\n\n\n\ng22\n\n\n\n\ng22\n\n\n\n\n\n\ng23\n\n\n\n\ng23\n\n\n\n\n\n\ng24\n\n\n\n\ng24\n\n\n\n\n\n\ng25\n\n\n\n\ng25\n\n\n\n\n\n\ng26\n\n\n\n\ng26\n\n\n\n\n\n\nh0\n\n\n\n\nh0\n\n\n\n\n\n\nh1\n\n\n\n\nh1\n\n\n\n\n\n\nh2\n\n\n\n\nh2\n\n\n\n\n\n\nh3\n\n\n\n\nh3\n\n\n\n\n\n\nh4\n\n\n\n\nh4\n\n\n\n\n\n\nh5\n\n\n\n\nh5\n\n\n\n\n\n\nh6\n\n\n\n\nh6\n\n\n\n\n\n\nh7\n\n\n\n\nh7\n\n\n\n\n\n\nh8\n\n\n\n\nh8\n\n\n\n\n\n\nh9\n\n\n\n\nh9\n\n\n\n\n\n\nh10\n\n\n\n\nh10\n\n\n\n\n\n\nh11\n\n\n\n\nh11\n\n\n\n\n\n\nh12\n\n\n\n\nh12\n\n\n\n\n\n\nh13\n\n\n\n\nh13\n\n\n\n\n\n\nh14\n\n\n\n\nh14\n\n\n\n\n\n\nU\n\n\n\n\nU\n\n\n\n\n\n\nV\n\n\n\n\nV\n\n\n\n\n\n\nW\n\n\n\n\nW\n\n\n\n\n\n\nPhaseF\n\n\n\n\nPhaseF\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\ng0\n\n\ng0\n\n\n\n\ng0\n\n\n\n\n\n\ng1\n\n\ng1\n\n\n\n\ng1\n\n\n\n\n\n\ng2\n\n\ng2\n\n\n\n\ng2\n\n\n\n\n\n\ng3\n\n\ng3\n\n\n\n\ng3\n\n\n\n\n\n\ng4\n\n\ng4\n\n\n\n\ng4\n\n\n\n\n\n\ng5\n\n\ng5\n\n\n\n\ng5\n\n\n\n\n\n\ng6\n\n\ng6\n\n\n\n\ng6\n\n\n\n\n\n\ng7\n\n\ng7\n\n\n\n\ng7\n\n\n\n\n\n\ng8\n\n\ng8\n\n\n\n\ng8\n\n\n\n\n\n\ng9\n\n\ng9\n\n\n\n\ng9\n\n\n\n\n\n\ng10\n\n\ng10\n\n\n\n\ng10\n\n\n\n\n\n\ng11\n\n\ng11\n\n\n\n\ng11\n\n\n\n\n\n\ng12\n\n\ng12\n\n\n\n\ng12\n\n\n\n\n\n\ng13\n\n\ng13\n\n\n\n\ng13\n\n\n\n\n\n\ng14\n\n\ng14\n\n\n\n\ng14\n\n\n\n\n\n\ng15\n\n\ng15\n\n\n\n\ng15\n\n\n\n\n\n\ng16\n\n\ng16\n\n\n\n\ng16\n\n\n\n\n\n\ng17\n\n\ng17\n\n\n\n\ng17\n\n\n\n\n\n\ng18\n\n\ng18\n\n\n\n\ng18\n\n\n\n\n\n\ng19\n\n\ng19\n\n\n\n\ng19\n\n\n\n\n\n\ng20\n\n\ng20\n\n\n\n\ng20\n\n\n\n\n\n\ng21\n\n\ng21\n\n\n\n\ng21\n\n\n\n\n\n\ng22\n\n\ng22\n\n\n\n\ng22\n\n\n\n\n\n\ng23\n\n\ng23\n\n\n\n\ng23\n\n\n\n\n\n\ng24\n\n\ng24\n\n\n\n\ng24\n\n\n\n\n\n\ng25\n\n\ng25\n\n\n\n\ng25\n\n\n\n\n\n\ng26\n\n\ng26\n\n\n\n\ng26\n\n\n\n\n\n\nh0\n\n\nh0\n\n\n\n\nh0\n\n\n\n\n\n\nh1\n\n\nh1\n\n\n\n\nh1\n\n\n\n\n\n\nh2\n\n\nh2\n\n\n\n\nh2\n\n\n\n\n\n\nh3\n\n\nh3\n\n\n\n\nh3\n\n\n\n\n\n\nh4\n\n\nh4\n\n\n\n\nh4\n\n\n\n\n\n\nh5\n\n\nh5\n\n\n\n\nh5\n\n\n\n\n\n\nh6\n\n\nh6\n\n\n\n\nh6\n\n\n\n\n\n\nh7\n\n\nh7\n\n\n\n\nh7\n\n\n\n\n\n\nh8\n\n\nh8\n\n\n\n\nh8\n\n\n\n\n\n\nh9\n\n\nh9\n\n\n\n\nh9\n\n\n\n\n\n\nh10\n\n\nh10\n\n\n\n\nh10\n\n\n\n\n\n\nh11\n\n\nh11\n\n\n\n\nh11\n\n\n\n\n\n\nh12\n\n\nh12\n\n\n\n\nh12\n\n\n\n\n\n\nh13\n\n\nh13\n\n\n\n\nh13\n\n\n\n\n\n\nh14\n\n\nh14\n\n\n\n\nh14\n\n\n\n\n\n\nU\n\n\nU\n\n\n\n\nU\n\n\n\n\n\n\nV\n\n\nV\n\n\n\n\nV\n\n\n\n\n\n\nW\n\n\nW\n\n\n\n\nW\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nPhaseInit\n\n\nInit\n\n\nnone\n\n\nPhaseF\n\n\n\n\n\n\nBaseInit\n\n\nInit_distributions\n\n\nnone\n\n\ng0, g1, g2, g3, g4, g5, g6, g7, g8, g9, g10, g11, g12, g13, g14, g15, g16, g17, g18, g19, g20, g21, g22, g23, g24, g25, g26, h0, h1, h2, h3, h4, h5, h6, h7, h8, h9, h10, h11, h12, h13, h14, U, V, W\n\n\n\n\n\n\ncalcPhase\n\n\ncalcPhaseF\n\n\nh0, h1, h2, h3, h4, h5, h6, h7, h8, h9, h10, h11, h12, h13, h14\n\n\nPhaseF\n\n\n\n\n\n\nBaseIter\n\n\nRun\n\n\ng0, g1, g2, g3, g4, g5, g6, g7, g8, g9, g10, g11, g12, g13, g14, g15, g16, g17, g18, g19, g20, g21, g22, g23, g24, g25, g26, h0, h1, h2, h3, h4, h5, h6, h7, h8, h9, h10, h11, h12, h13, h14, U, V, W\n\n\ng0, g1, g2, g3, g4, g5, g6, g7, g8, g9, g10, g11, g12, g13, g14, g15, g16, g17, g18, g19, g20, g21, g22, g23, g24, g25, g26, h0, h1, h2, h3, h4, h5, h6, h7, h8, h9, h10, h11, h12, h13, h14, U, V, W\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIter, calcPhase\n\n\n\n\n\n\nInit\n\n\nPhaseInit, BaseInit, calcPhase",
            "title": "D3q27 pf velocity"
        },
        {
            "location": "/models/multiphase/d3q27_pf_velocity/d3q27_pf_velocity/#description",
            "text": "d3q27_pf_velocity",
            "title": "Description"
        },
        {
            "location": "/models/multiphase/d3q27_pf_velocity/d3q27_pf_velocity/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/multiphase/d3q27_pf_velocity/d3q27_pf_velocity/#zonal-settings",
            "text": "Name  Comment      PhaseField  Initial PhaseField distribution    VelocityX  inlet/outlet/init velocity    VelocityY  inlet/outlet/init velocity    VelocityZ  inlet/outlet/init velocity    Pressure  inlet/outlet/init density    InterfacePositionInObj  Weight of [trackPosition] in objective    RTISpikeInObj  Weight of [SpikeTracker ] in objective    RTIBubbleInObj  Weight of [BubbleTracker] in objective    RTISaddleInObj  Weight of [SaddleTracker] in objective    PressureLossInObj  Weight of [pressure loss] in objective    OutletFluxInObj  Weight of [pressure loss] in objective    InletFluxInObj  Weight of [pressure loss] in objective    TotalDensityInObj  Weight of [Mass conservation check] in objective",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/multiphase/d3q27_pf_velocity/d3q27_pf_velocity/#global-settings",
            "text": "Name  Derived  Comment      Density_h   High density    Density_l   Low  density    PhaseField_h   PhaseField in Liquid    PhaseField_l   PhaseField gas    IntWidth   Anti-diffusivity coeff    omega_phi  1.0/(3*M+0.5)  one over relaxation time (phase field)    M   Mobility    sigma   surface tension    RTI_Characteristic_Length   Use for RTI instability    Radius   Diffuse Sphere Radius    CenterX   Diffuse sphere center_x    CenterY   Diffuse sphere center_y    CenterZ   Diffuse sphere center_z    BubbleType   droplet or bubble?!    tau_l  (3*Viscosity_l)  relaxation time (low density fluid)    tau_h  (3*Viscosity_h)  relaxation time (high density fluid)    Viscosity_l   kinematic viscosity    Viscosity_h   kinematic viscosity    GravitationX   applied (rho)*GravitationX    GravitationY   applied (rho)*GravitationY    GravitationZ   applied (rho)*GravitationZ    BuoyancyX   applied (rho-rho_h)*BuoyancyX    BuoyancyY   applied (rho-rho_h)*BuoyancyY    BuoyancyZ   applied (rho-rho_h)*BuoyancyZ    Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/multiphase/d3q27_pf_velocity/d3q27_pf_velocity/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      PhaseField  1  PhaseField    U  m/s  U    P  Pa  P",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/multiphase/d3q27_pf_velocity/d3q27_pf_velocity/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      InterfacePosition  1  trackPosition    RTISpike  1  SpikeTracker    RTIBubble  1  BubbleTracker    RTISaddle  1  SaddleTracker    PressureLoss  1mPa  pressure loss    OutletFlux  1m2/s  pressure loss    InletFlux  1m2/s  pressure loss    TotalDensity  1kg/m3  Mass conservation check    Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/multiphase/d3q27_pf_velocity/d3q27_pf_velocity/#node-types",
            "text": "Group  Types      ADDITIONALS  Centerline, Spiketrack, Saddletrack, Bubbletrack, SymmetricXY_W, SymmetricXY_E    BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, MovingWall_N, MovingWall_S    COLLISION  BGK, MRT    DESIGNSPACE  DesignSpace    NONE  None    OBJECTIVE  Inlet, Outlet    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/multiphase/d3q27_pf_velocity/d3q27_pf_velocity/#solved-fields",
            "text": "Name  Access pattern  Comment      g0   g0    g1   g1    g2   g2    g3   g3    g4   g4    g5   g5    g6   g6    g7   g7    g8   g8    g9   g9    g10   g10    g11   g11    g12   g12    g13   g13    g14   g14    g15   g15    g16   g16    g17   g17    g18   g18    g19   g19    g20   g20    g21   g21    g22   g22    g23   g23    g24   g24    g25   g25    g26   g26    h0   h0    h1   h1    h2   h2    h3   h3    h4   h4    h5   h5    h6   h6    h7   h7    h8   h8    h9   h9    h10   h10    h11   h11    h12   h12    h13   h13    h14   h14    U   U    V   V    W   W    PhaseF   PhaseF",
            "title": "Solved fields"
        },
        {
            "location": "/models/multiphase/d3q27_pf_velocity/d3q27_pf_velocity/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment      g0  g0   g0    g1  g1   g1    g2  g2   g2    g3  g3   g3    g4  g4   g4    g5  g5   g5    g6  g6   g6    g7  g7   g7    g8  g8   g8    g9  g9   g9    g10  g10   g10    g11  g11   g11    g12  g12   g12    g13  g13   g13    g14  g14   g14    g15  g15   g15    g16  g16   g16    g17  g17   g17    g18  g18   g18    g19  g19   g19    g20  g20   g20    g21  g21   g21    g22  g22   g22    g23  g23   g23    g24  g24   g24    g25  g25   g25    g26  g26   g26    h0  h0   h0    h1  h1   h1    h2  h2   h2    h3  h3   h3    h4  h4   h4    h5  h5   h5    h6  h6   h6    h7  h7   h7    h8  h8   h8    h9  h9   h9    h10  h10   h10    h11  h11   h11    h12  h12   h12    h13  h13   h13    h14  h14   h14    U  U   U    V  V   V    W  W   W",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/multiphase/d3q27_pf_velocity/d3q27_pf_velocity/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      PhaseInit  Init  none  PhaseF    BaseInit  Init_distributions  none  g0, g1, g2, g3, g4, g5, g6, g7, g8, g9, g10, g11, g12, g13, g14, g15, g16, g17, g18, g19, g20, g21, g22, g23, g24, g25, g26, h0, h1, h2, h3, h4, h5, h6, h7, h8, h9, h10, h11, h12, h13, h14, U, V, W    calcPhase  calcPhaseF  h0, h1, h2, h3, h4, h5, h6, h7, h8, h9, h10, h11, h12, h13, h14  PhaseF    BaseIter  Run  g0, g1, g2, g3, g4, g5, g6, g7, g8, g9, g10, g11, g12, g13, g14, g15, g16, g17, g18, g19, g20, g21, g22, g23, g24, g25, g26, h0, h1, h2, h3, h4, h5, h6, h7, h8, h9, h10, h11, h12, h13, h14, U, V, W  g0, g1, g2, g3, g4, g5, g6, g7, g8, g9, g10, g11, g12, g13, g14, g15, g16, g17, g18, g19, g20, g21, g22, g23, g24, g25, g26, h0, h1, h2, h3, h4, h5, h6, h7, h8, h9, h10, h11, h12, h13, h14, U, V, W",
            "title": "Action stages"
        },
        {
            "location": "/models/multiphase/d3q27_pf_velocity/d3q27_pf_velocity/#actions",
            "text": "Name  Stages      Iteration  BaseIter, calcPhase    Init  PhaseInit, BaseInit, calcPhase",
            "title": "Actions"
        },
        {
            "location": "/models/multiphase/d3q27_pf_velocity/d3q27_pf_velocity_SC/",
            "text": "Description\n\n\nd3q27_pf_velocity_SC\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nPhaseField\n\n\nInitial PhaseField distribution\n\n\n\n\n\n\nVelocityX\n\n\ninlet/outlet/init velocity\n\n\n\n\n\n\nVelocityY\n\n\ninlet/outlet/init velocity\n\n\n\n\n\n\nVelocityZ\n\n\ninlet/outlet/init velocity\n\n\n\n\n\n\nPressure\n\n\ninlet/outlet/init density\n\n\n\n\n\n\nInterfacePositionInObj\n\n\nWeight of [trackPosition] in objective\n\n\n\n\n\n\nRTISpikeInObj\n\n\nWeight of [SpikeTracker ] in objective\n\n\n\n\n\n\nRTIBubbleInObj\n\n\nWeight of [BubbleTracker] in objective\n\n\n\n\n\n\nRTISaddleInObj\n\n\nWeight of [SaddleTracker] in objective\n\n\n\n\n\n\nPressureLossInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\nOutletFluxInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\nInletFluxInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\nTotalDensityInObj\n\n\nWeight of [Mass conservation check] in objective\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nDensity_h\n\n\n\n\nHigh density\n\n\n\n\n\n\nDensity_l\n\n\n\n\nLow  density\n\n\n\n\n\n\nPhaseField_h\n\n\n\n\nPhaseField in Liquid\n\n\n\n\n\n\nPhaseField_l\n\n\n\n\nPhaseField gas\n\n\n\n\n\n\nIntWidth\n\n\n\n\nAnti-diffusivity coeff\n\n\n\n\n\n\nomega_phi\n\n\n1.0/(3*M+0.5)\n\n\none over relaxation time (phase field)\n\n\n\n\n\n\nM\n\n\n\n\nMobility\n\n\n\n\n\n\nsigma\n\n\n\n\nsurface tension\n\n\n\n\n\n\nContactAngle\n\n\n\n\nContact angle of the phases\n\n\n\n\n\n\nRTI_Characteristic_Length\n\n\n\n\nUse for RTI instability\n\n\n\n\n\n\nRadius\n\n\n\n\nDiffuse Sphere Radius\n\n\n\n\n\n\nCenterX\n\n\n\n\nDiffuse sphere center_x\n\n\n\n\n\n\nCenterY\n\n\n\n\nDiffuse sphere center_y\n\n\n\n\n\n\nCenterZ\n\n\n\n\nDiffuse sphere center_z\n\n\n\n\n\n\nBubbleType\n\n\n\n\ndroplet or bubble?!\n\n\n\n\n\n\ntau_l\n\n\n(3*Viscosity_l)\n\n\nrelaxation time (low density fluid)\n\n\n\n\n\n\ntau_h\n\n\n(3*Viscosity_h)\n\n\nrelaxation time (high density fluid)\n\n\n\n\n\n\nViscosity_l\n\n\n\n\nkinematic viscosity\n\n\n\n\n\n\nViscosity_h\n\n\n\n\nkinematic viscosity\n\n\n\n\n\n\nGravitationX\n\n\n\n\napplied (rho)*GravitationX\n\n\n\n\n\n\nGravitationY\n\n\n\n\napplied (rho)*GravitationY\n\n\n\n\n\n\nGravitationZ\n\n\n\n\napplied (rho)*GravitationZ\n\n\n\n\n\n\nBuoyancyX\n\n\n\n\napplied (rho-rho_h)*BuoyancyX\n\n\n\n\n\n\nBuoyancyY\n\n\n\n\napplied (rho-rho_h)*BuoyancyY\n\n\n\n\n\n\nBuoyancyZ\n\n\n\n\napplied (rho-rho_h)*BuoyancyZ\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nPhaseField\n\n\n1\n\n\nPhaseField\n\n\n\n\n\n\nU\n\n\nm/s\n\n\nU\n\n\n\n\n\n\nP\n\n\nPa\n\n\nP\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nInterfacePosition\n\n\n1\n\n\ntrackPosition\n\n\n\n\n\n\nRTISpike\n\n\n1\n\n\nSpikeTracker\n\n\n\n\n\n\nRTIBubble\n\n\n1\n\n\nBubbleTracker\n\n\n\n\n\n\nRTISaddle\n\n\n1\n\n\nSaddleTracker\n\n\n\n\n\n\nPressureLoss\n\n\n1mPa\n\n\npressure loss\n\n\n\n\n\n\nOutletFlux\n\n\n1m2/s\n\n\npressure loss\n\n\n\n\n\n\nInletFlux\n\n\n1m2/s\n\n\npressure loss\n\n\n\n\n\n\nTotalDensity\n\n\n1kg/m3\n\n\nMass conservation check\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nADDITIONALS\n\n\nCenterline, Spiketrack, Saddletrack, Bubbletrack, SymmetricXY_W, SymmetricXY_E\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, MovingWall_N, MovingWall_S\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\ng0\n\n\n\n\ng0\n\n\n\n\n\n\ng1\n\n\n\n\ng1\n\n\n\n\n\n\ng2\n\n\n\n\ng2\n\n\n\n\n\n\ng3\n\n\n\n\ng3\n\n\n\n\n\n\ng4\n\n\n\n\ng4\n\n\n\n\n\n\ng5\n\n\n\n\ng5\n\n\n\n\n\n\ng6\n\n\n\n\ng6\n\n\n\n\n\n\ng7\n\n\n\n\ng7\n\n\n\n\n\n\ng8\n\n\n\n\ng8\n\n\n\n\n\n\ng9\n\n\n\n\ng9\n\n\n\n\n\n\ng10\n\n\n\n\ng10\n\n\n\n\n\n\ng11\n\n\n\n\ng11\n\n\n\n\n\n\ng12\n\n\n\n\ng12\n\n\n\n\n\n\ng13\n\n\n\n\ng13\n\n\n\n\n\n\ng14\n\n\n\n\ng14\n\n\n\n\n\n\ng15\n\n\n\n\ng15\n\n\n\n\n\n\ng16\n\n\n\n\ng16\n\n\n\n\n\n\ng17\n\n\n\n\ng17\n\n\n\n\n\n\ng18\n\n\n\n\ng18\n\n\n\n\n\n\ng19\n\n\n\n\ng19\n\n\n\n\n\n\ng20\n\n\n\n\ng20\n\n\n\n\n\n\ng21\n\n\n\n\ng21\n\n\n\n\n\n\ng22\n\n\n\n\ng22\n\n\n\n\n\n\ng23\n\n\n\n\ng23\n\n\n\n\n\n\ng24\n\n\n\n\ng24\n\n\n\n\n\n\ng25\n\n\n\n\ng25\n\n\n\n\n\n\ng26\n\n\n\n\ng26\n\n\n\n\n\n\nh0\n\n\n\n\nh0\n\n\n\n\n\n\nh1\n\n\n\n\nh1\n\n\n\n\n\n\nh2\n\n\n\n\nh2\n\n\n\n\n\n\nh3\n\n\n\n\nh3\n\n\n\n\n\n\nh4\n\n\n\n\nh4\n\n\n\n\n\n\nh5\n\n\n\n\nh5\n\n\n\n\n\n\nh6\n\n\n\n\nh6\n\n\n\n\n\n\nh7\n\n\n\n\nh7\n\n\n\n\n\n\nh8\n\n\n\n\nh8\n\n\n\n\n\n\nh9\n\n\n\n\nh9\n\n\n\n\n\n\nh10\n\n\n\n\nh10\n\n\n\n\n\n\nh11\n\n\n\n\nh11\n\n\n\n\n\n\nh12\n\n\n\n\nh12\n\n\n\n\n\n\nh13\n\n\n\n\nh13\n\n\n\n\n\n\nh14\n\n\n\n\nh14\n\n\n\n\n\n\nU\n\n\n\n\nU\n\n\n\n\n\n\nV\n\n\n\n\nV\n\n\n\n\n\n\nW\n\n\n\n\nW\n\n\n\n\n\n\nPhaseF\n\n\n\n\nPhaseF\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\ng0\n\n\ng0\n\n\n\n\ng0\n\n\n\n\n\n\ng1\n\n\ng1\n\n\n\n\ng1\n\n\n\n\n\n\ng2\n\n\ng2\n\n\n\n\ng2\n\n\n\n\n\n\ng3\n\n\ng3\n\n\n\n\ng3\n\n\n\n\n\n\ng4\n\n\ng4\n\n\n\n\ng4\n\n\n\n\n\n\ng5\n\n\ng5\n\n\n\n\ng5\n\n\n\n\n\n\ng6\n\n\ng6\n\n\n\n\ng6\n\n\n\n\n\n\ng7\n\n\ng7\n\n\n\n\ng7\n\n\n\n\n\n\ng8\n\n\ng8\n\n\n\n\ng8\n\n\n\n\n\n\ng9\n\n\ng9\n\n\n\n\ng9\n\n\n\n\n\n\ng10\n\n\ng10\n\n\n\n\ng10\n\n\n\n\n\n\ng11\n\n\ng11\n\n\n\n\ng11\n\n\n\n\n\n\ng12\n\n\ng12\n\n\n\n\ng12\n\n\n\n\n\n\ng13\n\n\ng13\n\n\n\n\ng13\n\n\n\n\n\n\ng14\n\n\ng14\n\n\n\n\ng14\n\n\n\n\n\n\ng15\n\n\ng15\n\n\n\n\ng15\n\n\n\n\n\n\ng16\n\n\ng16\n\n\n\n\ng16\n\n\n\n\n\n\ng17\n\n\ng17\n\n\n\n\ng17\n\n\n\n\n\n\ng18\n\n\ng18\n\n\n\n\ng18\n\n\n\n\n\n\ng19\n\n\ng19\n\n\n\n\ng19\n\n\n\n\n\n\ng20\n\n\ng20\n\n\n\n\ng20\n\n\n\n\n\n\ng21\n\n\ng21\n\n\n\n\ng21\n\n\n\n\n\n\ng22\n\n\ng22\n\n\n\n\ng22\n\n\n\n\n\n\ng23\n\n\ng23\n\n\n\n\ng23\n\n\n\n\n\n\ng24\n\n\ng24\n\n\n\n\ng24\n\n\n\n\n\n\ng25\n\n\ng25\n\n\n\n\ng25\n\n\n\n\n\n\ng26\n\n\ng26\n\n\n\n\ng26\n\n\n\n\n\n\nh0\n\n\nh0\n\n\n\n\nh0\n\n\n\n\n\n\nh1\n\n\nh1\n\n\n\n\nh1\n\n\n\n\n\n\nh2\n\n\nh2\n\n\n\n\nh2\n\n\n\n\n\n\nh3\n\n\nh3\n\n\n\n\nh3\n\n\n\n\n\n\nh4\n\n\nh4\n\n\n\n\nh4\n\n\n\n\n\n\nh5\n\n\nh5\n\n\n\n\nh5\n\n\n\n\n\n\nh6\n\n\nh6\n\n\n\n\nh6\n\n\n\n\n\n\nh7\n\n\nh7\n\n\n\n\nh7\n\n\n\n\n\n\nh8\n\n\nh8\n\n\n\n\nh8\n\n\n\n\n\n\nh9\n\n\nh9\n\n\n\n\nh9\n\n\n\n\n\n\nh10\n\n\nh10\n\n\n\n\nh10\n\n\n\n\n\n\nh11\n\n\nh11\n\n\n\n\nh11\n\n\n\n\n\n\nh12\n\n\nh12\n\n\n\n\nh12\n\n\n\n\n\n\nh13\n\n\nh13\n\n\n\n\nh13\n\n\n\n\n\n\nh14\n\n\nh14\n\n\n\n\nh14\n\n\n\n\n\n\nU\n\n\nU\n\n\n\n\nU\n\n\n\n\n\n\nV\n\n\nV\n\n\n\n\nV\n\n\n\n\n\n\nW\n\n\nW\n\n\n\n\nW\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nPhaseInit\n\n\nInit\n\n\nnone\n\n\nPhaseF\n\n\n\n\n\n\nBaseInit\n\n\nInit_distributions\n\n\nnone\n\n\ng0, g1, g2, g3, g4, g5, g6, g7, g8, g9, g10, g11, g12, g13, g14, g15, g16, g17, g18, g19, g20, g21, g22, g23, g24, g25, g26, h0, h1, h2, h3, h4, h5, h6, h7, h8, h9, h10, h11, h12, h13, h14, U, V, W\n\n\n\n\n\n\ncalcPhase\n\n\ncalcPhaseF\n\n\nh0, h1, h2, h3, h4, h5, h6, h7, h8, h9, h10, h11, h12, h13, h14\n\n\nPhaseF\n\n\n\n\n\n\nBaseIter\n\n\nRun\n\n\ng0, g1, g2, g3, g4, g5, g6, g7, g8, g9, g10, g11, g12, g13, g14, g15, g16, g17, g18, g19, g20, g21, g22, g23, g24, g25, g26, h0, h1, h2, h3, h4, h5, h6, h7, h8, h9, h10, h11, h12, h13, h14, U, V, W\n\n\ng0, g1, g2, g3, g4, g5, g6, g7, g8, g9, g10, g11, g12, g13, g14, g15, g16, g17, g18, g19, g20, g21, g22, g23, g24, g25, g26, h0, h1, h2, h3, h4, h5, h6, h7, h8, h9, h10, h11, h12, h13, h14, U, V, W\n\n\n\n\n\n\nWallPhase\n\n\ncalcWallPhase\n\n\nnone\n\n\nPhaseF\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIter, calcPhase, WallPhase\n\n\n\n\n\n\nInit\n\n\nPhaseInit, WallPhase, BaseInit, calcPhase",
            "title": "d3q27 pf velocity SC"
        },
        {
            "location": "/models/multiphase/d3q27_pf_velocity/d3q27_pf_velocity_SC/#description",
            "text": "d3q27_pf_velocity_SC",
            "title": "Description"
        },
        {
            "location": "/models/multiphase/d3q27_pf_velocity/d3q27_pf_velocity_SC/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/multiphase/d3q27_pf_velocity/d3q27_pf_velocity_SC/#zonal-settings",
            "text": "Name  Comment      PhaseField  Initial PhaseField distribution    VelocityX  inlet/outlet/init velocity    VelocityY  inlet/outlet/init velocity    VelocityZ  inlet/outlet/init velocity    Pressure  inlet/outlet/init density    InterfacePositionInObj  Weight of [trackPosition] in objective    RTISpikeInObj  Weight of [SpikeTracker ] in objective    RTIBubbleInObj  Weight of [BubbleTracker] in objective    RTISaddleInObj  Weight of [SaddleTracker] in objective    PressureLossInObj  Weight of [pressure loss] in objective    OutletFluxInObj  Weight of [pressure loss] in objective    InletFluxInObj  Weight of [pressure loss] in objective    TotalDensityInObj  Weight of [Mass conservation check] in objective",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/multiphase/d3q27_pf_velocity/d3q27_pf_velocity_SC/#global-settings",
            "text": "Name  Derived  Comment      Density_h   High density    Density_l   Low  density    PhaseField_h   PhaseField in Liquid    PhaseField_l   PhaseField gas    IntWidth   Anti-diffusivity coeff    omega_phi  1.0/(3*M+0.5)  one over relaxation time (phase field)    M   Mobility    sigma   surface tension    ContactAngle   Contact angle of the phases    RTI_Characteristic_Length   Use for RTI instability    Radius   Diffuse Sphere Radius    CenterX   Diffuse sphere center_x    CenterY   Diffuse sphere center_y    CenterZ   Diffuse sphere center_z    BubbleType   droplet or bubble?!    tau_l  (3*Viscosity_l)  relaxation time (low density fluid)    tau_h  (3*Viscosity_h)  relaxation time (high density fluid)    Viscosity_l   kinematic viscosity    Viscosity_h   kinematic viscosity    GravitationX   applied (rho)*GravitationX    GravitationY   applied (rho)*GravitationY    GravitationZ   applied (rho)*GravitationZ    BuoyancyX   applied (rho-rho_h)*BuoyancyX    BuoyancyY   applied (rho-rho_h)*BuoyancyY    BuoyancyZ   applied (rho-rho_h)*BuoyancyZ    Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/multiphase/d3q27_pf_velocity/d3q27_pf_velocity_SC/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      PhaseField  1  PhaseField    U  m/s  U    P  Pa  P",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/multiphase/d3q27_pf_velocity/d3q27_pf_velocity_SC/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      InterfacePosition  1  trackPosition    RTISpike  1  SpikeTracker    RTIBubble  1  BubbleTracker    RTISaddle  1  SaddleTracker    PressureLoss  1mPa  pressure loss    OutletFlux  1m2/s  pressure loss    InletFlux  1m2/s  pressure loss    TotalDensity  1kg/m3  Mass conservation check    Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/multiphase/d3q27_pf_velocity/d3q27_pf_velocity_SC/#node-types",
            "text": "Group  Types      ADDITIONALS  Centerline, Spiketrack, Saddletrack, Bubbletrack, SymmetricXY_W, SymmetricXY_E    BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, MovingWall_N, MovingWall_S    COLLISION  BGK, MRT    DESIGNSPACE  DesignSpace    NONE  None    OBJECTIVE  Inlet, Outlet    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/multiphase/d3q27_pf_velocity/d3q27_pf_velocity_SC/#solved-fields",
            "text": "Name  Access pattern  Comment      g0   g0    g1   g1    g2   g2    g3   g3    g4   g4    g5   g5    g6   g6    g7   g7    g8   g8    g9   g9    g10   g10    g11   g11    g12   g12    g13   g13    g14   g14    g15   g15    g16   g16    g17   g17    g18   g18    g19   g19    g20   g20    g21   g21    g22   g22    g23   g23    g24   g24    g25   g25    g26   g26    h0   h0    h1   h1    h2   h2    h3   h3    h4   h4    h5   h5    h6   h6    h7   h7    h8   h8    h9   h9    h10   h10    h11   h11    h12   h12    h13   h13    h14   h14    U   U    V   V    W   W    PhaseF   PhaseF",
            "title": "Solved fields"
        },
        {
            "location": "/models/multiphase/d3q27_pf_velocity/d3q27_pf_velocity_SC/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment      g0  g0   g0    g1  g1   g1    g2  g2   g2    g3  g3   g3    g4  g4   g4    g5  g5   g5    g6  g6   g6    g7  g7   g7    g8  g8   g8    g9  g9   g9    g10  g10   g10    g11  g11   g11    g12  g12   g12    g13  g13   g13    g14  g14   g14    g15  g15   g15    g16  g16   g16    g17  g17   g17    g18  g18   g18    g19  g19   g19    g20  g20   g20    g21  g21   g21    g22  g22   g22    g23  g23   g23    g24  g24   g24    g25  g25   g25    g26  g26   g26    h0  h0   h0    h1  h1   h1    h2  h2   h2    h3  h3   h3    h4  h4   h4    h5  h5   h5    h6  h6   h6    h7  h7   h7    h8  h8   h8    h9  h9   h9    h10  h10   h10    h11  h11   h11    h12  h12   h12    h13  h13   h13    h14  h14   h14    U  U   U    V  V   V    W  W   W",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/multiphase/d3q27_pf_velocity/d3q27_pf_velocity_SC/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      PhaseInit  Init  none  PhaseF    BaseInit  Init_distributions  none  g0, g1, g2, g3, g4, g5, g6, g7, g8, g9, g10, g11, g12, g13, g14, g15, g16, g17, g18, g19, g20, g21, g22, g23, g24, g25, g26, h0, h1, h2, h3, h4, h5, h6, h7, h8, h9, h10, h11, h12, h13, h14, U, V, W    calcPhase  calcPhaseF  h0, h1, h2, h3, h4, h5, h6, h7, h8, h9, h10, h11, h12, h13, h14  PhaseF    BaseIter  Run  g0, g1, g2, g3, g4, g5, g6, g7, g8, g9, g10, g11, g12, g13, g14, g15, g16, g17, g18, g19, g20, g21, g22, g23, g24, g25, g26, h0, h1, h2, h3, h4, h5, h6, h7, h8, h9, h10, h11, h12, h13, h14, U, V, W  g0, g1, g2, g3, g4, g5, g6, g7, g8, g9, g10, g11, g12, g13, g14, g15, g16, g17, g18, g19, g20, g21, g22, g23, g24, g25, g26, h0, h1, h2, h3, h4, h5, h6, h7, h8, h9, h10, h11, h12, h13, h14, U, V, W    WallPhase  calcWallPhase  none  PhaseF",
            "title": "Action stages"
        },
        {
            "location": "/models/multiphase/d3q27_pf_velocity/d3q27_pf_velocity_SC/#actions",
            "text": "Name  Stages      Iteration  BaseIter, calcPhase, WallPhase    Init  PhaseInit, WallPhase, BaseInit, calcPhase",
            "title": "Actions"
        },
        {
            "location": "/models/multiphase/experimental/d2q9_lee/",
            "text": "Description\n\n\nd2q9_lee\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nInletVelocity\n\n\ninlet velocity\n\n\n\n\n\n\nInletPressure\n\n\ninlet pressure\n\n\n\n\n\n\nInletDensity\n\n\ninlet density\n\n\n\n\n\n\nOutletDensity\n\n\ninlet density\n\n\n\n\n\n\nInitDensity\n\n\ninlet density\n\n\n\n\n\n\nWallDensity\n\n\nvapor/liquid density of wall\n\n\n\n\n\n\nMovingWallVelocity\n\n\nVelocity of the MovingWall\n\n\n\n\n\n\nWetDensity\n\n\nwet density\n\n\n\n\n\n\nDryDensity\n\n\ndry density\n\n\n\n\n\n\nWetting\n\n\nwetting factor\n\n\n\n\n\n\nMomentumXInObj\n\n\nWeight of [momentum] in objective\n\n\n\n\n\n\nMomentumYInObj\n\n\nWeight of [momentum] in objective\n\n\n\n\n\n\nMassInObj\n\n\nWeight of [mass] in objective\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nomega\n\n\n1.0/(3*nu + 0.5)\n\n\none over relaxation time\n\n\n\n\n\n\nnu\n\n\n\n\nviscosity\n\n\n\n\n\n\nGravitationY\n\n\n\n\nGravitation in the direction of y\n\n\n\n\n\n\nGravitationX\n\n\n\n\nGravitation in the direction of x\n\n\n\n\n\n\nLiquidDensity\n\n\n\n\nDensity of liquid phase\n\n\n\n\n\n\nVaporDensity\n\n\n\n\nDensity of vapor phase\n\n\n\n\n\n\nBeta\n\n\n\n\nBeta of Lee model\n\n\n\n\n\n\nKappa\n\n\n\n\nCapilarity\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nRho\n\n\nkg/m3\n\n\nRho\n\n\n\n\n\n\nU\n\n\nm/s\n\n\nU\n\n\n\n\n\n\nNu\n\n\nkg/m3\n\n\nNu\n\n\n\n\n\n\nP\n\n\nPa\n\n\nP\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nMomentumX\n\n\n1\n\n\nmomentum\n\n\n\n\n\n\nMomentumY\n\n\n1\n\n\nmomentum\n\n\n\n\n\n\nMass\n\n\n1\n\n\nmass\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nADDITIONALS\n\n\nWet, Dry\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, MovingWall, ForcedMovingWall\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf0\n\n\n\n\nf0\n\n\n\n\n\n\nf1\n\n\n\n\nf1\n\n\n\n\n\n\nf2\n\n\n\n\nf2\n\n\n\n\n\n\nf3\n\n\n\n\nf3\n\n\n\n\n\n\nf4\n\n\n\n\nf4\n\n\n\n\n\n\nf5\n\n\n\n\nf5\n\n\n\n\n\n\nf6\n\n\n\n\nf6\n\n\n\n\n\n\nf7\n\n\n\n\nf7\n\n\n\n\n\n\nf8\n\n\n\n\nf8\n\n\n\n\n\n\nrho\n\n\n\n\nrho\n\n\n\n\n\n\nnu\n\n\n\n\nnu\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf0\n\n\nf0\n\n\n\n\nf0\n\n\n\n\n\n\nf1\n\n\nf1\n\n\n\n\nf1\n\n\n\n\n\n\nf2\n\n\nf2\n\n\n\n\nf2\n\n\n\n\n\n\nf3\n\n\nf3\n\n\n\n\nf3\n\n\n\n\n\n\nf4\n\n\nf4\n\n\n\n\nf4\n\n\n\n\n\n\nf5\n\n\nf5\n\n\n\n\nf5\n\n\n\n\n\n\nf6\n\n\nf6\n\n\n\n\nf6\n\n\n\n\n\n\nf7\n\n\nf7\n\n\n\n\nf7\n\n\n\n\n\n\nf8\n\n\nf8\n\n\n\n\nf8\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nBaseIteration\n\n\nRun\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8\n\n\n\n\n\n\nCalcRho\n\n\nCalcRho\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8\n\n\nrho\n\n\n\n\n\n\nCalcNu\n\n\nCalcNu\n\n\nnone\n\n\nnu\n\n\n\n\n\n\nInitRho\n\n\nInitRho\n\n\nnone\n\n\nrho\n\n\n\n\n\n\nInitF\n\n\nInitF\n\n\nnone\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8\n\n\n\n\n\n\nInitF2\n\n\nInitF2\n\n\nnone\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIteration, CalcRho, CalcNu\n\n\n\n\n\n\nInit\n\n\nInitF2, CalcRho, CalcNu",
            "title": "D2q9 lee"
        },
        {
            "location": "/models/multiphase/experimental/d2q9_lee/#description",
            "text": "d2q9_lee",
            "title": "Description"
        },
        {
            "location": "/models/multiphase/experimental/d2q9_lee/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/multiphase/experimental/d2q9_lee/#zonal-settings",
            "text": "Name  Comment      InletVelocity  inlet velocity    InletPressure  inlet pressure    InletDensity  inlet density    OutletDensity  inlet density    InitDensity  inlet density    WallDensity  vapor/liquid density of wall    MovingWallVelocity  Velocity of the MovingWall    WetDensity  wet density    DryDensity  dry density    Wetting  wetting factor    MomentumXInObj  Weight of [momentum] in objective    MomentumYInObj  Weight of [momentum] in objective    MassInObj  Weight of [mass] in objective",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/multiphase/experimental/d2q9_lee/#global-settings",
            "text": "Name  Derived  Comment      omega  1.0/(3*nu + 0.5)  one over relaxation time    nu   viscosity    GravitationY   Gravitation in the direction of y    GravitationX   Gravitation in the direction of x    LiquidDensity   Density of liquid phase    VaporDensity   Density of vapor phase    Beta   Beta of Lee model    Kappa   Capilarity    Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/multiphase/experimental/d2q9_lee/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      Rho  kg/m3  Rho    U  m/s  U    Nu  kg/m3  Nu    P  Pa  P",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/multiphase/experimental/d2q9_lee/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      MomentumX  1  momentum    MomentumY  1  momentum    Mass  1  mass    Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/multiphase/experimental/d2q9_lee/#node-types",
            "text": "Group  Types      ADDITIONALS  Wet, Dry    BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, MovingWall, ForcedMovingWall    COLLISION  BGK, MRT    DESIGNSPACE  DesignSpace    NONE  None    OBJECTIVE  Inlet, Outlet    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/multiphase/experimental/d2q9_lee/#solved-fields",
            "text": "Name  Access pattern  Comment      f0   f0    f1   f1    f2   f2    f3   f3    f4   f4    f5   f5    f6   f6    f7   f7    f8   f8    rho   rho    nu   nu",
            "title": "Solved fields"
        },
        {
            "location": "/models/multiphase/experimental/d2q9_lee/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment      f0  f0   f0    f1  f1   f1    f2  f2   f2    f3  f3   f3    f4  f4   f4    f5  f5   f5    f6  f6   f6    f7  f7   f7    f8  f8   f8",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/multiphase/experimental/d2q9_lee/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      BaseIteration  Run  f0, f1, f2, f3, f4, f5, f6, f7, f8  f0, f1, f2, f3, f4, f5, f6, f7, f8    CalcRho  CalcRho  f0, f1, f2, f3, f4, f5, f6, f7, f8  rho    CalcNu  CalcNu  none  nu    InitRho  InitRho  none  rho    InitF  InitF  none  f0, f1, f2, f3, f4, f5, f6, f7, f8    InitF2  InitF2  none  f0, f1, f2, f3, f4, f5, f6, f7, f8",
            "title": "Action stages"
        },
        {
            "location": "/models/multiphase/experimental/d2q9_lee/#actions",
            "text": "Name  Stages      Iteration  BaseIteration, CalcRho, CalcNu    Init  InitF2, CalcRho, CalcNu",
            "title": "Actions"
        },
        {
            "location": "/models/multiphase/experimental/d2q9_pp_LBL/",
            "text": "Description\n\n\nd2q9_pp_LBL\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nVelocity\n\n\ninlet/outlet/init velocity\n\n\n\n\n\n\nVelocityY\n\n\ninit velocity in y dirn\n\n\n\n\n\n\nDensity\n\n\ninlet/outlet/init density\n\n\n\n\n\n\nPressureLossInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\nOutletFluxInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\nInletFluxInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nG\n\n\n\n\ninteraction strength\n\n\n\n\n\n\nT\n\n\n\n\neffective temperature\n\n\n\n\n\n\nalpha\n\n\n\n\nCS EoS parameter\n\n\n\n\n\n\nR\n\n\n\n\nCS EoS parameter\n\n\n\n\n\n\nbeta\n\n\n\n\nCS EoS parameter\n\n\n\n\n\n\nkappa\n\n\n\n\nsurface tension parameter\n\n\n\n\n\n\neps_0\n\n\n\n\nmechanical stability coef\n\n\n\n\n\n\nbetaforcing\n\n\n\n\nbeta forcing scheme\n\n\n\n\n\n\nomega\n\n\n1.0/(3*nu + 0.5)\n\n\none over relaxation time\n\n\n\n\n\n\ntempomega\n\n\n\n\nomega seems to get overwritten in preamble??\n\n\n\n\n\n\nnu\n\n\n\n\nviscosity\n\n\n\n\n\n\nGravitationY\n\n\n\n\nGravitation in the direction of y\n\n\n\n\n\n\nGravitationX\n\n\n\n\nGravitation in the direction of x\n\n\n\n\n\n\nS0\n\n\n\n\nMRT Sx\n\n\n\n\n\n\nS1\n\n\n\n\nMRT Sx\n\n\n\n\n\n\nS2\n\n\n\n\nMRT Sx\n\n\n\n\n\n\nS3\n\n\n\n\nMRT Sx\n\n\n\n\n\n\nS4\n\n\n\n\nMRT Sx\n\n\n\n\n\n\nS5\n\n\n\n\nMRT Sx\n\n\n\n\n\n\nS6\n\n\n\n\nMRT Sx\n\n\n\n\n\n\nS7\n\n\n1-omega\n\n\nMRT Sx\n\n\n\n\n\n\nS8\n\n\n\n\nMRT Sx\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nRho\n\n\nkg/m3\n\n\nRho\n\n\n\n\n\n\nU\n\n\nm/s\n\n\nU\n\n\n\n\n\n\nF\n\n\nN\n\n\nF\n\n\n\n\n\n\nP\n\n\nPa\n\n\nP\n\n\n\n\n\n\nPsi\n\n\n1\n\n\nPsi\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nPressureLoss\n\n\n1mPa\n\n\npressure loss\n\n\n\n\n\n\nOutletFlux\n\n\n1m2/s\n\n\npressure loss\n\n\n\n\n\n\nInletFlux\n\n\n1m2/s\n\n\npressure loss\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, BottomSymmetry, TopSymmetry, RightSymmetry\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf[0]\n\n\n\n\nf[0]\n\n\n\n\n\n\nf[1]\n\n\n\n\nf[1]\n\n\n\n\n\n\nf[2]\n\n\n\n\nf[2]\n\n\n\n\n\n\nf[3]\n\n\n\n\nf[3]\n\n\n\n\n\n\nf[4]\n\n\n\n\nf[4]\n\n\n\n\n\n\nf[5]\n\n\n\n\nf[5]\n\n\n\n\n\n\nf[6]\n\n\n\n\nf[6]\n\n\n\n\n\n\nf[7]\n\n\n\n\nf[7]\n\n\n\n\n\n\nf[8]\n\n\n\n\nf[8]\n\n\n\n\n\n\npsi\n\n\n\n\npsi\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf[0]\n\n\nf[0]\n\n\n\n\nf[0]\n\n\n\n\n\n\nf[1]\n\n\nf[1]\n\n\n\n\nf[1]\n\n\n\n\n\n\nf[2]\n\n\nf[2]\n\n\n\n\nf[2]\n\n\n\n\n\n\nf[3]\n\n\nf[3]\n\n\n\n\nf[3]\n\n\n\n\n\n\nf[4]\n\n\nf[4]\n\n\n\n\nf[4]\n\n\n\n\n\n\nf[5]\n\n\nf[5]\n\n\n\n\nf[5]\n\n\n\n\n\n\nf[6]\n\n\nf[6]\n\n\n\n\nf[6]\n\n\n\n\n\n\nf[7]\n\n\nf[7]\n\n\n\n\nf[7]\n\n\n\n\n\n\nf[8]\n\n\nf[8]\n\n\n\n\nf[8]\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nBaseIteration\n\n\nRun\n\n\nf[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8]\n\n\nf[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8]\n\n\n\n\n\n\ncalcPsi\n\n\ncalcPsi\n\n\nf[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8]\n\n\npsi\n\n\n\n\n\n\nBaseInit\n\n\nInit\n\n\nf[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8]\n\n\nf[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8]\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIteration, calcPsi\n\n\n\n\n\n\nInit\n\n\nBaseInit, calcPsi",
            "title": "d2q9 pp LBL"
        },
        {
            "location": "/models/multiphase/experimental/d2q9_pp_LBL/#description",
            "text": "d2q9_pp_LBL",
            "title": "Description"
        },
        {
            "location": "/models/multiphase/experimental/d2q9_pp_LBL/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/multiphase/experimental/d2q9_pp_LBL/#zonal-settings",
            "text": "Name  Comment      Velocity  inlet/outlet/init velocity    VelocityY  init velocity in y dirn    Density  inlet/outlet/init density    PressureLossInObj  Weight of [pressure loss] in objective    OutletFluxInObj  Weight of [pressure loss] in objective    InletFluxInObj  Weight of [pressure loss] in objective",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/multiphase/experimental/d2q9_pp_LBL/#global-settings",
            "text": "Name  Derived  Comment      G   interaction strength    T   effective temperature    alpha   CS EoS parameter    R   CS EoS parameter    beta   CS EoS parameter    kappa   surface tension parameter    eps_0   mechanical stability coef    betaforcing   beta forcing scheme    omega  1.0/(3*nu + 0.5)  one over relaxation time    tempomega   omega seems to get overwritten in preamble??    nu   viscosity    GravitationY   Gravitation in the direction of y    GravitationX   Gravitation in the direction of x    S0   MRT Sx    S1   MRT Sx    S2   MRT Sx    S3   MRT Sx    S4   MRT Sx    S5   MRT Sx    S6   MRT Sx    S7  1-omega  MRT Sx    S8   MRT Sx    Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/multiphase/experimental/d2q9_pp_LBL/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      Rho  kg/m3  Rho    U  m/s  U    F  N  F    P  Pa  P    Psi  1  Psi",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/multiphase/experimental/d2q9_pp_LBL/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      PressureLoss  1mPa  pressure loss    OutletFlux  1m2/s  pressure loss    InletFlux  1m2/s  pressure loss    Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/multiphase/experimental/d2q9_pp_LBL/#node-types",
            "text": "Group  Types      BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, BottomSymmetry, TopSymmetry, RightSymmetry    COLLISION  BGK, MRT    DESIGNSPACE  DesignSpace    NONE  None    OBJECTIVE  Inlet, Outlet    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/multiphase/experimental/d2q9_pp_LBL/#solved-fields",
            "text": "Name  Access pattern  Comment      f[0]   f[0]    f[1]   f[1]    f[2]   f[2]    f[3]   f[3]    f[4]   f[4]    f[5]   f[5]    f[6]   f[6]    f[7]   f[7]    f[8]   f[8]    psi   psi",
            "title": "Solved fields"
        },
        {
            "location": "/models/multiphase/experimental/d2q9_pp_LBL/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment      f[0]  f[0]   f[0]    f[1]  f[1]   f[1]    f[2]  f[2]   f[2]    f[3]  f[3]   f[3]    f[4]  f[4]   f[4]    f[5]  f[5]   f[5]    f[6]  f[6]   f[6]    f[7]  f[7]   f[7]    f[8]  f[8]   f[8]",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/multiphase/experimental/d2q9_pp_LBL/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      BaseIteration  Run  f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8]  f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8]    calcPsi  calcPsi  f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8]  psi    BaseInit  Init  f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8]  f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8]",
            "title": "Action stages"
        },
        {
            "location": "/models/multiphase/experimental/d2q9_pp_LBL/#actions",
            "text": "Name  Stages      Iteration  BaseIteration, calcPsi    Init  BaseInit, calcPsi",
            "title": "Actions"
        },
        {
            "location": "/models/multiphase/experimental/d2q9_pp_MCMP/",
            "text": "Description\n\n\nd2q9_pp_MCMP\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nVelocity_f\n\n\ninlet/outlet/init velocity 1st pop\n\n\n\n\n\n\nPressure_f\n\n\ninlet/outlet/init density 1st pop\n\n\n\n\n\n\nVelocity_g\n\n\ninlet/outlet/init velocity 2nd pop\n\n\n\n\n\n\nPressure_g\n\n\ninlet/outlet/init density 2nd pop\n\n\n\n\n\n\nDensity\n\n\nhigher density fluid - multiphase capable\n\n\n\n\n\n\nDensity_dry\n\n\nlower density fluid  - ideal gas assumption\n\n\n\n\n\n\nTotalDensity1InObj\n\n\nWeight of [quantity of fluid-1] in objective\n\n\n\n\n\n\nTotalDensity2InObj\n\n\nWeight of [quantity of fluid-2] in objective\n\n\n\n\n\n\nPressureLossInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\nOutletFluxInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\nInletFluxInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nomega\n\n\n1.0/(3*nu + 0.5)\n\n\none over relaxation time-wet\n\n\n\n\n\n\nomega_g\n\n\n1.0/(3*nu_g + 0.5)\n\n\none over relaxation time-dry\n\n\n\n\n\n\nnu\n\n\n\n\nviscosity-wet\n\n\n\n\n\n\nnu_g\n\n\n\n\nviscosity-dry\n\n\n\n\n\n\nGc\n\n\n\n\nfluid1/2-fluid2/1 interation\n\n\n\n\n\n\nGad1\n\n\n\n\nfluid1-wall interation\n\n\n\n\n\n\nGad2\n\n\n\n\nfluid2-wall interation\n\n\n\n\n\n\nR\n\n\n\n\nEoS gas const\n\n\n\n\n\n\nT\n\n\n\n\nEoS reduced temp\n\n\n\n\n\n\na\n\n\n\n\nEoS a\n\n\n\n\n\n\nb\n\n\n\n\nEoS b\n\n\n\n\n\n\nSmag\n\n\n\n\nSmagorinsky constant\n\n\n\n\n\n\nSL_U\n\n\n\n\nShear Layer velocity\n\n\n\n\n\n\nSL_lambda\n\n\n\n\nShear Layer lambda\n\n\n\n\n\n\nSL_delta\n\n\n\n\nShear Layer disturbance\n\n\n\n\n\n\nSL_L\n\n\n\n\nShear Layer length scale\n\n\n\n\n\n\nGravitationX\n\n\n\n\nBody Force\n\n\n\n\n\n\nGravitationY\n\n\n\n\nBody Force\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nRho\n\n\nkg/m3\n\n\nRho\n\n\n\n\n\n\nRhof\n\n\nkg/m3\n\n\nRhof\n\n\n\n\n\n\nRhog\n\n\nkg/m3\n\n\nRhog\n\n\n\n\n\n\nP\n\n\nPa\n\n\nP\n\n\n\n\n\n\nU\n\n\nm/s\n\n\nU\n\n\n\n\n\n\nA\n\n\n1\n\n\nA\n\n\n\n\n\n\nFf\n\n\nN\n\n\nFf\n\n\n\n\n\n\nFg\n\n\nN\n\n\nFg\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nTotalDensity1\n\n\nkg/m3\n\n\nquantity of fluid-1\n\n\n\n\n\n\nTotalDensity2\n\n\nkg/m3\n\n\nquantity of fluid-2\n\n\n\n\n\n\nPressureLoss\n\n\n1mPa\n\n\npressure loss\n\n\n\n\n\n\nOutletFlux\n\n\n1m2/s\n\n\npressure loss\n\n\n\n\n\n\nInletFlux\n\n\n1m2/s\n\n\npressure loss\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nENTROPIC\n\n\nStab\n\n\n\n\n\n\nLES\n\n\nSmagorinsky\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf[0]\n\n\n\n\nf[0]\n\n\n\n\n\n\nf[1]\n\n\n\n\nf[1]\n\n\n\n\n\n\nf[2]\n\n\n\n\nf[2]\n\n\n\n\n\n\nf[3]\n\n\n\n\nf[3]\n\n\n\n\n\n\nf[4]\n\n\n\n\nf[4]\n\n\n\n\n\n\nf[5]\n\n\n\n\nf[5]\n\n\n\n\n\n\nf[6]\n\n\n\n\nf[6]\n\n\n\n\n\n\nf[7]\n\n\n\n\nf[7]\n\n\n\n\n\n\nf[8]\n\n\n\n\nf[8]\n\n\n\n\n\n\ng[0]\n\n\n\n\ng[0]\n\n\n\n\n\n\ng[1]\n\n\n\n\ng[1]\n\n\n\n\n\n\ng[2]\n\n\n\n\ng[2]\n\n\n\n\n\n\ng[3]\n\n\n\n\ng[3]\n\n\n\n\n\n\ng[4]\n\n\n\n\ng[4]\n\n\n\n\n\n\ng[5]\n\n\n\n\ng[5]\n\n\n\n\n\n\ng[6]\n\n\n\n\ng[6]\n\n\n\n\n\n\ng[7]\n\n\n\n\ng[7]\n\n\n\n\n\n\ng[8]\n\n\n\n\ng[8]\n\n\n\n\n\n\npsi_g\n\n\n\n\npsi_g\n\n\n\n\n\n\npsi_f\n\n\n\n\npsi_f\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf[0]\n\n\nf[0]\n\n\n\n\nf[0]\n\n\n\n\n\n\nf[1]\n\n\nf[1]\n\n\n\n\nf[1]\n\n\n\n\n\n\nf[2]\n\n\nf[2]\n\n\n\n\nf[2]\n\n\n\n\n\n\nf[3]\n\n\nf[3]\n\n\n\n\nf[3]\n\n\n\n\n\n\nf[4]\n\n\nf[4]\n\n\n\n\nf[4]\n\n\n\n\n\n\nf[5]\n\n\nf[5]\n\n\n\n\nf[5]\n\n\n\n\n\n\nf[6]\n\n\nf[6]\n\n\n\n\nf[6]\n\n\n\n\n\n\nf[7]\n\n\nf[7]\n\n\n\n\nf[7]\n\n\n\n\n\n\nf[8]\n\n\nf[8]\n\n\n\n\nf[8]\n\n\n\n\n\n\ng[0]\n\n\ng[0]\n\n\n\n\ng[0]\n\n\n\n\n\n\ng[1]\n\n\ng[1]\n\n\n\n\ng[1]\n\n\n\n\n\n\ng[2]\n\n\ng[2]\n\n\n\n\ng[2]\n\n\n\n\n\n\ng[3]\n\n\ng[3]\n\n\n\n\ng[3]\n\n\n\n\n\n\ng[4]\n\n\ng[4]\n\n\n\n\ng[4]\n\n\n\n\n\n\ng[5]\n\n\ng[5]\n\n\n\n\ng[5]\n\n\n\n\n\n\ng[6]\n\n\ng[6]\n\n\n\n\ng[6]\n\n\n\n\n\n\ng[7]\n\n\ng[7]\n\n\n\n\ng[7]\n\n\n\n\n\n\ng[8]\n\n\ng[8]\n\n\n\n\ng[8]\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nBaseIteration\n\n\nRun\n\n\nf[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], g[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8]\n\n\nf[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], g[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8]\n\n\n\n\n\n\nCalcPsi_f\n\n\nCalcPsi_f\n\n\nf[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8]\n\n\npsi_f\n\n\n\n\n\n\nCalcPsi_g\n\n\nCalcPsi_g\n\n\ng[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8]\n\n\npsi_g\n\n\n\n\n\n\nBaseInit\n\n\nInit\n\n\nf[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], g[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8]\n\n\nf[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], g[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8]\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIteration, CalcPsi_f, CalcPsi_g\n\n\n\n\n\n\nInit\n\n\nBaseInit, CalcPsi_f, CalcPsi_g",
            "title": "d2q9 pp MCMP"
        },
        {
            "location": "/models/multiphase/experimental/d2q9_pp_MCMP/#description",
            "text": "d2q9_pp_MCMP",
            "title": "Description"
        },
        {
            "location": "/models/multiphase/experimental/d2q9_pp_MCMP/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/multiphase/experimental/d2q9_pp_MCMP/#zonal-settings",
            "text": "Name  Comment      Velocity_f  inlet/outlet/init velocity 1st pop    Pressure_f  inlet/outlet/init density 1st pop    Velocity_g  inlet/outlet/init velocity 2nd pop    Pressure_g  inlet/outlet/init density 2nd pop    Density  higher density fluid - multiphase capable    Density_dry  lower density fluid  - ideal gas assumption    TotalDensity1InObj  Weight of [quantity of fluid-1] in objective    TotalDensity2InObj  Weight of [quantity of fluid-2] in objective    PressureLossInObj  Weight of [pressure loss] in objective    OutletFluxInObj  Weight of [pressure loss] in objective    InletFluxInObj  Weight of [pressure loss] in objective",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/multiphase/experimental/d2q9_pp_MCMP/#global-settings",
            "text": "Name  Derived  Comment      omega  1.0/(3*nu + 0.5)  one over relaxation time-wet    omega_g  1.0/(3*nu_g + 0.5)  one over relaxation time-dry    nu   viscosity-wet    nu_g   viscosity-dry    Gc   fluid1/2-fluid2/1 interation    Gad1   fluid1-wall interation    Gad2   fluid2-wall interation    R   EoS gas const    T   EoS reduced temp    a   EoS a    b   EoS b    Smag   Smagorinsky constant    SL_U   Shear Layer velocity    SL_lambda   Shear Layer lambda    SL_delta   Shear Layer disturbance    SL_L   Shear Layer length scale    GravitationX   Body Force    GravitationY   Body Force    Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/multiphase/experimental/d2q9_pp_MCMP/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      Rho  kg/m3  Rho    Rhof  kg/m3  Rhof    Rhog  kg/m3  Rhog    P  Pa  P    U  m/s  U    A  1  A    Ff  N  Ff    Fg  N  Fg",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/multiphase/experimental/d2q9_pp_MCMP/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      TotalDensity1  kg/m3  quantity of fluid-1    TotalDensity2  kg/m3  quantity of fluid-2    PressureLoss  1mPa  pressure loss    OutletFlux  1m2/s  pressure loss    InletFlux  1m2/s  pressure loss    Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/multiphase/experimental/d2q9_pp_MCMP/#node-types",
            "text": "Group  Types      BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity    COLLISION  BGK, MRT    DESIGNSPACE  DesignSpace    ENTROPIC  Stab    LES  Smagorinsky    NONE  None    OBJECTIVE  Inlet, Outlet    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/multiphase/experimental/d2q9_pp_MCMP/#solved-fields",
            "text": "Name  Access pattern  Comment      f[0]   f[0]    f[1]   f[1]    f[2]   f[2]    f[3]   f[3]    f[4]   f[4]    f[5]   f[5]    f[6]   f[6]    f[7]   f[7]    f[8]   f[8]    g[0]   g[0]    g[1]   g[1]    g[2]   g[2]    g[3]   g[3]    g[4]   g[4]    g[5]   g[5]    g[6]   g[6]    g[7]   g[7]    g[8]   g[8]    psi_g   psi_g    psi_f   psi_f",
            "title": "Solved fields"
        },
        {
            "location": "/models/multiphase/experimental/d2q9_pp_MCMP/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment      f[0]  f[0]   f[0]    f[1]  f[1]   f[1]    f[2]  f[2]   f[2]    f[3]  f[3]   f[3]    f[4]  f[4]   f[4]    f[5]  f[5]   f[5]    f[6]  f[6]   f[6]    f[7]  f[7]   f[7]    f[8]  f[8]   f[8]    g[0]  g[0]   g[0]    g[1]  g[1]   g[1]    g[2]  g[2]   g[2]    g[3]  g[3]   g[3]    g[4]  g[4]   g[4]    g[5]  g[5]   g[5]    g[6]  g[6]   g[6]    g[7]  g[7]   g[7]    g[8]  g[8]   g[8]",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/multiphase/experimental/d2q9_pp_MCMP/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      BaseIteration  Run  f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], g[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8]  f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], g[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8]    CalcPsi_f  CalcPsi_f  f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8]  psi_f    CalcPsi_g  CalcPsi_g  g[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8]  psi_g    BaseInit  Init  f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], g[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8]  f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], g[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8]",
            "title": "Action stages"
        },
        {
            "location": "/models/multiphase/experimental/d2q9_pp_MCMP/#actions",
            "text": "Name  Stages      Iteration  BaseIteration, CalcPsi_f, CalcPsi_g    Init  BaseInit, CalcPsi_f, CalcPsi_g",
            "title": "Actions"
        },
        {
            "location": "/models/multiphase/solidification/d2q9_solid/",
            "text": "Description\n\n\nd2q9_solid\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nVelocity\n\n\nfluid velocity\n\n\n\n\n\n\nPressure\n\n\npressure\n\n\n\n\n\n\nTemperature\n\n\ntemperature\n\n\n\n\n\n\nConcentration\n\n\nconcentration\n\n\n\n\n\n\nTheta0\n\n\nAngle of preferential growth\n\n\n\n\n\n\nOutFluxInObj\n\n\nWeight of [OutFlux] in objective\n\n\n\n\n\n\nMaterialInObj\n\n\nWeight of [Material] in objective\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nnu\n\n\n\n\nviscosity\n\n\n\n\n\n\nFluidAlfa\n\n\n\n\ninlet density\n\n\n\n\n\n\nSoluteDiffusion\n\n\n\n\nSolute diffusion coefficient in liquid\n\n\n\n\n\n\nC0\n\n\n\n\nConcentration 0\n\n\n\n\n\n\nT0\n\n\n\n\nTemperature 0\n\n\n\n\n\n\nTeq\n\n\n\n\nEquilibrium temperature at interface\n\n\n\n\n\n\nPartitionCoef\n\n\n\n\nPartition coefficient k\n\n\n\n\n\n\nLiquidusSlope\n\n\n\n\nLiquidus slope m\n\n\n\n\n\n\nGTCoef\n\n\n\n\nGibbs-Thomson coefficient gamma\n\n\n\n\n\n\nSurfaceAnisotropy\n\n\n\n\nDegree of anisotropy of surface energy\n\n\n\n\n\n\nSoluteCapillar\n\n\n\n\nSolutal capillary length d_0\n\n\n\n\n\n\nBuoyancy\n\n\n\n\nBuoyancy Boussinesq approximation\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nRho\n\n\nkg/m3\n\n\nRho\n\n\n\n\n\n\nT\n\n\nK\n\n\nT\n\n\n\n\n\n\nC\n\n\n1\n\n\nC\n\n\n\n\n\n\nCt\n\n\n1\n\n\nCt\n\n\n\n\n\n\nCl_eq\n\n\n1\n\n\nCl_eq\n\n\n\n\n\n\nSolid\n\n\n1\n\n\nSolid\n\n\n\n\n\n\nU\n\n\nm/s\n\n\nU\n\n\n\n\n\n\nK\n\n\n1/m\n\n\nK\n\n\n\n\n\n\nTheta\n\n\n1\n\n\nTheta\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nOutFlux\n\n\n1\n\n\nOutFlux\n\n\n\n\n\n\nMaterial\n\n\n1\n\n\nMaterial\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nADDITIONALS\n\n\nHeater, ForceTemperature, ForceConcentration, Seed\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet, Obj\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf[0]\n\n\n\n\nf[0]\n\n\n\n\n\n\nf[1]\n\n\n\n\nf[1]\n\n\n\n\n\n\nf[2]\n\n\n\n\nf[2]\n\n\n\n\n\n\nf[3]\n\n\n\n\nf[3]\n\n\n\n\n\n\nf[4]\n\n\n\n\nf[4]\n\n\n\n\n\n\nf[5]\n\n\n\n\nf[5]\n\n\n\n\n\n\nf[6]\n\n\n\n\nf[6]\n\n\n\n\n\n\nf[7]\n\n\n\n\nf[7]\n\n\n\n\n\n\nf[8]\n\n\n\n\nf[8]\n\n\n\n\n\n\ng[0]\n\n\n\n\ng[0]\n\n\n\n\n\n\ng[1]\n\n\n\n\ng[1]\n\n\n\n\n\n\ng[2]\n\n\n\n\ng[2]\n\n\n\n\n\n\ng[3]\n\n\n\n\ng[3]\n\n\n\n\n\n\ng[4]\n\n\n\n\ng[4]\n\n\n\n\n\n\ng[5]\n\n\n\n\ng[5]\n\n\n\n\n\n\ng[6]\n\n\n\n\ng[6]\n\n\n\n\n\n\ng[7]\n\n\n\n\ng[7]\n\n\n\n\n\n\ng[8]\n\n\n\n\ng[8]\n\n\n\n\n\n\nh[0]\n\n\n\n\nh[0]\n\n\n\n\n\n\nh[1]\n\n\n\n\nh[1]\n\n\n\n\n\n\nh[2]\n\n\n\n\nh[2]\n\n\n\n\n\n\nh[3]\n\n\n\n\nh[3]\n\n\n\n\n\n\nh[4]\n\n\n\n\nh[4]\n\n\n\n\n\n\nh[5]\n\n\n\n\nh[5]\n\n\n\n\n\n\nh[6]\n\n\n\n\nh[6]\n\n\n\n\n\n\nh[7]\n\n\n\n\nh[7]\n\n\n\n\n\n\nh[8]\n\n\n\n\nh[8]\n\n\n\n\n\n\nfi_s\n\n\n\n\nsolidification\n\n\n\n\n\n\nCs\n\n\n\n\nCs\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf[0]\n\n\nf[0]\n\n\n\n\nf[0]\n\n\n\n\n\n\nf[1]\n\n\nf[1]\n\n\n\n\nf[1]\n\n\n\n\n\n\nf[2]\n\n\nf[2]\n\n\n\n\nf[2]\n\n\n\n\n\n\nf[3]\n\n\nf[3]\n\n\n\n\nf[3]\n\n\n\n\n\n\nf[4]\n\n\nf[4]\n\n\n\n\nf[4]\n\n\n\n\n\n\nf[5]\n\n\nf[5]\n\n\n\n\nf[5]\n\n\n\n\n\n\nf[6]\n\n\nf[6]\n\n\n\n\nf[6]\n\n\n\n\n\n\nf[7]\n\n\nf[7]\n\n\n\n\nf[7]\n\n\n\n\n\n\nf[8]\n\n\nf[8]\n\n\n\n\nf[8]\n\n\n\n\n\n\ng[0]\n\n\ng[0]\n\n\n\n\ng[0]\n\n\n\n\n\n\ng[1]\n\n\ng[1]\n\n\n\n\ng[1]\n\n\n\n\n\n\ng[2]\n\n\ng[2]\n\n\n\n\ng[2]\n\n\n\n\n\n\ng[3]\n\n\ng[3]\n\n\n\n\ng[3]\n\n\n\n\n\n\ng[4]\n\n\ng[4]\n\n\n\n\ng[4]\n\n\n\n\n\n\ng[5]\n\n\ng[5]\n\n\n\n\ng[5]\n\n\n\n\n\n\ng[6]\n\n\ng[6]\n\n\n\n\ng[6]\n\n\n\n\n\n\ng[7]\n\n\ng[7]\n\n\n\n\ng[7]\n\n\n\n\n\n\ng[8]\n\n\ng[8]\n\n\n\n\ng[8]\n\n\n\n\n\n\nh[0]\n\n\nh[0]\n\n\n\n\nh[0]\n\n\n\n\n\n\nh[1]\n\n\nh[1]\n\n\n\n\nh[1]\n\n\n\n\n\n\nh[2]\n\n\nh[2]\n\n\n\n\nh[2]\n\n\n\n\n\n\nh[3]\n\n\nh[3]\n\n\n\n\nh[3]\n\n\n\n\n\n\nh[4]\n\n\nh[4]\n\n\n\n\nh[4]\n\n\n\n\n\n\nh[5]\n\n\nh[5]\n\n\n\n\nh[5]\n\n\n\n\n\n\nh[6]\n\n\nh[6]\n\n\n\n\nh[6]\n\n\n\n\n\n\nh[7]\n\n\nh[7]\n\n\n\n\nh[7]\n\n\n\n\n\n\nh[8]\n\n\nh[8]\n\n\n\n\nh[8]\n\n\n\n\n\n\nfi_s\n\n\nfi_s\n\n\n\n\nfi_s\n\n\n\n\n\n\nCs\n\n\nCs\n\n\n\n\nCs\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nBaseIteration\n\n\nRun\n\n\nf[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], g[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8], h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8], fi_s, Cs\n\n\nf[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], g[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8], h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8], fi_s, Cs\n\n\n\n\n\n\nBaseInit\n\n\nInit\n\n\nnone\n\n\nf[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], g[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8], h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8], fi_s, Cs\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIteration\n\n\n\n\n\n\nInit\n\n\nBaseInit",
            "title": "D2q9 solid"
        },
        {
            "location": "/models/multiphase/solidification/d2q9_solid/#description",
            "text": "d2q9_solid",
            "title": "Description"
        },
        {
            "location": "/models/multiphase/solidification/d2q9_solid/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/multiphase/solidification/d2q9_solid/#zonal-settings",
            "text": "Name  Comment      Velocity  fluid velocity    Pressure  pressure    Temperature  temperature    Concentration  concentration    Theta0  Angle of preferential growth    OutFluxInObj  Weight of [OutFlux] in objective    MaterialInObj  Weight of [Material] in objective",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/multiphase/solidification/d2q9_solid/#global-settings",
            "text": "Name  Derived  Comment      nu   viscosity    FluidAlfa   inlet density    SoluteDiffusion   Solute diffusion coefficient in liquid    C0   Concentration 0    T0   Temperature 0    Teq   Equilibrium temperature at interface    PartitionCoef   Partition coefficient k    LiquidusSlope   Liquidus slope m    GTCoef   Gibbs-Thomson coefficient gamma    SurfaceAnisotropy   Degree of anisotropy of surface energy    SoluteCapillar   Solutal capillary length d_0    Buoyancy   Buoyancy Boussinesq approximation    Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/multiphase/solidification/d2q9_solid/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      Rho  kg/m3  Rho    T  K  T    C  1  C    Ct  1  Ct    Cl_eq  1  Cl_eq    Solid  1  Solid    U  m/s  U    K  1/m  K    Theta  1  Theta",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/multiphase/solidification/d2q9_solid/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      OutFlux  1  OutFlux    Material  1  Material    Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/multiphase/solidification/d2q9_solid/#node-types",
            "text": "Group  Types      ADDITIONALS  Heater, ForceTemperature, ForceConcentration, Seed    BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity    COLLISION  BGK, MRT    DESIGNSPACE  DesignSpace    NONE  None    OBJECTIVE  Inlet, Outlet, Obj    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/multiphase/solidification/d2q9_solid/#solved-fields",
            "text": "Name  Access pattern  Comment      f[0]   f[0]    f[1]   f[1]    f[2]   f[2]    f[3]   f[3]    f[4]   f[4]    f[5]   f[5]    f[6]   f[6]    f[7]   f[7]    f[8]   f[8]    g[0]   g[0]    g[1]   g[1]    g[2]   g[2]    g[3]   g[3]    g[4]   g[4]    g[5]   g[5]    g[6]   g[6]    g[7]   g[7]    g[8]   g[8]    h[0]   h[0]    h[1]   h[1]    h[2]   h[2]    h[3]   h[3]    h[4]   h[4]    h[5]   h[5]    h[6]   h[6]    h[7]   h[7]    h[8]   h[8]    fi_s   solidification    Cs   Cs",
            "title": "Solved fields"
        },
        {
            "location": "/models/multiphase/solidification/d2q9_solid/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment      f[0]  f[0]   f[0]    f[1]  f[1]   f[1]    f[2]  f[2]   f[2]    f[3]  f[3]   f[3]    f[4]  f[4]   f[4]    f[5]  f[5]   f[5]    f[6]  f[6]   f[6]    f[7]  f[7]   f[7]    f[8]  f[8]   f[8]    g[0]  g[0]   g[0]    g[1]  g[1]   g[1]    g[2]  g[2]   g[2]    g[3]  g[3]   g[3]    g[4]  g[4]   g[4]    g[5]  g[5]   g[5]    g[6]  g[6]   g[6]    g[7]  g[7]   g[7]    g[8]  g[8]   g[8]    h[0]  h[0]   h[0]    h[1]  h[1]   h[1]    h[2]  h[2]   h[2]    h[3]  h[3]   h[3]    h[4]  h[4]   h[4]    h[5]  h[5]   h[5]    h[6]  h[6]   h[6]    h[7]  h[7]   h[7]    h[8]  h[8]   h[8]    fi_s  fi_s   fi_s    Cs  Cs   Cs",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/multiphase/solidification/d2q9_solid/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      BaseIteration  Run  f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], g[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8], h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8], fi_s, Cs  f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], g[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8], h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8], fi_s, Cs    BaseInit  Init  none  f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], g[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8], h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8], fi_s, Cs",
            "title": "Action stages"
        },
        {
            "location": "/models/multiphase/solidification/d2q9_solid/#actions",
            "text": "Name  Stages      Iteration  BaseIteration    Init  BaseInit",
            "title": "Actions"
        },
        {
            "location": "/models/nonnewtonian/d3q27_viscoplastic/",
            "text": "Description\n\n\nd3q27_viscoplastic\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nVelocity\n\n\nInlet velocity\n\n\n\n\n\n\nPressure\n\n\nInlet/Outlet pressure\n\n\n\n\n\n\nFluxInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nTotalRhoInObj\n\n\nWeight of [Total mass] in objective\n\n\n\n\n\n\nXYvxInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXYvyInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXYvzInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXYrho1InObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXYrho2InObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXYareaInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXZvxInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXZvyInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXZvzInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXZrho1InObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXZrho2InObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nXZareaInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nYZvxInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nYZvyInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nYZvzInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nYZrho1InObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nYZrho2InObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nYZareaInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nnu\n\n\n\n\nViscosity\n\n\n\n\n\n\nForceX\n\n\n\n\nForce force X\n\n\n\n\n\n\nForceY\n\n\n\n\nForce force Y\n\n\n\n\n\n\nForceZ\n\n\n\n\nForce force Z\n\n\n\n\n\n\nYieldStress\n\n\n\n\nYield stress\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nP\n\n\nPa\n\n\nP\n\n\n\n\n\n\nU\n\n\nm/s\n\n\nU\n\n\n\n\n\n\nnu_app\n\n\nm2/s\n\n\nnu_app\n\n\n\n\n\n\nyield_stat\n\n\n1\n\n\nyield_stat\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nFlux\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nTotalRho\n\n\nkg\n\n\nTotal mass\n\n\n\n\n\n\nXYvx\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nXYvy\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nXYvz\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nXYrho1\n\n\nkg/m\n\n\nVolume flux\n\n\n\n\n\n\nXYrho2\n\n\nkg/m\n\n\nVolume flux\n\n\n\n\n\n\nXYarea\n\n\nm2\n\n\nVolume flux\n\n\n\n\n\n\nXZvx\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nXZvy\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nXZvz\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nXZrho1\n\n\nkg/m\n\n\nVolume flux\n\n\n\n\n\n\nXZrho2\n\n\nkg/m\n\n\nVolume flux\n\n\n\n\n\n\nXZarea\n\n\nm2\n\n\nVolume flux\n\n\n\n\n\n\nYZvx\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nYZvy\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nYZvz\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nYZrho1\n\n\nkg/m\n\n\nVolume flux\n\n\n\n\n\n\nYZrho2\n\n\nkg/m\n\n\nVolume flux\n\n\n\n\n\n\nYZarea\n\n\nm2\n\n\nVolume flux\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nADDITIONALS\n\n\nXYslice1, XZslice1, YZslice1, XYslice2, XZslice2, YZslice2\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, SymmetryY, SymmetryZ, NVelocity_ZouHe, SVelocity_ZouHe, EVelocity_ZouHe, WVelocity_ZouHe, NPressure_ZouHe, SPressure_ZouHe, EPressure_ZouHe, WPressure_ZouHe\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf000\n\n\n\n\ndensity F 0\n\n\n\n\n\n\nf100\n\n\n\n\ndensity F 1\n\n\n\n\n\n\nf200\n\n\n\n\ndensity F 2\n\n\n\n\n\n\nf010\n\n\n\n\ndensity F 3\n\n\n\n\n\n\nf110\n\n\n\n\ndensity F 4\n\n\n\n\n\n\nf210\n\n\n\n\ndensity F 5\n\n\n\n\n\n\nf020\n\n\n\n\ndensity F 6\n\n\n\n\n\n\nf120\n\n\n\n\ndensity F 7\n\n\n\n\n\n\nf220\n\n\n\n\ndensity F 8\n\n\n\n\n\n\nf001\n\n\n\n\ndensity F 9\n\n\n\n\n\n\nf101\n\n\n\n\ndensity F 10\n\n\n\n\n\n\nf201\n\n\n\n\ndensity F 11\n\n\n\n\n\n\nf011\n\n\n\n\ndensity F 12\n\n\n\n\n\n\nf111\n\n\n\n\ndensity F 13\n\n\n\n\n\n\nf211\n\n\n\n\ndensity F 14\n\n\n\n\n\n\nf021\n\n\n\n\ndensity F 15\n\n\n\n\n\n\nf121\n\n\n\n\ndensity F 16\n\n\n\n\n\n\nf221\n\n\n\n\ndensity F 17\n\n\n\n\n\n\nf002\n\n\n\n\ndensity F 18\n\n\n\n\n\n\nf102\n\n\n\n\ndensity F 19\n\n\n\n\n\n\nf202\n\n\n\n\ndensity F 20\n\n\n\n\n\n\nf012\n\n\n\n\ndensity F 21\n\n\n\n\n\n\nf112\n\n\n\n\ndensity F 22\n\n\n\n\n\n\nf212\n\n\n\n\ndensity F 23\n\n\n\n\n\n\nf022\n\n\n\n\ndensity F 24\n\n\n\n\n\n\nf122\n\n\n\n\ndensity F 25\n\n\n\n\n\n\nf222\n\n\n\n\ndensity F 26\n\n\n\n\n\n\nnu_app\n\n\n\n\nnu_app\n\n\n\n\n\n\nyield_stat\n\n\n\n\nyield_stat\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf000\n\n\nf000\n\n\n\n\ndensity F 0\n\n\n\n\n\n\nf100\n\n\nf100\n\n\n\n\ndensity F 1\n\n\n\n\n\n\nf200\n\n\nf200\n\n\n\n\ndensity F 2\n\n\n\n\n\n\nf010\n\n\nf010\n\n\n\n\ndensity F 3\n\n\n\n\n\n\nf110\n\n\nf110\n\n\n\n\ndensity F 4\n\n\n\n\n\n\nf210\n\n\nf210\n\n\n\n\ndensity F 5\n\n\n\n\n\n\nf020\n\n\nf020\n\n\n\n\ndensity F 6\n\n\n\n\n\n\nf120\n\n\nf120\n\n\n\n\ndensity F 7\n\n\n\n\n\n\nf220\n\n\nf220\n\n\n\n\ndensity F 8\n\n\n\n\n\n\nf001\n\n\nf001\n\n\n\n\ndensity F 9\n\n\n\n\n\n\nf101\n\n\nf101\n\n\n\n\ndensity F 10\n\n\n\n\n\n\nf201\n\n\nf201\n\n\n\n\ndensity F 11\n\n\n\n\n\n\nf011\n\n\nf011\n\n\n\n\ndensity F 12\n\n\n\n\n\n\nf111\n\n\nf111\n\n\n\n\ndensity F 13\n\n\n\n\n\n\nf211\n\n\nf211\n\n\n\n\ndensity F 14\n\n\n\n\n\n\nf021\n\n\nf021\n\n\n\n\ndensity F 15\n\n\n\n\n\n\nf121\n\n\nf121\n\n\n\n\ndensity F 16\n\n\n\n\n\n\nf221\n\n\nf221\n\n\n\n\ndensity F 17\n\n\n\n\n\n\nf002\n\n\nf002\n\n\n\n\ndensity F 18\n\n\n\n\n\n\nf102\n\n\nf102\n\n\n\n\ndensity F 19\n\n\n\n\n\n\nf202\n\n\nf202\n\n\n\n\ndensity F 20\n\n\n\n\n\n\nf012\n\n\nf012\n\n\n\n\ndensity F 21\n\n\n\n\n\n\nf112\n\n\nf112\n\n\n\n\ndensity F 22\n\n\n\n\n\n\nf212\n\n\nf212\n\n\n\n\ndensity F 23\n\n\n\n\n\n\nf022\n\n\nf022\n\n\n\n\ndensity F 24\n\n\n\n\n\n\nf122\n\n\nf122\n\n\n\n\ndensity F 25\n\n\n\n\n\n\nf222\n\n\nf222\n\n\n\n\ndensity F 26\n\n\n\n\n\n\nnu_app\n\n\nnu_app\n\n\n\n\nnu_app\n\n\n\n\n\n\nyield_stat\n\n\nyield_stat\n\n\n\n\nyield_stat\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nBaseIteration\n\n\nRun\n\n\nf000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222, nu_app, yield_stat\n\n\nf000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222, nu_app, yield_stat\n\n\n\n\n\n\nBaseInit\n\n\nInit\n\n\nnone\n\n\nf000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222, nu_app, yield_stat\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIteration\n\n\n\n\n\n\nInit\n\n\nBaseInit",
            "title": "D3q27 viscoplastic"
        },
        {
            "location": "/models/nonnewtonian/d3q27_viscoplastic/#description",
            "text": "d3q27_viscoplastic",
            "title": "Description"
        },
        {
            "location": "/models/nonnewtonian/d3q27_viscoplastic/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/nonnewtonian/d3q27_viscoplastic/#zonal-settings",
            "text": "Name  Comment      Velocity  Inlet velocity    Pressure  Inlet/Outlet pressure    FluxInObj  Weight of [Volume flux] in objective    TotalRhoInObj  Weight of [Total mass] in objective    XYvxInObj  Weight of [Volume flux] in objective    XYvyInObj  Weight of [Volume flux] in objective    XYvzInObj  Weight of [Volume flux] in objective    XYrho1InObj  Weight of [Volume flux] in objective    XYrho2InObj  Weight of [Volume flux] in objective    XYareaInObj  Weight of [Volume flux] in objective    XZvxInObj  Weight of [Volume flux] in objective    XZvyInObj  Weight of [Volume flux] in objective    XZvzInObj  Weight of [Volume flux] in objective    XZrho1InObj  Weight of [Volume flux] in objective    XZrho2InObj  Weight of [Volume flux] in objective    XZareaInObj  Weight of [Volume flux] in objective    YZvxInObj  Weight of [Volume flux] in objective    YZvyInObj  Weight of [Volume flux] in objective    YZvzInObj  Weight of [Volume flux] in objective    YZrho1InObj  Weight of [Volume flux] in objective    YZrho2InObj  Weight of [Volume flux] in objective    YZareaInObj  Weight of [Volume flux] in objective",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/nonnewtonian/d3q27_viscoplastic/#global-settings",
            "text": "Name  Derived  Comment      nu   Viscosity    ForceX   Force force X    ForceY   Force force Y    ForceZ   Force force Z    YieldStress   Yield stress    Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/nonnewtonian/d3q27_viscoplastic/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      P  Pa  P    U  m/s  U    nu_app  m2/s  nu_app    yield_stat  1  yield_stat",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/nonnewtonian/d3q27_viscoplastic/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      Flux  m3/s  Volume flux    TotalRho  kg  Total mass    XYvx  m3/s  Volume flux    XYvy  m3/s  Volume flux    XYvz  m3/s  Volume flux    XYrho1  kg/m  Volume flux    XYrho2  kg/m  Volume flux    XYarea  m2  Volume flux    XZvx  m3/s  Volume flux    XZvy  m3/s  Volume flux    XZvz  m3/s  Volume flux    XZrho1  kg/m  Volume flux    XZrho2  kg/m  Volume flux    XZarea  m2  Volume flux    YZvx  m3/s  Volume flux    YZvy  m3/s  Volume flux    YZvz  m3/s  Volume flux    YZrho1  kg/m  Volume flux    YZrho2  kg/m  Volume flux    YZarea  m2  Volume flux    Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/nonnewtonian/d3q27_viscoplastic/#node-types",
            "text": "Group  Types      ADDITIONALS  XYslice1, XZslice1, YZslice1, XYslice2, XZslice2, YZslice2    BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, SymmetryY, SymmetryZ, NVelocity_ZouHe, SVelocity_ZouHe, EVelocity_ZouHe, WVelocity_ZouHe, NPressure_ZouHe, SPressure_ZouHe, EPressure_ZouHe, WPressure_ZouHe    COLLISION  BGK, MRT    DESIGNSPACE  DesignSpace    NONE  None    OBJECTIVE  Inlet, Outlet    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/nonnewtonian/d3q27_viscoplastic/#solved-fields",
            "text": "Name  Access pattern  Comment      f000   density F 0    f100   density F 1    f200   density F 2    f010   density F 3    f110   density F 4    f210   density F 5    f020   density F 6    f120   density F 7    f220   density F 8    f001   density F 9    f101   density F 10    f201   density F 11    f011   density F 12    f111   density F 13    f211   density F 14    f021   density F 15    f121   density F 16    f221   density F 17    f002   density F 18    f102   density F 19    f202   density F 20    f012   density F 21    f112   density F 22    f212   density F 23    f022   density F 24    f122   density F 25    f222   density F 26    nu_app   nu_app    yield_stat   yield_stat",
            "title": "Solved fields"
        },
        {
            "location": "/models/nonnewtonian/d3q27_viscoplastic/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment      f000  f000   density F 0    f100  f100   density F 1    f200  f200   density F 2    f010  f010   density F 3    f110  f110   density F 4    f210  f210   density F 5    f020  f020   density F 6    f120  f120   density F 7    f220  f220   density F 8    f001  f001   density F 9    f101  f101   density F 10    f201  f201   density F 11    f011  f011   density F 12    f111  f111   density F 13    f211  f211   density F 14    f021  f021   density F 15    f121  f121   density F 16    f221  f221   density F 17    f002  f002   density F 18    f102  f102   density F 19    f202  f202   density F 20    f012  f012   density F 21    f112  f112   density F 22    f212  f212   density F 23    f022  f022   density F 24    f122  f122   density F 25    f222  f222   density F 26    nu_app  nu_app   nu_app    yield_stat  yield_stat   yield_stat",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/nonnewtonian/d3q27_viscoplastic/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      BaseIteration  Run  f000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222, nu_app, yield_stat  f000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222, nu_app, yield_stat    BaseInit  Init  none  f000, f100, f200, f010, f110, f210, f020, f120, f220, f001, f101, f201, f011, f111, f211, f021, f121, f221, f002, f102, f202, f012, f112, f212, f022, f122, f222, nu_app, yield_stat",
            "title": "Action stages"
        },
        {
            "location": "/models/nonnewtonian/d3q27_viscoplastic/#actions",
            "text": "Name  Stages      Iteration  BaseIteration    Init  BaseInit",
            "title": "Actions"
        },
        {
            "location": "/models/optimization/d2q9_adj/",
            "text": "Description\n\n\nd2q9_adj\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nVelocity\n\n\ninlet velocity\n\n\n\n\n\n\nPressure\n\n\ninlet pressure\n\n\n\n\n\n\nPorocity\n\n\ninitial porocity of Porous nodes\n\n\n\n\n\n\nDragInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\nLiftInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\nMaterialPenaltyInObj\n\n\nWeight of [material penalty] in objective\n\n\n\n\n\n\nMaterialInObj\n\n\nWeight of [material] in objective\n\n\n\n\n\n\nPressureLossInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\nOutletFluxInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\nInletFluxInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nomega\n\n\n1-1.0/(3*nu + 0.5)\n\n\none over relaxation time\n\n\n\n\n\n\nnu\n\n\n\n\nviscosity\n\n\n\n\n\n\nForceX\n\n\n\n\nGravitation in the direction of x\n\n\n\n\n\n\nForceY\n\n\n\n\nGravitation in the direction of y\n\n\n\n\n\n\nPorocityGamma\n\n\n1.0 - exp(PorocityTheta)\n\n\ngamma in hiperbolic transformation of porocity (-infty,1)\n\n\n\n\n\n\nPorocityTheta\n\n\n\n\ntheta in hiperbolic transformation of porocity\n\n\n\n\n\n\nDescent\n\n\n\n\nOptimization Descent\n\n\n\n\n\n\nGradientSmooth\n\n\n\n\nGradient smoothing in OptSolve\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nRho\n\n\nkg/m3\n\n\nRho\n\n\n\n\n\n\nU\n\n\nm/s\n\n\nU\n\n\n\n\n\n\nRhoB\n\n\n1\n\n\nRhoB\n\n\n\n\n\n\nUB\n\n\n1\n\n\nUB\n\n\n\n\n\n\nW\n\n\n1\n\n\nW\n\n\n\n\n\n\nWB\n\n\n1\n\n\nWB\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nDrag\n\n\n1\n\n\npressure loss\n\n\n\n\n\n\nLift\n\n\n1\n\n\npressure loss\n\n\n\n\n\n\nMaterialPenalty\n\n\n1\n\n\nmaterial penalty\n\n\n\n\n\n\nMaterial\n\n\n1\n\n\nmaterial\n\n\n\n\n\n\nPressureLoss\n\n\n1mPa\n\n\npressure loss\n\n\n\n\n\n\nOutletFlux\n\n\n1m2/s\n\n\npressure loss\n\n\n\n\n\n\nInletFlux\n\n\n1m2/s\n\n\npressure loss\n\n\n\n\n\n\nomega_D\n\n\n1\n\n\nGradient of objective with respect to [one over relaxation time]\n\n\n\n\n\n\nnu_D\n\n\n1\n\n\nGradient of objective with respect to [viscosity]\n\n\n\n\n\n\nForceX_D\n\n\n1\n\n\nGradient of objective with respect to [Gravitation in the direction of x]\n\n\n\n\n\n\nForceY_D\n\n\n1\n\n\nGradient of objective with respect to [Gravitation in the direction of y]\n\n\n\n\n\n\nPorocityGamma_D\n\n\n1\n\n\nGradient of objective with respect to [gamma in hiperbolic transformation of porocity (-infty,1)]\n\n\n\n\n\n\nPorocityTheta_D\n\n\n1\n\n\nGradient of objective with respect to [theta in hiperbolic transformation of porocity]\n\n\n\n\n\n\nAdjointRes\n\n\n1\n\n\nsquare L2 norm of adjoint change\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf0\n\n\n\n\nf0\n\n\n\n\n\n\nf1\n\n\n\n\nf1\n\n\n\n\n\n\nf2\n\n\n\n\nf2\n\n\n\n\n\n\nf3\n\n\n\n\nf3\n\n\n\n\n\n\nf4\n\n\n\n\nf4\n\n\n\n\n\n\nf5\n\n\n\n\nf5\n\n\n\n\n\n\nf6\n\n\n\n\nf6\n\n\n\n\n\n\nf7\n\n\n\n\nf7\n\n\n\n\n\n\nf8\n\n\n\n\nf8\n\n\n\n\n\n\nw\n\n\n\n\nw\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf0\n\n\nf0\n\n\n\n\nf0\n\n\n\n\n\n\nf1\n\n\nf1\n\n\n\n\nf1\n\n\n\n\n\n\nf2\n\n\nf2\n\n\n\n\nf2\n\n\n\n\n\n\nf3\n\n\nf3\n\n\n\n\nf3\n\n\n\n\n\n\nf4\n\n\nf4\n\n\n\n\nf4\n\n\n\n\n\n\nf5\n\n\nf5\n\n\n\n\nf5\n\n\n\n\n\n\nf6\n\n\nf6\n\n\n\n\nf6\n\n\n\n\n\n\nf7\n\n\nf7\n\n\n\n\nf7\n\n\n\n\n\n\nf8\n\n\nf8\n\n\n\n\nf8\n\n\n\n\n\n\nw\n\n\nw\n\n\n\n\nw\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nBaseIteration\n\n\nRun\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8, w\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8, w\n\n\n\n\n\n\nBaseInit\n\n\nInit\n\n\nnone\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8, w\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIteration\n\n\n\n\n\n\nInit\n\n\nBaseInit",
            "title": "D2q9 adj"
        },
        {
            "location": "/models/optimization/d2q9_adj/#description",
            "text": "d2q9_adj",
            "title": "Description"
        },
        {
            "location": "/models/optimization/d2q9_adj/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/optimization/d2q9_adj/#zonal-settings",
            "text": "Name  Comment      Velocity  inlet velocity    Pressure  inlet pressure    Porocity  initial porocity of Porous nodes    DragInObj  Weight of [pressure loss] in objective    LiftInObj  Weight of [pressure loss] in objective    MaterialPenaltyInObj  Weight of [material penalty] in objective    MaterialInObj  Weight of [material] in objective    PressureLossInObj  Weight of [pressure loss] in objective    OutletFluxInObj  Weight of [pressure loss] in objective    InletFluxInObj  Weight of [pressure loss] in objective",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/optimization/d2q9_adj/#global-settings",
            "text": "Name  Derived  Comment      omega  1-1.0/(3*nu + 0.5)  one over relaxation time    nu   viscosity    ForceX   Gravitation in the direction of x    ForceY   Gravitation in the direction of y    PorocityGamma  1.0 - exp(PorocityTheta)  gamma in hiperbolic transformation of porocity (-infty,1)    PorocityTheta   theta in hiperbolic transformation of porocity    Descent   Optimization Descent    GradientSmooth   Gradient smoothing in OptSolve    Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/optimization/d2q9_adj/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      Rho  kg/m3  Rho    U  m/s  U    RhoB  1  RhoB    UB  1  UB    W  1  W    WB  1  WB",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/optimization/d2q9_adj/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      Drag  1  pressure loss    Lift  1  pressure loss    MaterialPenalty  1  material penalty    Material  1  material    PressureLoss  1mPa  pressure loss    OutletFlux  1m2/s  pressure loss    InletFlux  1m2/s  pressure loss    omega_D  1  Gradient of objective with respect to [one over relaxation time]    nu_D  1  Gradient of objective with respect to [viscosity]    ForceX_D  1  Gradient of objective with respect to [Gravitation in the direction of x]    ForceY_D  1  Gradient of objective with respect to [Gravitation in the direction of y]    PorocityGamma_D  1  Gradient of objective with respect to [gamma in hiperbolic transformation of porocity (-infty,1)]    PorocityTheta_D  1  Gradient of objective with respect to [theta in hiperbolic transformation of porocity]    AdjointRes  1  square L2 norm of adjoint change    Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/optimization/d2q9_adj/#node-types",
            "text": "Group  Types      BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity    COLLISION  BGK, MRT    DESIGNSPACE  DesignSpace    NONE  None    OBJECTIVE  Inlet, Outlet    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/optimization/d2q9_adj/#solved-fields",
            "text": "Name  Access pattern  Comment      f0   f0    f1   f1    f2   f2    f3   f3    f4   f4    f5   f5    f6   f6    f7   f7    f8   f8    w   w",
            "title": "Solved fields"
        },
        {
            "location": "/models/optimization/d2q9_adj/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment      f0  f0   f0    f1  f1   f1    f2  f2   f2    f3  f3   f3    f4  f4   f4    f5  f5   f5    f6  f6   f6    f7  f7   f7    f8  f8   f8    w  w   w",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/optimization/d2q9_adj/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      BaseIteration  Run  f0, f1, f2, f3, f4, f5, f6, f7, f8, w  f0, f1, f2, f3, f4, f5, f6, f7, f8, w    BaseInit  Init  none  f0, f1, f2, f3, f4, f5, f6, f7, f8, w",
            "title": "Action stages"
        },
        {
            "location": "/models/optimization/d2q9_adj/#actions",
            "text": "Name  Stages      Iteration  BaseIteration    Init  BaseInit",
            "title": "Actions"
        },
        {
            "location": "/models/optimization/d2q9_optimalMixing/",
            "text": "Description\n\n\nd2q9_optimalMixing\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nMovingWallVelocity\n\n\ninlet/outlet/init velocity\n\n\n\n\n\n\nVelocity\n\n\ninlet/outlet/init velocity\n\n\n\n\n\n\nPressure\n\n\nInlet pressure\n\n\n\n\n\n\nTemperature\n\n\nTemperature\n\n\n\n\n\n\nTotalTempSqrInObj\n\n\nWeight of [TotalTempSqr] in objective\n\n\n\n\n\n\nCountCellsInObj\n\n\nWeight of [CountCells] in objective\n\n\n\n\n\n\nNMovingWallForceInObj\n\n\nWeight of [NMovingWallForce] in objective\n\n\n\n\n\n\nSWallForceInObj\n\n\nWeight of [SWallForce] in objective\n\n\n\n\n\n\nMovingWallPowerInObj\n\n\nWeight of [MovingWallPower] in objective\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nomega\n\n\n1.0/(3*nu + 0.5)\n\n\none over relaxation time\n\n\n\n\n\n\nnu\n\n\n\n\nviscosity\n\n\n\n\n\n\nomegaT\n\n\n1.0/(3*K + 0.5)\n\n\none over relaxation time - thermal\n\n\n\n\n\n\nK\n\n\n\n\nthermal_diffusivity\n\n\n\n\n\n\nDescent\n\n\n\n\nOptimization Descent\n\n\n\n\n\n\nGradientSmooth\n\n\n\n\nGradient smoothing in OptSolve\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nRho\n\n\nkg/m3\n\n\nRho\n\n\n\n\n\n\nT\n\n\nK\n\n\nT\n\n\n\n\n\n\nU\n\n\nm/s\n\n\nU\n\n\n\n\n\n\nRhoB\n\n\n1\n\n\nRhoB\n\n\n\n\n\n\nTB\n\n\n1\n\n\nTB\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nTotalTempSqr\n\n\n1\n\n\nTotalTempSqr\n\n\n\n\n\n\nCountCells\n\n\n1\n\n\nCountCells\n\n\n\n\n\n\nNMovingWallForce\n\n\n1\n\n\nNMovingWallForce\n\n\n\n\n\n\nSWallForce\n\n\n1\n\n\nSWallForce\n\n\n\n\n\n\nMovingWallPower\n\n\n1\n\n\nMovingWallPower\n\n\n\n\n\n\nomega_D\n\n\n1\n\n\nGradient of objective with respect to [one over relaxation time]\n\n\n\n\n\n\nnu_D\n\n\n1\n\n\nGradient of objective with respect to [viscosity]\n\n\n\n\n\n\nomegaT_D\n\n\n1\n\n\nGradient of objective with respect to [one over relaxation time - thermal]\n\n\n\n\n\n\nK_D\n\n\n1\n\n\nGradient of objective with respect to [thermal_diffusivity]\n\n\n\n\n\n\nAdjointRes\n\n\n1\n\n\nsquare L2 norm of adjoint change\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, NMovingWall, SWall\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf[0]\n\n\n\n\nf[0]\n\n\n\n\n\n\nf[1]\n\n\n\n\nf[1]\n\n\n\n\n\n\nf[2]\n\n\n\n\nf[2]\n\n\n\n\n\n\nf[3]\n\n\n\n\nf[3]\n\n\n\n\n\n\nf[4]\n\n\n\n\nf[4]\n\n\n\n\n\n\nf[5]\n\n\n\n\nf[5]\n\n\n\n\n\n\nf[6]\n\n\n\n\nf[6]\n\n\n\n\n\n\nf[7]\n\n\n\n\nf[7]\n\n\n\n\n\n\nf[8]\n\n\n\n\nf[8]\n\n\n\n\n\n\ng[0]\n\n\n\n\ng[0]\n\n\n\n\n\n\ng[1]\n\n\n\n\ng[1]\n\n\n\n\n\n\ng[2]\n\n\n\n\ng[2]\n\n\n\n\n\n\ng[3]\n\n\n\n\ng[3]\n\n\n\n\n\n\ng[4]\n\n\n\n\ng[4]\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf[0]\n\n\nf[0]\n\n\n\n\nf[0]\n\n\n\n\n\n\nf[1]\n\n\nf[1]\n\n\n\n\nf[1]\n\n\n\n\n\n\nf[2]\n\n\nf[2]\n\n\n\n\nf[2]\n\n\n\n\n\n\nf[3]\n\n\nf[3]\n\n\n\n\nf[3]\n\n\n\n\n\n\nf[4]\n\n\nf[4]\n\n\n\n\nf[4]\n\n\n\n\n\n\nf[5]\n\n\nf[5]\n\n\n\n\nf[5]\n\n\n\n\n\n\nf[6]\n\n\nf[6]\n\n\n\n\nf[6]\n\n\n\n\n\n\nf[7]\n\n\nf[7]\n\n\n\n\nf[7]\n\n\n\n\n\n\nf[8]\n\n\nf[8]\n\n\n\n\nf[8]\n\n\n\n\n\n\ng[0]\n\n\ng[0]\n\n\n\n\ng[0]\n\n\n\n\n\n\ng[1]\n\n\ng[1]\n\n\n\n\ng[1]\n\n\n\n\n\n\ng[2]\n\n\ng[2]\n\n\n\n\ng[2]\n\n\n\n\n\n\ng[3]\n\n\ng[3]\n\n\n\n\ng[3]\n\n\n\n\n\n\ng[4]\n\n\ng[4]\n\n\n\n\ng[4]\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nBaseIteration\n\n\nRun\n\n\nf[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], g[0], g[1], g[2], g[3], g[4]\n\n\nf[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], g[0], g[1], g[2], g[3], g[4]\n\n\n\n\n\n\nBaseInit\n\n\nInit\n\n\nnone\n\n\nf[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], g[0], g[1], g[2], g[3], g[4]\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIteration\n\n\n\n\n\n\nInit\n\n\nBaseInit",
            "title": "d2q9 optimalMixing"
        },
        {
            "location": "/models/optimization/d2q9_optimalMixing/#description",
            "text": "d2q9_optimalMixing",
            "title": "Description"
        },
        {
            "location": "/models/optimization/d2q9_optimalMixing/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/optimization/d2q9_optimalMixing/#zonal-settings",
            "text": "Name  Comment      MovingWallVelocity  inlet/outlet/init velocity    Velocity  inlet/outlet/init velocity    Pressure  Inlet pressure    Temperature  Temperature    TotalTempSqrInObj  Weight of [TotalTempSqr] in objective    CountCellsInObj  Weight of [CountCells] in objective    NMovingWallForceInObj  Weight of [NMovingWallForce] in objective    SWallForceInObj  Weight of [SWallForce] in objective    MovingWallPowerInObj  Weight of [MovingWallPower] in objective",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/optimization/d2q9_optimalMixing/#global-settings",
            "text": "Name  Derived  Comment      omega  1.0/(3*nu + 0.5)  one over relaxation time    nu   viscosity    omegaT  1.0/(3*K + 0.5)  one over relaxation time - thermal    K   thermal_diffusivity    Descent   Optimization Descent    GradientSmooth   Gradient smoothing in OptSolve    Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/optimization/d2q9_optimalMixing/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      Rho  kg/m3  Rho    T  K  T    U  m/s  U    RhoB  1  RhoB    TB  1  TB",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/optimization/d2q9_optimalMixing/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      TotalTempSqr  1  TotalTempSqr    CountCells  1  CountCells    NMovingWallForce  1  NMovingWallForce    SWallForce  1  SWallForce    MovingWallPower  1  MovingWallPower    omega_D  1  Gradient of objective with respect to [one over relaxation time]    nu_D  1  Gradient of objective with respect to [viscosity]    omegaT_D  1  Gradient of objective with respect to [one over relaxation time - thermal]    K_D  1  Gradient of objective with respect to [thermal_diffusivity]    AdjointRes  1  square L2 norm of adjoint change    Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/optimization/d2q9_optimalMixing/#node-types",
            "text": "Group  Types      BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity, NMovingWall, SWall    COLLISION  BGK, MRT    DESIGNSPACE  DesignSpace    NONE  None    OBJECTIVE  Inlet, Outlet    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/optimization/d2q9_optimalMixing/#solved-fields",
            "text": "Name  Access pattern  Comment      f[0]   f[0]    f[1]   f[1]    f[2]   f[2]    f[3]   f[3]    f[4]   f[4]    f[5]   f[5]    f[6]   f[6]    f[7]   f[7]    f[8]   f[8]    g[0]   g[0]    g[1]   g[1]    g[2]   g[2]    g[3]   g[3]    g[4]   g[4]",
            "title": "Solved fields"
        },
        {
            "location": "/models/optimization/d2q9_optimalMixing/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment      f[0]  f[0]   f[0]    f[1]  f[1]   f[1]    f[2]  f[2]   f[2]    f[3]  f[3]   f[3]    f[4]  f[4]   f[4]    f[5]  f[5]   f[5]    f[6]  f[6]   f[6]    f[7]  f[7]   f[7]    f[8]  f[8]   f[8]    g[0]  g[0]   g[0]    g[1]  g[1]   g[1]    g[2]  g[2]   g[2]    g[3]  g[3]   g[3]    g[4]  g[4]   g[4]",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/optimization/d2q9_optimalMixing/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      BaseIteration  Run  f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], g[0], g[1], g[2], g[3], g[4]  f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], g[0], g[1], g[2], g[3], g[4]    BaseInit  Init  none  f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], g[0], g[1], g[2], g[3], g[4]",
            "title": "Action stages"
        },
        {
            "location": "/models/optimization/d2q9_optimalMixing/#actions",
            "text": "Name  Stages      Iteration  BaseIteration    Init  BaseInit",
            "title": "Actions"
        },
        {
            "location": "/models/optimization/d3q19_heat_adj/",
            "text": "Description\n\n\nd3q19_heat_adj\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nVelocity\n\n\ninlet velocity\n\n\n\n\n\n\nPressure\n\n\ninlet pressure\n\n\n\n\n\n\nTemperature\n\n\ninlet density\n\n\n\n\n\n\nLimitTemperature\n\n\ninlet density\n\n\n\n\n\n\nHeatFluxInObj\n\n\nWeight of [Flux of heat] in objective\n\n\n\n\n\n\nHeatSquareFluxInObj\n\n\nWeight of [Flux of temperature squered] in objective\n\n\n\n\n\n\nFluxInObj\n\n\nWeight of [Volume flux] in objective\n\n\n\n\n\n\nTemperatureAtPointInObj\n\n\nWeight of [Integral of temperature] in objective\n\n\n\n\n\n\nHighTemperatureInObj\n\n\nWeight of [Penalty for high temperature] in objective\n\n\n\n\n\n\nLowTemperatureInObj\n\n\nWeight of [Penalty for low temperature] in objective\n\n\n\n\n\n\nMaterialPenaltyInObj\n\n\nWeight of [Quadratic penalty for intermediate material parameter] in objective\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nnu\n\n\n\n\nviscosity\n\n\n\n\n\n\nFluidAlpha\n\n\n\n\ninlet density\n\n\n\n\n\n\nSolidAlpha\n\n\n\n\nHeat conductivity of solid\n\n\n\n\n\n\nBuoyancy\n\n\n\n\nBuoyancy coefficient of temperature\n\n\n\n\n\n\nPorocityGamma\n\n\n1.0 - exp(PorocityTheta)\n\n\nGamma in hiperbolic transformation of porocity (-infty,1)\n\n\n\n\n\n\nPorocityTheta\n\n\n\n\nTheta in hiperbolic transformation of porocity\n\n\n\n\n\n\nDescent\n\n\n\n\nOptimization Descent\n\n\n\n\n\n\nGradientSmooth\n\n\n\n\nGradient smoothing in OptSolve\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nW\n\n\n1\n\n\nW\n\n\n\n\n\n\nWB\n\n\n1\n\n\nWB\n\n\n\n\n\n\nRho\n\n\n1\n\n\nRho\n\n\n\n\n\n\nT\n\n\n1\n\n\nT\n\n\n\n\n\n\nU\n\n\n1\n\n\nU\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nHeatFlux\n\n\nKm3/s\n\n\nFlux of heat\n\n\n\n\n\n\nHeatSquareFlux\n\n\nK2m3/s\n\n\nFlux of temperature squered\n\n\n\n\n\n\nFlux\n\n\nm3/s\n\n\nVolume flux\n\n\n\n\n\n\nTemperatureAtPoint\n\n\nK\n\n\nIntegral of temperature\n\n\n\n\n\n\nHighTemperature\n\n\n1\n\n\nPenalty for high temperature\n\n\n\n\n\n\nLowTemperature\n\n\n1\n\n\nPenalty for low temperature\n\n\n\n\n\n\nMaterialPenalty\n\n\nm3\n\n\nQuadratic penalty for intermediate material parameter\n\n\n\n\n\n\nnu_D\n\n\n1\n\n\nGradient of objective with respect to [viscosity]\n\n\n\n\n\n\nFluidAlpha_D\n\n\n1\n\n\nGradient of objective with respect to [inlet density]\n\n\n\n\n\n\nSolidAlpha_D\n\n\n1\n\n\nGradient of objective with respect to [Heat conductivity of solid]\n\n\n\n\n\n\nBuoyancy_D\n\n\n1\n\n\nGradient of objective with respect to [Buoyancy coefficient of temperature]\n\n\n\n\n\n\nPorocityGamma_D\n\n\n1\n\n\nGradient of objective with respect to [Gamma in hiperbolic transformation of porocity (-infty,1)]\n\n\n\n\n\n\nPorocityTheta_D\n\n\n1\n\n\nGradient of objective with respect to [Theta in hiperbolic transformation of porocity]\n\n\n\n\n\n\nAdjointRes\n\n\n1\n\n\nsquare L2 norm of adjoint change\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nADDITIONALS\n\n\nHeater, HeatSource\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet, Thermometer\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf0\n\n\n\n\nflow LB density F 0\n\n\n\n\n\n\nf1\n\n\n\n\nflow LB density F 1\n\n\n\n\n\n\nf2\n\n\n\n\nflow LB density F 2\n\n\n\n\n\n\nf3\n\n\n\n\nflow LB density F 3\n\n\n\n\n\n\nf4\n\n\n\n\nflow LB density F 4\n\n\n\n\n\n\nf5\n\n\n\n\nflow LB density F 5\n\n\n\n\n\n\nf6\n\n\n\n\nflow LB density F 6\n\n\n\n\n\n\nf7\n\n\n\n\nflow LB density F 7\n\n\n\n\n\n\nf8\n\n\n\n\nflow LB density F 8\n\n\n\n\n\n\nf9\n\n\n\n\nflow LB density F 9\n\n\n\n\n\n\nf10\n\n\n\n\nflow LB density F 10\n\n\n\n\n\n\nf11\n\n\n\n\nflow LB density F 11\n\n\n\n\n\n\nf12\n\n\n\n\nflow LB density F 12\n\n\n\n\n\n\nf13\n\n\n\n\nflow LB density F 13\n\n\n\n\n\n\nf14\n\n\n\n\nflow LB density F 14\n\n\n\n\n\n\nf15\n\n\n\n\nflow LB density F 15\n\n\n\n\n\n\nf16\n\n\n\n\nflow LB density F 16\n\n\n\n\n\n\nf17\n\n\n\n\nflow LB density F 17\n\n\n\n\n\n\nf18\n\n\n\n\nflow LB density F 18\n\n\n\n\n\n\ng0\n\n\n\n\nheat LB density G 0\n\n\n\n\n\n\ng1\n\n\n\n\nheat LB density G 1\n\n\n\n\n\n\ng2\n\n\n\n\nheat LB density G 2\n\n\n\n\n\n\ng3\n\n\n\n\nheat LB density G 3\n\n\n\n\n\n\ng4\n\n\n\n\nheat LB density G 4\n\n\n\n\n\n\ng5\n\n\n\n\nheat LB density G 5\n\n\n\n\n\n\ng6\n\n\n\n\nheat LB density G 6\n\n\n\n\n\n\nw\n\n\n\n\nweight fluid-solid\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf0\n\n\nf0\n\n\n\n\nflow LB density F 0\n\n\n\n\n\n\nf1\n\n\nf1\n\n\n\n\nflow LB density F 1\n\n\n\n\n\n\nf2\n\n\nf2\n\n\n\n\nflow LB density F 2\n\n\n\n\n\n\nf3\n\n\nf3\n\n\n\n\nflow LB density F 3\n\n\n\n\n\n\nf4\n\n\nf4\n\n\n\n\nflow LB density F 4\n\n\n\n\n\n\nf5\n\n\nf5\n\n\n\n\nflow LB density F 5\n\n\n\n\n\n\nf6\n\n\nf6\n\n\n\n\nflow LB density F 6\n\n\n\n\n\n\nf7\n\n\nf7\n\n\n\n\nflow LB density F 7\n\n\n\n\n\n\nf8\n\n\nf8\n\n\n\n\nflow LB density F 8\n\n\n\n\n\n\nf9\n\n\nf9\n\n\n\n\nflow LB density F 9\n\n\n\n\n\n\nf10\n\n\nf10\n\n\n\n\nflow LB density F 10\n\n\n\n\n\n\nf11\n\n\nf11\n\n\n\n\nflow LB density F 11\n\n\n\n\n\n\nf12\n\n\nf12\n\n\n\n\nflow LB density F 12\n\n\n\n\n\n\nf13\n\n\nf13\n\n\n\n\nflow LB density F 13\n\n\n\n\n\n\nf14\n\n\nf14\n\n\n\n\nflow LB density F 14\n\n\n\n\n\n\nf15\n\n\nf15\n\n\n\n\nflow LB density F 15\n\n\n\n\n\n\nf16\n\n\nf16\n\n\n\n\nflow LB density F 16\n\n\n\n\n\n\nf17\n\n\nf17\n\n\n\n\nflow LB density F 17\n\n\n\n\n\n\nf18\n\n\nf18\n\n\n\n\nflow LB density F 18\n\n\n\n\n\n\ng0\n\n\ng0\n\n\n\n\nheat LB density G 0\n\n\n\n\n\n\ng1\n\n\ng1\n\n\n\n\nheat LB density G 1\n\n\n\n\n\n\ng2\n\n\ng2\n\n\n\n\nheat LB density G 2\n\n\n\n\n\n\ng3\n\n\ng3\n\n\n\n\nheat LB density G 3\n\n\n\n\n\n\ng4\n\n\ng4\n\n\n\n\nheat LB density G 4\n\n\n\n\n\n\ng5\n\n\ng5\n\n\n\n\nheat LB density G 5\n\n\n\n\n\n\ng6\n\n\ng6\n\n\n\n\nheat LB density G 6\n\n\n\n\n\n\nw\n\n\nw\n\n\n\n\nweight fluid-solid\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nBaseIteration\n\n\nRun\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, g0, g1, g2, g3, g4, g5, g6, w\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, g0, g1, g2, g3, g4, g5, g6, w\n\n\n\n\n\n\nBaseInit\n\n\nInit\n\n\nnone\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, g0, g1, g2, g3, g4, g5, g6, w\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIteration\n\n\n\n\n\n\nInit\n\n\nBaseInit",
            "title": "D3q19 heat adj"
        },
        {
            "location": "/models/optimization/d3q19_heat_adj/#description",
            "text": "d3q19_heat_adj",
            "title": "Description"
        },
        {
            "location": "/models/optimization/d3q19_heat_adj/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/optimization/d3q19_heat_adj/#zonal-settings",
            "text": "Name  Comment      Velocity  inlet velocity    Pressure  inlet pressure    Temperature  inlet density    LimitTemperature  inlet density    HeatFluxInObj  Weight of [Flux of heat] in objective    HeatSquareFluxInObj  Weight of [Flux of temperature squered] in objective    FluxInObj  Weight of [Volume flux] in objective    TemperatureAtPointInObj  Weight of [Integral of temperature] in objective    HighTemperatureInObj  Weight of [Penalty for high temperature] in objective    LowTemperatureInObj  Weight of [Penalty for low temperature] in objective    MaterialPenaltyInObj  Weight of [Quadratic penalty for intermediate material parameter] in objective",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/optimization/d3q19_heat_adj/#global-settings",
            "text": "Name  Derived  Comment      nu   viscosity    FluidAlpha   inlet density    SolidAlpha   Heat conductivity of solid    Buoyancy   Buoyancy coefficient of temperature    PorocityGamma  1.0 - exp(PorocityTheta)  Gamma in hiperbolic transformation of porocity (-infty,1)    PorocityTheta   Theta in hiperbolic transformation of porocity    Descent   Optimization Descent    GradientSmooth   Gradient smoothing in OptSolve    Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/optimization/d3q19_heat_adj/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      W  1  W    WB  1  WB    Rho  1  Rho    T  1  T    U  1  U",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/optimization/d3q19_heat_adj/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      HeatFlux  Km3/s  Flux of heat    HeatSquareFlux  K2m3/s  Flux of temperature squered    Flux  m3/s  Volume flux    TemperatureAtPoint  K  Integral of temperature    HighTemperature  1  Penalty for high temperature    LowTemperature  1  Penalty for low temperature    MaterialPenalty  m3  Quadratic penalty for intermediate material parameter    nu_D  1  Gradient of objective with respect to [viscosity]    FluidAlpha_D  1  Gradient of objective with respect to [inlet density]    SolidAlpha_D  1  Gradient of objective with respect to [Heat conductivity of solid]    Buoyancy_D  1  Gradient of objective with respect to [Buoyancy coefficient of temperature]    PorocityGamma_D  1  Gradient of objective with respect to [Gamma in hiperbolic transformation of porocity (-infty,1)]    PorocityTheta_D  1  Gradient of objective with respect to [Theta in hiperbolic transformation of porocity]    AdjointRes  1  square L2 norm of adjoint change    Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/optimization/d3q19_heat_adj/#node-types",
            "text": "Group  Types      ADDITIONALS  Heater, HeatSource    BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity    COLLISION  BGK, MRT    DESIGNSPACE  DesignSpace    NONE  None    OBJECTIVE  Inlet, Outlet, Thermometer    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/optimization/d3q19_heat_adj/#solved-fields",
            "text": "Name  Access pattern  Comment      f0   flow LB density F 0    f1   flow LB density F 1    f2   flow LB density F 2    f3   flow LB density F 3    f4   flow LB density F 4    f5   flow LB density F 5    f6   flow LB density F 6    f7   flow LB density F 7    f8   flow LB density F 8    f9   flow LB density F 9    f10   flow LB density F 10    f11   flow LB density F 11    f12   flow LB density F 12    f13   flow LB density F 13    f14   flow LB density F 14    f15   flow LB density F 15    f16   flow LB density F 16    f17   flow LB density F 17    f18   flow LB density F 18    g0   heat LB density G 0    g1   heat LB density G 1    g2   heat LB density G 2    g3   heat LB density G 3    g4   heat LB density G 4    g5   heat LB density G 5    g6   heat LB density G 6    w   weight fluid-solid",
            "title": "Solved fields"
        },
        {
            "location": "/models/optimization/d3q19_heat_adj/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment      f0  f0   flow LB density F 0    f1  f1   flow LB density F 1    f2  f2   flow LB density F 2    f3  f3   flow LB density F 3    f4  f4   flow LB density F 4    f5  f5   flow LB density F 5    f6  f6   flow LB density F 6    f7  f7   flow LB density F 7    f8  f8   flow LB density F 8    f9  f9   flow LB density F 9    f10  f10   flow LB density F 10    f11  f11   flow LB density F 11    f12  f12   flow LB density F 12    f13  f13   flow LB density F 13    f14  f14   flow LB density F 14    f15  f15   flow LB density F 15    f16  f16   flow LB density F 16    f17  f17   flow LB density F 17    f18  f18   flow LB density F 18    g0  g0   heat LB density G 0    g1  g1   heat LB density G 1    g2  g2   heat LB density G 2    g3  g3   heat LB density G 3    g4  g4   heat LB density G 4    g5  g5   heat LB density G 5    g6  g6   heat LB density G 6    w  w   weight fluid-solid",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/optimization/d3q19_heat_adj/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      BaseIteration  Run  f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, g0, g1, g2, g3, g4, g5, g6, w  f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, g0, g1, g2, g3, g4, g5, g6, w    BaseInit  Init  none  f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, g0, g1, g2, g3, g4, g5, g6, w",
            "title": "Action stages"
        },
        {
            "location": "/models/optimization/d3q19_heat_adj/#actions",
            "text": "Name  Stages      Iteration  BaseIteration    Init  BaseInit",
            "title": "Actions"
        },
        {
            "location": "/models/optimization/experimental/d2q9_heat_adj/",
            "text": "Description\n\n\nd2q9_heat_adj\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nHeatFluxInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\nHeatSquareFluxInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\nFluxInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\nTemperatureInObj\n\n\nWeight of [integral of temperature] in objective\n\n\n\n\n\n\nHighTemperatureInObj\n\n\nWeight of [penalty for high temperature] in objective\n\n\n\n\n\n\nLowTemperatureInObj\n\n\nWeight of [penalty for low temperature] in objective\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nomega\n\n\n1.0/(3*nu + 0.5)\n\n\none over relaxation time\n\n\n\n\n\n\nnu0\n\n\n\n\nviscosity\n\n\n\n\n\n\nInletVelocity\n\n\n\n\ninlet velocity\n\n\n\n\n\n\nInletPressure\n\n\n\n\ninlet pressure\n\n\n\n\n\n\nInletDensity\n\n\n1.0+InletPressure/3\n\n\ninlet density\n\n\n\n\n\n\nInletTemperature\n\n\n\n\ninlet temperature\n\n\n\n\n\n\nInitTemperature\n\n\n\n\ninlet temperature\n\n\n\n\n\n\nHeaterTemperature\n\n\n\n\ninlet temperature\n\n\n\n\n\n\nFluidAlpha\n\n\n\n\nthermal diffusivity of fluid\n\n\n\n\n\n\nSolidAlpha\n\n\n\n\nthermal diffusivity of solid\n\n\n\n\n\n\nLimitTemperature\n\n\n\n\ntemperature of the heater\n\n\n\n\n\n\nInletTotalPressure\n\n\n\n\ntemperature of the heater\n\n\n\n\n\n\nOutletTotalPressure\n\n\n\n\ntemperature of the heater\n\n\n\n\n\n\nDescent\n\n\n\n\nOptimization Descent\n\n\n\n\n\n\nGradientSmooth\n\n\n\n\nGradient smoothing in OptSolve\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nRho\n\n\nkg/m3\n\n\nRho\n\n\n\n\n\n\nU\n\n\nm/s\n\n\nU\n\n\n\n\n\n\nT\n\n\nK\n\n\nT\n\n\n\n\n\n\nW\n\n\n1\n\n\nW\n\n\n\n\n\n\nWB\n\n\n1\n\n\nWB\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nHeatFlux\n\n\n1\n\n\npressure loss\n\n\n\n\n\n\nHeatSquareFlux\n\n\n1\n\n\npressure loss\n\n\n\n\n\n\nFlux\n\n\n1\n\n\npressure loss\n\n\n\n\n\n\nTemperature\n\n\n1\n\n\nintegral of temperature\n\n\n\n\n\n\nHighTemperature\n\n\n1\n\n\npenalty for high temperature\n\n\n\n\n\n\nLowTemperature\n\n\n1\n\n\npenalty for low temperature\n\n\n\n\n\n\nomega_D\n\n\n1\n\n\nGradient of objective with respect to [one over relaxation time]\n\n\n\n\n\n\nnu0_D\n\n\n1\n\n\nGradient of objective with respect to [viscosity]\n\n\n\n\n\n\nInletVelocity_D\n\n\n1\n\n\nGradient of objective with respect to [inlet velocity]\n\n\n\n\n\n\nInletPressure_D\n\n\n1\n\n\nGradient of objective with respect to [inlet pressure]\n\n\n\n\n\n\nInletDensity_D\n\n\n1\n\n\nGradient of objective with respect to [inlet density]\n\n\n\n\n\n\nInletTemperature_D\n\n\n1\n\n\nGradient of objective with respect to [inlet temperature]\n\n\n\n\n\n\nInitTemperature_D\n\n\n1\n\n\nGradient of objective with respect to [inlet temperature]\n\n\n\n\n\n\nHeaterTemperature_D\n\n\n1\n\n\nGradient of objective with respect to [inlet temperature]\n\n\n\n\n\n\nFluidAlpha_D\n\n\n1\n\n\nGradient of objective with respect to [thermal diffusivity of fluid]\n\n\n\n\n\n\nSolidAlpha_D\n\n\n1\n\n\nGradient of objective with respect to [thermal diffusivity of solid]\n\n\n\n\n\n\nLimitTemperature_D\n\n\n1\n\n\nGradient of objective with respect to [temperature of the heater]\n\n\n\n\n\n\nInletTotalPressure_D\n\n\n1\n\n\nGradient of objective with respect to [temperature of the heater]\n\n\n\n\n\n\nOutletTotalPressure_D\n\n\n1\n\n\nGradient of objective with respect to [temperature of the heater]\n\n\n\n\n\n\nAdjointRes\n\n\n1\n\n\nsquare L2 norm of adjoint change\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nADDITIONALS\n\n\nHeater, HeatSource\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet, Thermometer\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf0\n\n\n\n\nf0\n\n\n\n\n\n\nf1\n\n\n\n\nf1\n\n\n\n\n\n\nf2\n\n\n\n\nf2\n\n\n\n\n\n\nf3\n\n\n\n\nf3\n\n\n\n\n\n\nf4\n\n\n\n\nf4\n\n\n\n\n\n\nf5\n\n\n\n\nf5\n\n\n\n\n\n\nf6\n\n\n\n\nf6\n\n\n\n\n\n\nf7\n\n\n\n\nf7\n\n\n\n\n\n\nf8\n\n\n\n\nf8\n\n\n\n\n\n\nT0\n\n\n\n\nT0\n\n\n\n\n\n\nT1\n\n\n\n\nT1\n\n\n\n\n\n\nT2\n\n\n\n\nT2\n\n\n\n\n\n\nT3\n\n\n\n\nT3\n\n\n\n\n\n\nT4\n\n\n\n\nT4\n\n\n\n\n\n\nT5\n\n\n\n\nT5\n\n\n\n\n\n\nT6\n\n\n\n\nT6\n\n\n\n\n\n\nT7\n\n\n\n\nT7\n\n\n\n\n\n\nT8\n\n\n\n\nT8\n\n\n\n\n\n\nw\n\n\n\n\nw\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf0\n\n\nf0\n\n\n\n\nf0\n\n\n\n\n\n\nf1\n\n\nf1\n\n\n\n\nf1\n\n\n\n\n\n\nf2\n\n\nf2\n\n\n\n\nf2\n\n\n\n\n\n\nf3\n\n\nf3\n\n\n\n\nf3\n\n\n\n\n\n\nf4\n\n\nf4\n\n\n\n\nf4\n\n\n\n\n\n\nf5\n\n\nf5\n\n\n\n\nf5\n\n\n\n\n\n\nf6\n\n\nf6\n\n\n\n\nf6\n\n\n\n\n\n\nf7\n\n\nf7\n\n\n\n\nf7\n\n\n\n\n\n\nf8\n\n\nf8\n\n\n\n\nf8\n\n\n\n\n\n\nT0\n\n\nT0\n\n\n\n\nT0\n\n\n\n\n\n\nT1\n\n\nT1\n\n\n\n\nT1\n\n\n\n\n\n\nT2\n\n\nT2\n\n\n\n\nT2\n\n\n\n\n\n\nT3\n\n\nT3\n\n\n\n\nT3\n\n\n\n\n\n\nT4\n\n\nT4\n\n\n\n\nT4\n\n\n\n\n\n\nT5\n\n\nT5\n\n\n\n\nT5\n\n\n\n\n\n\nT6\n\n\nT6\n\n\n\n\nT6\n\n\n\n\n\n\nT7\n\n\nT7\n\n\n\n\nT7\n\n\n\n\n\n\nT8\n\n\nT8\n\n\n\n\nT8\n\n\n\n\n\n\nw\n\n\nw\n\n\n\n\nw\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nBaseIteration\n\n\nRun\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8, T0, T1, T2, T3, T4, T5, T6, T7, T8, w\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8, T0, T1, T2, T3, T4, T5, T6, T7, T8, w\n\n\n\n\n\n\nBaseInit\n\n\nInit\n\n\nnone\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8, T0, T1, T2, T3, T4, T5, T6, T7, T8, w\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIteration\n\n\n\n\n\n\nInit\n\n\nBaseInit",
            "title": "D2q9 heat adj"
        },
        {
            "location": "/models/optimization/experimental/d2q9_heat_adj/#description",
            "text": "d2q9_heat_adj",
            "title": "Description"
        },
        {
            "location": "/models/optimization/experimental/d2q9_heat_adj/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/optimization/experimental/d2q9_heat_adj/#zonal-settings",
            "text": "Name  Comment      HeatFluxInObj  Weight of [pressure loss] in objective    HeatSquareFluxInObj  Weight of [pressure loss] in objective    FluxInObj  Weight of [pressure loss] in objective    TemperatureInObj  Weight of [integral of temperature] in objective    HighTemperatureInObj  Weight of [penalty for high temperature] in objective    LowTemperatureInObj  Weight of [penalty for low temperature] in objective",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/optimization/experimental/d2q9_heat_adj/#global-settings",
            "text": "Name  Derived  Comment      omega  1.0/(3*nu + 0.5)  one over relaxation time    nu0   viscosity    InletVelocity   inlet velocity    InletPressure   inlet pressure    InletDensity  1.0+InletPressure/3  inlet density    InletTemperature   inlet temperature    InitTemperature   inlet temperature    HeaterTemperature   inlet temperature    FluidAlpha   thermal diffusivity of fluid    SolidAlpha   thermal diffusivity of solid    LimitTemperature   temperature of the heater    InletTotalPressure   temperature of the heater    OutletTotalPressure   temperature of the heater    Descent   Optimization Descent    GradientSmooth   Gradient smoothing in OptSolve    Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/optimization/experimental/d2q9_heat_adj/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      Rho  kg/m3  Rho    U  m/s  U    T  K  T    W  1  W    WB  1  WB",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/optimization/experimental/d2q9_heat_adj/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      HeatFlux  1  pressure loss    HeatSquareFlux  1  pressure loss    Flux  1  pressure loss    Temperature  1  integral of temperature    HighTemperature  1  penalty for high temperature    LowTemperature  1  penalty for low temperature    omega_D  1  Gradient of objective with respect to [one over relaxation time]    nu0_D  1  Gradient of objective with respect to [viscosity]    InletVelocity_D  1  Gradient of objective with respect to [inlet velocity]    InletPressure_D  1  Gradient of objective with respect to [inlet pressure]    InletDensity_D  1  Gradient of objective with respect to [inlet density]    InletTemperature_D  1  Gradient of objective with respect to [inlet temperature]    InitTemperature_D  1  Gradient of objective with respect to [inlet temperature]    HeaterTemperature_D  1  Gradient of objective with respect to [inlet temperature]    FluidAlpha_D  1  Gradient of objective with respect to [thermal diffusivity of fluid]    SolidAlpha_D  1  Gradient of objective with respect to [thermal diffusivity of solid]    LimitTemperature_D  1  Gradient of objective with respect to [temperature of the heater]    InletTotalPressure_D  1  Gradient of objective with respect to [temperature of the heater]    OutletTotalPressure_D  1  Gradient of objective with respect to [temperature of the heater]    AdjointRes  1  square L2 norm of adjoint change    Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/optimization/experimental/d2q9_heat_adj/#node-types",
            "text": "Group  Types      ADDITIONALS  Heater, HeatSource    BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity    COLLISION  BGK, MRT    DESIGNSPACE  DesignSpace    NONE  None    OBJECTIVE  Inlet, Outlet, Thermometer    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/optimization/experimental/d2q9_heat_adj/#solved-fields",
            "text": "Name  Access pattern  Comment      f0   f0    f1   f1    f2   f2    f3   f3    f4   f4    f5   f5    f6   f6    f7   f7    f8   f8    T0   T0    T1   T1    T2   T2    T3   T3    T4   T4    T5   T5    T6   T6    T7   T7    T8   T8    w   w",
            "title": "Solved fields"
        },
        {
            "location": "/models/optimization/experimental/d2q9_heat_adj/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment      f0  f0   f0    f1  f1   f1    f2  f2   f2    f3  f3   f3    f4  f4   f4    f5  f5   f5    f6  f6   f6    f7  f7   f7    f8  f8   f8    T0  T0   T0    T1  T1   T1    T2  T2   T2    T3  T3   T3    T4  T4   T4    T5  T5   T5    T6  T6   T6    T7  T7   T7    T8  T8   T8    w  w   w",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/optimization/experimental/d2q9_heat_adj/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      BaseIteration  Run  f0, f1, f2, f3, f4, f5, f6, f7, f8, T0, T1, T2, T3, T4, T5, T6, T7, T8, w  f0, f1, f2, f3, f4, f5, f6, f7, f8, T0, T1, T2, T3, T4, T5, T6, T7, T8, w    BaseInit  Init  none  f0, f1, f2, f3, f4, f5, f6, f7, f8, T0, T1, T2, T3, T4, T5, T6, T7, T8, w",
            "title": "Action stages"
        },
        {
            "location": "/models/optimization/experimental/d2q9_heat_adj/#actions",
            "text": "Name  Stages      Iteration  BaseIteration    Init  BaseInit",
            "title": "Actions"
        },
        {
            "location": "/models/shallowwater/sw/",
            "text": "Description\n\n\nLattice Boltzmann Method for Shallow Water equation on a D2Q9 lattice. \nModel has adjoint capabilities for unsteady optimization.\n\n\nDetails\n\n\nModel description files\n files for this model:\n\nDynamics.c\n\n\nDynamics.R\n\n\nZonal Settings\n\n\n\n\n\n\n\n\nName\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nHeight\n\n\nHeight\n\n\n\n\n\n\nPressDiffInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\nTotalDiffInObj\n\n\nWeight of [total variation of velocity] in objective\n\n\n\n\n\n\nMaterialInObj\n\n\nWeight of [total material] in objective\n\n\n\n\n\n\nEnergyGainInObj\n\n\nWeight of [pressure loss] in objective\n\n\n\n\n\n\n\n\nGlobal Settings\n\n\n\n\n\n\n\n\nName\n\n\nDerived\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nomega\n\n\n1.0/(3*nu + 0.5)\n\n\none over relaxation time\n\n\n\n\n\n\nnu\n\n\n\n\nviscosity\n\n\n\n\n\n\nInletVelocity\n\n\n\n\ninlet velocity\n\n\n\n\n\n\nInletPressure\n\n\n\n\ninlet pressure\n\n\n\n\n\n\nInletDensity\n\n\n1.0+InletPressure/3\n\n\ninlet density\n\n\n\n\n\n\nGravity\n\n\n\n\ninlet density\n\n\n\n\n\n\nSolidH\n\n\n\n\ninlet density\n\n\n\n\n\n\nEnergySink\n\n\n\n\ninlet density\n\n\n\n\n\n\nDescent\n\n\n\n\nOptimization Descent\n\n\n\n\n\n\nGradientSmooth\n\n\n\n\nGradient smoothing in OptSolve\n\n\n\n\n\n\nThreshold\n\n\n\n\nParameters threshold\n\n\n\n\n\n\n\n\nExported Quantities\n (VTK, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nRho\n\n\nm\n\n\nRho\n\n\n\n\n\n\nU\n\n\nm/s\n\n\nU\n\n\n\n\n\n\nRhoB\n\n\n1\n\n\nRhoB\n\n\n\n\n\n\nUB\n\n\n1\n\n\nUB\n\n\n\n\n\n\nW\n\n\n1\n\n\nW\n\n\n\n\n\n\nWB\n\n\n1\n\n\nWB\n\n\n\n\n\n\n\n\nExported Global Integrals\n (CSV, etc)\n\n\n\n\n\n\n\n\nName\n\n\nUnit\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nPressDiff\n\n\n1\n\n\npressure loss\n\n\n\n\n\n\nTotalDiff\n\n\n1\n\n\ntotal variation of velocity\n\n\n\n\n\n\nMaterial\n\n\n1\n\n\ntotal material\n\n\n\n\n\n\nEnergyGain\n\n\n1\n\n\npressure loss\n\n\n\n\n\n\nomega_D\n\n\n1\n\n\nGradient of objective with respect to [one over relaxation time]\n\n\n\n\n\n\nnu_D\n\n\n1\n\n\nGradient of objective with respect to [viscosity]\n\n\n\n\n\n\nInletVelocity_D\n\n\n1\n\n\nGradient of objective with respect to [inlet velocity]\n\n\n\n\n\n\nInletPressure_D\n\n\n1\n\n\nGradient of objective with respect to [inlet pressure]\n\n\n\n\n\n\nInletDensity_D\n\n\n1\n\n\nGradient of objective with respect to [inlet density]\n\n\n\n\n\n\nGravity_D\n\n\n1\n\n\nGradient of objective with respect to [inlet density]\n\n\n\n\n\n\nSolidH_D\n\n\n1\n\n\nGradient of objective with respect to [inlet density]\n\n\n\n\n\n\nEnergySink_D\n\n\n1\n\n\nGradient of objective with respect to [inlet density]\n\n\n\n\n\n\nAdjointRes\n\n\n1\n\n\nsquare L2 norm of adjoint change\n\n\n\n\n\n\nObjective\n\n\n1\n\n\nObjective function\n\n\n\n\n\n\n\n\nNode Types\n\n\n\n\n\n\n\n\nGroup\n\n\nTypes\n\n\n\n\n\n\n\n\n\n\nBOUNDARY\n\n\nWall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity\n\n\n\n\n\n\nCOLLISION\n\n\nBGK, MRT\n\n\n\n\n\n\nDESIGNSPACE\n\n\nDesignSpace\n\n\n\n\n\n\nNONE\n\n\nNone\n\n\n\n\n\n\nOBJECTIVE\n\n\nInlet, Outlet, Obj1\n\n\n\n\n\n\nSETTINGZONE\n\n\nDefaultZone\n\n\n\n\n\n\n\n\nSolved fields\n\n\n\n\n\n\n\n\nName\n\n\nAccess pattern\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf0\n\n\n\n\nf0\n\n\n\n\n\n\nf1\n\n\n\n\nf1\n\n\n\n\n\n\nf2\n\n\n\n\nf2\n\n\n\n\n\n\nf3\n\n\n\n\nf3\n\n\n\n\n\n\nf4\n\n\n\n\nf4\n\n\n\n\n\n\nf5\n\n\n\n\nf5\n\n\n\n\n\n\nf6\n\n\n\n\nf6\n\n\n\n\n\n\nf7\n\n\n\n\nf7\n\n\n\n\n\n\nf8\n\n\n\n\nf8\n\n\n\n\n\n\nw\n\n\n\n\nw\n\n\n\n\n\n\n\n\nDensities - default accessors\n\n\n\n\n\n\n\n\nName\n\n\nField\n\n\nPulling field from\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nf0\n\n\nf0\n\n\n\n\nf0\n\n\n\n\n\n\nf1\n\n\nf1\n\n\n\n\nf1\n\n\n\n\n\n\nf2\n\n\nf2\n\n\n\n\nf2\n\n\n\n\n\n\nf3\n\n\nf3\n\n\n\n\nf3\n\n\n\n\n\n\nf4\n\n\nf4\n\n\n\n\nf4\n\n\n\n\n\n\nf5\n\n\nf5\n\n\n\n\nf5\n\n\n\n\n\n\nf6\n\n\nf6\n\n\n\n\nf6\n\n\n\n\n\n\nf7\n\n\nf7\n\n\n\n\nf7\n\n\n\n\n\n\nf8\n\n\nf8\n\n\n\n\nf8\n\n\n\n\n\n\nw\n\n\nw\n\n\n\n\nw\n\n\n\n\n\n\n\n\nAction stages\n\n\n\n\n\n\n\n\nName\n\n\nMain procedure\n\n\nPreloaded densities\n\n\nPushed fields\n\n\n\n\n\n\n\n\n\n\nBaseIteration\n\n\nRun\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8, w\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8, w\n\n\n\n\n\n\nBaseInit\n\n\nInit\n\n\nnone\n\n\nf0, f1, f2, f3, f4, f5, f6, f7, f8, w\n\n\n\n\n\n\n\n\nActions\n\n\n\n\n\n\n\n\nName\n\n\nStages\n\n\n\n\n\n\n\n\n\n\nIteration\n\n\nBaseIteration\n\n\n\n\n\n\nInit\n\n\nBaseInit",
            "title": "Sw"
        },
        {
            "location": "/models/shallowwater/sw/#description",
            "text": "Lattice Boltzmann Method for Shallow Water equation on a D2Q9 lattice. \nModel has adjoint capabilities for unsteady optimization.",
            "title": "Description"
        },
        {
            "location": "/models/shallowwater/sw/#details",
            "text": "Model description files  files for this model: Dynamics.c  Dynamics.R",
            "title": "Details"
        },
        {
            "location": "/models/shallowwater/sw/#zonal-settings",
            "text": "Name  Comment      Height  Height    PressDiffInObj  Weight of [pressure loss] in objective    TotalDiffInObj  Weight of [total variation of velocity] in objective    MaterialInObj  Weight of [total material] in objective    EnergyGainInObj  Weight of [pressure loss] in objective",
            "title": "Zonal Settings"
        },
        {
            "location": "/models/shallowwater/sw/#global-settings",
            "text": "Name  Derived  Comment      omega  1.0/(3*nu + 0.5)  one over relaxation time    nu   viscosity    InletVelocity   inlet velocity    InletPressure   inlet pressure    InletDensity  1.0+InletPressure/3  inlet density    Gravity   inlet density    SolidH   inlet density    EnergySink   inlet density    Descent   Optimization Descent    GradientSmooth   Gradient smoothing in OptSolve    Threshold   Parameters threshold",
            "title": "Global Settings"
        },
        {
            "location": "/models/shallowwater/sw/#exported-quantities-vtk-etc",
            "text": "Name  Unit  Comment      Rho  m  Rho    U  m/s  U    RhoB  1  RhoB    UB  1  UB    W  1  W    WB  1  WB",
            "title": "Exported Quantities (VTK, etc)"
        },
        {
            "location": "/models/shallowwater/sw/#exported-global-integrals-csv-etc",
            "text": "Name  Unit  Comment      PressDiff  1  pressure loss    TotalDiff  1  total variation of velocity    Material  1  total material    EnergyGain  1  pressure loss    omega_D  1  Gradient of objective with respect to [one over relaxation time]    nu_D  1  Gradient of objective with respect to [viscosity]    InletVelocity_D  1  Gradient of objective with respect to [inlet velocity]    InletPressure_D  1  Gradient of objective with respect to [inlet pressure]    InletDensity_D  1  Gradient of objective with respect to [inlet density]    Gravity_D  1  Gradient of objective with respect to [inlet density]    SolidH_D  1  Gradient of objective with respect to [inlet density]    EnergySink_D  1  Gradient of objective with respect to [inlet density]    AdjointRes  1  square L2 norm of adjoint change    Objective  1  Objective function",
            "title": "Exported Global Integrals (CSV, etc)"
        },
        {
            "location": "/models/shallowwater/sw/#node-types",
            "text": "Group  Types      BOUNDARY  Wall, Solid, WVelocity, WPressure, WPressureL, EPressure, EVelocity    COLLISION  BGK, MRT    DESIGNSPACE  DesignSpace    NONE  None    OBJECTIVE  Inlet, Outlet, Obj1    SETTINGZONE  DefaultZone",
            "title": "Node Types"
        },
        {
            "location": "/models/shallowwater/sw/#solved-fields",
            "text": "Name  Access pattern  Comment      f0   f0    f1   f1    f2   f2    f3   f3    f4   f4    f5   f5    f6   f6    f7   f7    f8   f8    w   w",
            "title": "Solved fields"
        },
        {
            "location": "/models/shallowwater/sw/#densities-default-accessors",
            "text": "Name  Field  Pulling field from  Comment      f0  f0   f0    f1  f1   f1    f2  f2   f2    f3  f3   f3    f4  f4   f4    f5  f5   f5    f6  f6   f6    f7  f7   f7    f8  f8   f8    w  w   w",
            "title": "Densities - default accessors"
        },
        {
            "location": "/models/shallowwater/sw/#action-stages",
            "text": "Name  Main procedure  Preloaded densities  Pushed fields      BaseIteration  Run  f0, f1, f2, f3, f4, f5, f6, f7, f8, w  f0, f1, f2, f3, f4, f5, f6, f7, f8, w    BaseInit  Init  none  f0, f1, f2, f3, f4, f5, f6, f7, f8, w",
            "title": "Action stages"
        },
        {
            "location": "/models/shallowwater/sw/#actions",
            "text": "Name  Stages      Iteration  BaseIteration    Init  BaseInit",
            "title": "Actions"
        },
        {
            "location": "/tutorials/model-development/1.-finite-difference-wave-equation/",
            "text": "Finite difference wave equation\n\n\nThese tutorials will try to teach you how to make and use a new model in TCLB. First it will discuss our goal: the model we want to create. Then it will take you step by step, on how to create all the needed components.\n\n\nFinite difference wave equation\n\n\nWe want to discretize the \nWave Equation\n:\n\n\n\n\n\\ddot{u} = c^2\\Delta u\n\n\n\n\nFor this purpose we will use Finite Difference method. First we change the equation into two first order (in time) equations:\n\n\n\n\n\\left\\{\\begin{eqnarray} \\dot{v} =  &c^2\\Delta u \\\\ \\dot{u} =  &v  \\end{eqnarray}\\right.\n\n\n\n\nNow let us discretise the \nLaplace operator\n with simple finite difference (in 2D):\n\n\n\n\n\\Delta u \\approx \\frac{(u_{i-1,j}+u_{i+1,j}+u_{i,j-1}+u_{i,j+1}-4u_{i,j})}{(dx^2)}\n\n\n\n\nFinnaly we will use, what is called \nSemi-implicit Euler rule\n to integrate this equation in time. This will give us:\n\n\n\n\n\\left\\{\\begin{eqnarray} v^{n+1}_{i,j} &= v^n_{i,j}+dt c^2\\Delta u^n \\\\ u^{n+1}_{i,j} &= u^n_{i,j} +dtv^{n+1}_{i,j} \\end{eqnarray}\\right.\n\n\n\n\nThe semi-implicit-ness can be seen in the index of \nv\n in the second line\n\n\nFinnaly: we will get rid of all units by assuming \ndx\n and \ndt\n equal to 1\n\n\nImplementation\n\n\nCreating a model\n\n\nEvery model in TCLB is defined by a subdirectory of \nmodels\n. Let us now create a new one:\n\n\nmkdir models/tutorial/wave\ntouch models/tutorial/wave/conf.mk\n\n\n\n\n\nThe \nconf.mk\n file stores some additional settings for a model, but it also tells TCLB that this directory is in fact a model.\n\n\nNow we have to add two main files defining everything: \nDynamics.R\n - defining all the setup of the model, and \nDynamics.c\n - defining what will be happening in a node.\n\n\ntouch models/tutorial/wave/Dynamics.R\ntouch models/tutorial/wave/Dynamics.c\n\n\n\n\n\nWe want to have two Fields: \nu\n and \nv\n. We define them in \nDynamics.R\n:\n\n\nAddField\n(\nname\n=\n\"u\"\n)\n\nAddField\n(\nname\n=\n\"v\"\n)\n\n\n\n\n\n\nThen we need the main dynamics of a node. First let us write down the functions that will be used in the model(in Dynamics.c):\n\n\nCudaDeviceFunction\n \nfloat2\n \nColor\n()\n \n{\n\n  \nfloat2\n \nret\n;\n\n  \nret\n.\nx\n \n=\n \n0\n;\n\n  \nret\n.\ny\n \n=\n \n1\n;\n\n  \nreturn\n \nret\n;\n\n\n}\n\n\n\nCudaDeviceFunction\n \nvoid\n \nInit\n()\n \n{\n \n}\n\n\n\nCudaDeviceFunction\n \nvoid\n \nRun\n()\n \n{\n \n}\n\n\n\n\n\n\nThe \nCudaDeviceFunction\n prefix is needed for all functions in \nDynamics.c\n for technical reasons. We needed to fill only the \nColor\n function, as it is the only one which returns a value. For now, the model doesn't do much. Before continuing, let us first understand what these function do:\n\n\n\n\n\n\n\n\nFunction\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nInit\n\n\nThis function is called in all the nodes at the beginning of the simulation. All the initialization happens here.\n\n\n\n\n\n\nRun\n\n\nThis function will be called in every node in every iteration - it is the main dynamic of a node.\n\n\n\n\n\n\nColor\n\n\nThis function is useful only for the version of CLB with enabled graphics(\n./configure --enable-graphics\n). It calculates the level \nx\n on which the color of a pixel will be based. In most cases this will be temperature or velocity.\n\n\n\n\n\n\n\n\nFirst dynamics\n\n\nFirst, we want to initialize our fields(\nDynamics.c\n):\n\n\nCudaDeviceFunction\n \nvoid\n \nInit\n()\n \n{\n\n  \nu\n \n=\n \n0\n;\n\n  \nv\n \n=\n \n0\n;\n\n\n}\n\n\n\n\n\n\nThen let us start with a model that just preserves both fields without changing them. In TCLB we access fields with a notation \nu(dx,dy)\n, where \ndx\n and \ndy\n is the position from which to take the field, relative to the current node(\nDynamics.c\n):\n\n\nCudaDeviceFunction\n \nvoid\n \nRun\n()\n \n{\n\n  \nu\n \n=\n \nu\n(\n0\n,\n0\n);\n\n  \nv\n \n=\n \nv\n(\n0\n,\n0\n);\n\n\n}\n\n\n\n\n\n\nAdding Quantities\n\n\nFinally we want to access the resulting data. In TCLB, the data that will be exported to VTK, TXT or other format, are called [[Quantities]]. Let us add a quantity \nU\n to \nDynamics.R\n:\n\n\nAddQuantity\n(\nname\n=\n\"U\"\n)\n\n\n\n\n\n\nNow we have to add the calculation(\nDynamics.c\n):\n\n\nCudaDeviceFunction\n \nreal_t\n \ngetU\n()\n \n{\n\n  \nreturn\n \nu\n(\n0\n,\n0\n);\n\n\n}\n\n\n\n\n\n\nRunning a case\n\n\nNow we need to create a case file (let's call it \nexample.xml\n):\n\n\n<?xml version=\"1.0\"?>\n\n\n<CLBConfig\n \noutput=\n\"output/\"\n>\n\n        \n<Geometry\n \nnx=\n\"128\"\n \nny=\n\"128\"\n>\n\n    \n</Geometry>\n\n    \n<Model>\n\n    \n</Model>\n\n    \n<VTK\n \nIterations=\n\"10\"\n/>\n\n    \n<Solve\n \nIterations=\n\"1000\"\n/>\n\n\n</CLBConfig>\n\n\n\n\n\n\nThis case will create a mesh of 128x128 nodes, initialize it and run 1000 iterations. It will also save VTK output every 10 iterations.\n\n\nIn order to run it:\n\n\nmake configure\n./configure --enable-graphics\nmake wave\nCLB/wave/main example.xml\n\n\n\n\n\nThe results are not so impressive now, because basically, not only nothing is happening in a node, but also it is initialized with 0.\n\n\nSettings\n\n\nLet us introduce two \nsettings\n to our model(\nDynamics.R\n):\n\n\nAddSetting\n(\nname\n=\n\"Speed\"\n)\n\nAddSetting\n(\nname\n=\n\"Value\"\n,\n zonal\n=\nTRUE\n)\n\n\n\n\n\n\nWhere \nSpeed\n will be our parameter \nk\n in the wave equation, and \nValue\n will be the initial value of \nu\n. [[Settings]] which we want to be changing in the domain, are called \"zonal\". Settings are provided to us as variables in \nDynamics.c\n. Additionally, we need to modify \nColor\n function to observe the change in values in preview window:\n\n\nCudaDeviceFunction\n \nfloat2\n \nColor\n()\n \n{\n\n  \nfloat2\n \nret\n;\n\n  \nret\n.\nx\n \n=\n \ngetU\n();\n\n  \nret\n.\ny\n \n=\n \n1\n;\n\n  \nreturn\n \nret\n;\n\n\n}\n\n\n\nCudaDeviceFunction\n \nvoid\n \nInit\n()\n \n{\n\n  \nu\n \n=\n \nValue\n;\n\n  \nv\n \n=\n \n0\n;\n\n\n}\n\n\n\n\n\n\nNow we can name a region in our domain, and initialize it with a different value:\n\n\n<?xml version=\"1.0\"?>\n\n\n<CLBConfig\n \noutput=\n\"output/\"\n>\n\n        \n<Geometry\n \nnx=\n\"128\"\n \nny=\n\"128\"\n>\n\n                \n<None\n \nname=\n\"box\"\n>\n\n                        \n<Box\n \ndx=\n\"60\"\n \nnx=\n\"20\"\n \ndy=\n\"20\"\n \nny=\n\"30\"\n/>\n\n                \n</None>\n\n    \n</Geometry>\n\n    \n<Model>\n\n                \n<Params\n \nValue=\n\"0\"\n/>\n\n                \n<Params\n \nValue-box=\n\"1\"\n/>\n\n    \n</Model>\n\n    \n<VTK\n \nIterations=\n\"10\"\n/>\n\n    \n<Solve\n \nIterations=\n\"1000\"\n/>\n\n\n</CLBConfig>\n\n\n\n\n\n\nThis will mark a box 20x30 starting from the point (60,20) as a zone called 'box'. Then in the \n<Model>\n we first set \nValue\n in all zones to \n0\n, then set it to \n1\n in 'box'. \n\n\nNotice: Don't forget to compile(\nmake wave\n) the model again before running it after making any changes to \nDynamics.c\n or \nDynamics.R\n.\n\n\nYou will see that the results now are much more interesting. Ok. I'm joking, they are sill constant - but at least not 0.\n\n\nIntroducing FD\n\n\nNow we want to introduce the discretisation of our wave equation in to the mix:\n\n\nCudaDeviceFunction\n \nvoid\n \nRun\n()\n \n{\n\n  \nreal_t\n \nlap_u\n \n=\n \nu\n(\n-\n1\n,\n0\n)\n \n+\n \nu\n(\n1\n,\n0\n)\n \n+\n \nu\n(\n0\n,\n-\n1\n)\n \n+\n \nu\n(\n0\n,\n1\n)\n \n-\n \n4\n*\nu\n(\n0\n,\n0\n);\n\n  \nreal_t\n \na\n \n=\n \nSpeed\n \n*\n \nSpeed\n \n*\n \nlap_u\n;\n\n  \nv\n \n=\n \nv\n(\n0\n,\n0\n)\n \n+\n \na\n;\n\n  \nu\n \n=\n \nu\n(\n0\n,\n0\n)\n \n+\n \nv\n;\n\n\n}\n\n\n\n\n\n\nYou can see that we assumed \ndx\n and \ndt\n equal to 1 (it will be more clear why, later on).\n\n\nAnd now ... \nit won't compile\n. Why? The error is a bit obscure, like with many C++ Templates errors, but the reason is simple. We didn't tell the code that we want to access \nu\n in our neighbors. This is crucial, because the code have to know exactly were things are accessed, to prepare the right communication buffers. You can imagine that the neighboring node is on a different GPU on a different computer. Then we need this computer to know that it will have to send this data to us. On the other hand we want to send as small packets of information as possible, that is why the code have to be \nconservative\n wrt. to the possible access patterns. We define this information in \nDynamics.R\n:\n\n\nAddField\n(\nname\n=\n\"u\"\n,\n dx\n=\nc\n(\n-1\n,\n1\n),\n dy\n=\nc\n(\n-1\n,\n1\n))\n\n\n\n\n\n\nIf you don't know \nR\n then you need to know that \nc(...)\n means a vector/table of numbers. The above line means that the field \nu\n can be accessed for \ndx\n from -1 to 1 and \ndy\n from -1 to 1. Making it simple: we can access it from all of our 8 neighbors and ourselves. The other way (a shortcut) to express it would be:\n\n\nAddField\n(\nname\n=\n\"u\"\n,\n stencil2d\n=\n1\n)\n\n\n\n\n\n\nWhich means the same thing (\nstencil3d\n would mean also -1 to 1 in \nz\n direction)\n\n\nNow, the code compiles. We can add another parameter\n\n\n<Params\n \nSpeed=\n\"0.05\"\n \n/>\n\n\n\n\n\n\nto our case file, run and see how the wave propagates.\n\n\nMake it nicer:\n\n\nWe see that the result isn't very beautiful. It is partly because of our discretization, partly because the \nFourier transform of a rectangle\n isn't very nice. Let us introduce viscosity/drag to the system:\n\n\nCudaDeviceFunction\n \nvoid\n \nRun\n()\n \n{\n\n  \nreal_t\n \nlap_u\n \n=\n \nu\n(\n-\n1\n,\n0\n)\n \n+\n \nu\n(\n1\n,\n0\n)\n \n+\n \nu\n(\n0\n,\n-\n1\n)\n \n+\n \nu\n(\n0\n,\n1\n)\n \n-\n \n4\n*\nu\n(\n0\n,\n0\n);\n\n  \nreal_t\n \nlap_v\n \n=\n \nv\n(\n-\n1\n,\n0\n)\n \n+\n \nv\n(\n1\n,\n0\n)\n \n+\n \nv\n(\n0\n,\n-\n1\n)\n \n+\n \nv\n(\n0\n,\n1\n)\n \n-\n \n4\n*\nv\n(\n0\n,\n0\n);\n\n  \nreal_t\n \na\n \n=\n \nSpeed\n \n*\n \nSpeed\n \n*\n \nlap_u\n \n+\n \nViscosity\n \n*\n \nlap_v\n;\n\n  \nv\n \n=\n \nv\n(\n0\n,\n0\n)\n \n+\n \na\n;\n\n  \nu\n \n=\n \nu\n(\n0\n,\n0\n)\n \n+\n \nv\n;\n\n\n}\n\n\n\n\n\n\nRemember:\n you have to modify the \nv\n field access pattern, and add a \nViscosity\n setting in \nDynamics.R\n.\n\n\nNow you can play a bit with the settings to see some nice waves propagating. It can be seen now more clearly that \nthe domain in TCLB is always periodic\n. That is simply because it is the most general case. If you want to make your domain non-periodic - you must add boundary conditions - otherwise, whatever leaves on one side - comes back on the other.\n\n\nNode types\n\n\nNow we can add \nnode types\n that will change the behavior of some, selected nodes. For instance, let us have a Dirichlet boundary condition. We want the nodes that are on the boundary to set \nu\n and \nv\n to a fixed value. Let's call such nodes \nDirichlet\n. We define a new node type (yes, you guessed: in \nDynamics.R\n):\n\n\nAddNodeType\n(\nname\n=\n\"Dirichlet\"\n,\n group\n=\n\"BOUNDARY\"\n)\n\n\n\n\n\n\nYou can notice that node types have 'groups' (note: these groups, customary are with all caps). Each node can only be of one type ... from each group. You can imagine it like this: in each node we want to be able to set \nseparately\n a boundary condition, choose a discretization model and add a heat source. But you cannot set \ntwo\n boundary conditions in the same node, from the same group.\n\n\nNow, when we have this node type, we can use it to change the dynamics:\n\n\nCudaDeviceFunction\n \nvoid\n \nRun\n()\n \n{\n\n  \nreal_t\n \nlap_u\n \n=\n \nu\n(\n-\n1\n,\n0\n)\n \n+\n \nu\n(\n1\n,\n0\n)\n \n+\n \nu\n(\n0\n,\n-\n1\n)\n \n+\n \nu\n(\n0\n,\n1\n)\n \n-\n \n4\n*\nu\n(\n0\n,\n0\n);\n\n  \nreal_t\n \nlap_v\n \n=\n \nv\n(\n-\n1\n,\n0\n)\n \n+\n \nv\n(\n1\n,\n0\n)\n \n+\n \nv\n(\n0\n,\n-\n1\n)\n \n+\n \nv\n(\n0\n,\n1\n)\n \n-\n \n4\n*\nv\n(\n0\n,\n0\n);\n\n  \nreal_t\n \na\n \n=\n \nSpeed\n \n*\n \nSpeed\n \n*\n \nlap_u\n \n+\n \nViscosity\n \n*\n \nlap_v\n;\n\n  \nv\n \n=\n \nv\n(\n0\n,\n0\n)\n \n+\n \na\n;\n\n  \nu\n \n=\n \nu\n(\n0\n,\n0\n)\n \n+\n \nv\n;\n\n  \nif\n \n((\nNodeType\n \n&\n \nNODE_BOUNDARY\n)\n \n==\n \nNODE_Dirichlet\n)\n \n{\n\n    \nu\n \n=\n \nValue\n;\n\n    \nv\n \n=\n \n0\n;\n\n  \n}\n\n\n}\n\n\n\n\n\n\nYou can notice that we re-used the same zonal setting \nValue\n in this boundary condition. You can also notice, that the main calculation is still executed in the Dirichlet nodes. You can test it and see which version runs faster. Such additional computation can sometimes have a favorable impact on the performance on GPU, because of thing called \nbranching\n.\n\n\nNow, we can set some Dirichlet elements in the case file:\n\n\n<?xml version=\"1.0\"?>\n\n\n<CLBConfig\n \noutput=\n\"output/\"\n>\n\n        \n<Geometry\n \nnx=\n\"128\"\n \nny=\n\"128\"\n>\n\n                \n<Dirichlet\n \nname=\n\"border\"\n>\n\n                        \n<Box\n \nnx=\n\"1\"\n/>\n\n                        \n<Box\n \ndx=\n\"-1\"\n/>\n\n                        \n<Box\n \nny=\n\"1\"\n/>\n\n                        \n<Box\n \ndy=\n\"-1\"\n/>\n\n                \n</Dirichlet>\n\n                \n<None\n \nname=\n\"box\"\n>\n\n                        \n<Box\n \ndx=\n\"60\"\n \nnx=\n\"20\"\n \ndy=\n\"20\"\n \nny=\n\"30\"\n/>\n\n                \n</None>\n\n    \n</Geometry>\n\n    \n<Model>\n\n                \n<Params\n \nValue=\n\"0\"\n/>\n\n                \n<Params\n \nValue-box=\n\"1\"\n/>\n\n                \n<Params\n \nValue-border=\n\"0\"\n/>\n\n                \n<Params\n \nSpeed=\n\"0.05\"\n/>\n\n                \n<Params\n \nViscosity=\n\"0.001\"\n/>\n\n    \n</Model>\n\n    \n<VTK\n \nIterations=\n\"10\"\n/>\n\n    \n<Solve\n \nIterations=\n\"10000\"\n/>\n\n\n</CLBConfig>\n\n\n\n\n\n\nWe can notice the difference immediately. The waves are bouncing from the walls now.\n\n\nIn this case, we had a simple situation, as we have only one group of node types (and only one type), but normally we would have to distinguish between them. It would be done with:\n\n\nif\n \n((\nNodeType\n \n&\n \nNODE_BOUNDARY\n)\n \n==\n \nNODE_Dirichlet\n)\n \n{\n\n \n...\n\n\n}\n\n\n\n\n\n\nor\n\n\nswitch\n \n(\nNodeType\n \n&\n \nNODE_BOUNDARY\n)\n \n{\n\n\ncase\n \nNODE_Dirichlet\n:\n\n \n...\n\n \nbreak\n;\n\n\ncase\n \n...\n:\n\n \n...\n\n\n}",
            "title": "Finite difference wave equation"
        },
        {
            "location": "/tutorials/model-development/1.-finite-difference-wave-equation/#finite-difference-wave-equation",
            "text": "These tutorials will try to teach you how to make and use a new model in TCLB. First it will discuss our goal: the model we want to create. Then it will take you step by step, on how to create all the needed components.",
            "title": "Finite difference wave equation"
        },
        {
            "location": "/tutorials/model-development/1.-finite-difference-wave-equation/#finite-difference-wave-equation_1",
            "text": "We want to discretize the  Wave Equation :   \\ddot{u} = c^2\\Delta u   For this purpose we will use Finite Difference method. First we change the equation into two first order (in time) equations:   \\left\\{\\begin{eqnarray} \\dot{v} =  &c^2\\Delta u \\\\ \\dot{u} =  &v  \\end{eqnarray}\\right.   Now let us discretise the  Laplace operator  with simple finite difference (in 2D):   \\Delta u \\approx \\frac{(u_{i-1,j}+u_{i+1,j}+u_{i,j-1}+u_{i,j+1}-4u_{i,j})}{(dx^2)}   Finnaly we will use, what is called  Semi-implicit Euler rule  to integrate this equation in time. This will give us:   \\left\\{\\begin{eqnarray} v^{n+1}_{i,j} &= v^n_{i,j}+dt c^2\\Delta u^n \\\\ u^{n+1}_{i,j} &= u^n_{i,j} +dtv^{n+1}_{i,j} \\end{eqnarray}\\right.   The semi-implicit-ness can be seen in the index of  v  in the second line  Finnaly: we will get rid of all units by assuming  dx  and  dt  equal to 1",
            "title": "Finite difference wave equation"
        },
        {
            "location": "/tutorials/model-development/1.-finite-difference-wave-equation/#implementation",
            "text": "",
            "title": "Implementation"
        },
        {
            "location": "/tutorials/model-development/1.-finite-difference-wave-equation/#creating-a-model",
            "text": "Every model in TCLB is defined by a subdirectory of  models . Let us now create a new one:  mkdir models/tutorial/wave\ntouch models/tutorial/wave/conf.mk  The  conf.mk  file stores some additional settings for a model, but it also tells TCLB that this directory is in fact a model.  Now we have to add two main files defining everything:  Dynamics.R  - defining all the setup of the model, and  Dynamics.c  - defining what will be happening in a node.  touch models/tutorial/wave/Dynamics.R\ntouch models/tutorial/wave/Dynamics.c  We want to have two Fields:  u  and  v . We define them in  Dynamics.R :  AddField ( name = \"u\" ) \nAddField ( name = \"v\" )   Then we need the main dynamics of a node. First let us write down the functions that will be used in the model(in Dynamics.c):  CudaDeviceFunction   float2   Color ()   { \n   float2   ret ; \n   ret . x   =   0 ; \n   ret . y   =   1 ; \n   return   ret ;  }  CudaDeviceFunction   void   Init ()   {   }  CudaDeviceFunction   void   Run ()   {   }   The  CudaDeviceFunction  prefix is needed for all functions in  Dynamics.c  for technical reasons. We needed to fill only the  Color  function, as it is the only one which returns a value. For now, the model doesn't do much. Before continuing, let us first understand what these function do:     Function  Description      Init  This function is called in all the nodes at the beginning of the simulation. All the initialization happens here.    Run  This function will be called in every node in every iteration - it is the main dynamic of a node.    Color  This function is useful only for the version of CLB with enabled graphics( ./configure --enable-graphics ). It calculates the level  x  on which the color of a pixel will be based. In most cases this will be temperature or velocity.",
            "title": "Creating a model"
        },
        {
            "location": "/tutorials/model-development/1.-finite-difference-wave-equation/#first-dynamics",
            "text": "First, we want to initialize our fields( Dynamics.c ):  CudaDeviceFunction   void   Init ()   { \n   u   =   0 ; \n   v   =   0 ;  }   Then let us start with a model that just preserves both fields without changing them. In TCLB we access fields with a notation  u(dx,dy) , where  dx  and  dy  is the position from which to take the field, relative to the current node( Dynamics.c ):  CudaDeviceFunction   void   Run ()   { \n   u   =   u ( 0 , 0 ); \n   v   =   v ( 0 , 0 );  }",
            "title": "First dynamics"
        },
        {
            "location": "/tutorials/model-development/1.-finite-difference-wave-equation/#adding-quantities",
            "text": "Finally we want to access the resulting data. In TCLB, the data that will be exported to VTK, TXT or other format, are called [[Quantities]]. Let us add a quantity  U  to  Dynamics.R :  AddQuantity ( name = \"U\" )   Now we have to add the calculation( Dynamics.c ):  CudaDeviceFunction   real_t   getU ()   { \n   return   u ( 0 , 0 );  }",
            "title": "Adding Quantities"
        },
        {
            "location": "/tutorials/model-development/1.-finite-difference-wave-equation/#running-a-case",
            "text": "Now we need to create a case file (let's call it  example.xml ):  <?xml version=\"1.0\"?>  <CLBConfig   output= \"output/\" > \n         <Geometry   nx= \"128\"   ny= \"128\" > \n     </Geometry> \n     <Model> \n     </Model> \n     <VTK   Iterations= \"10\" /> \n     <Solve   Iterations= \"1000\" />  </CLBConfig>   This case will create a mesh of 128x128 nodes, initialize it and run 1000 iterations. It will also save VTK output every 10 iterations.  In order to run it:  make configure\n./configure --enable-graphics\nmake wave\nCLB/wave/main example.xml  The results are not so impressive now, because basically, not only nothing is happening in a node, but also it is initialized with 0.",
            "title": "Running a case"
        },
        {
            "location": "/tutorials/model-development/1.-finite-difference-wave-equation/#settings",
            "text": "Let us introduce two  settings  to our model( Dynamics.R ):  AddSetting ( name = \"Speed\" ) \nAddSetting ( name = \"Value\" ,  zonal = TRUE )   Where  Speed  will be our parameter  k  in the wave equation, and  Value  will be the initial value of  u . [[Settings]] which we want to be changing in the domain, are called \"zonal\". Settings are provided to us as variables in  Dynamics.c . Additionally, we need to modify  Color  function to observe the change in values in preview window:  CudaDeviceFunction   float2   Color ()   { \n   float2   ret ; \n   ret . x   =   getU (); \n   ret . y   =   1 ; \n   return   ret ;  }  CudaDeviceFunction   void   Init ()   { \n   u   =   Value ; \n   v   =   0 ;  }   Now we can name a region in our domain, and initialize it with a different value:  <?xml version=\"1.0\"?>  <CLBConfig   output= \"output/\" > \n         <Geometry   nx= \"128\"   ny= \"128\" > \n                 <None   name= \"box\" > \n                         <Box   dx= \"60\"   nx= \"20\"   dy= \"20\"   ny= \"30\" /> \n                 </None> \n     </Geometry> \n     <Model> \n                 <Params   Value= \"0\" /> \n                 <Params   Value-box= \"1\" /> \n     </Model> \n     <VTK   Iterations= \"10\" /> \n     <Solve   Iterations= \"1000\" />  </CLBConfig>   This will mark a box 20x30 starting from the point (60,20) as a zone called 'box'. Then in the  <Model>  we first set  Value  in all zones to  0 , then set it to  1  in 'box'.   Notice: Don't forget to compile( make wave ) the model again before running it after making any changes to  Dynamics.c  or  Dynamics.R .  You will see that the results now are much more interesting. Ok. I'm joking, they are sill constant - but at least not 0.",
            "title": "Settings"
        },
        {
            "location": "/tutorials/model-development/1.-finite-difference-wave-equation/#introducing-fd",
            "text": "Now we want to introduce the discretisation of our wave equation in to the mix:  CudaDeviceFunction   void   Run ()   { \n   real_t   lap_u   =   u ( - 1 , 0 )   +   u ( 1 , 0 )   +   u ( 0 , - 1 )   +   u ( 0 , 1 )   -   4 * u ( 0 , 0 ); \n   real_t   a   =   Speed   *   Speed   *   lap_u ; \n   v   =   v ( 0 , 0 )   +   a ; \n   u   =   u ( 0 , 0 )   +   v ;  }   You can see that we assumed  dx  and  dt  equal to 1 (it will be more clear why, later on).  And now ...  it won't compile . Why? The error is a bit obscure, like with many C++ Templates errors, but the reason is simple. We didn't tell the code that we want to access  u  in our neighbors. This is crucial, because the code have to know exactly were things are accessed, to prepare the right communication buffers. You can imagine that the neighboring node is on a different GPU on a different computer. Then we need this computer to know that it will have to send this data to us. On the other hand we want to send as small packets of information as possible, that is why the code have to be  conservative  wrt. to the possible access patterns. We define this information in  Dynamics.R :  AddField ( name = \"u\" ,  dx = c ( -1 , 1 ),  dy = c ( -1 , 1 ))   If you don't know  R  then you need to know that  c(...)  means a vector/table of numbers. The above line means that the field  u  can be accessed for  dx  from -1 to 1 and  dy  from -1 to 1. Making it simple: we can access it from all of our 8 neighbors and ourselves. The other way (a shortcut) to express it would be:  AddField ( name = \"u\" ,  stencil2d = 1 )   Which means the same thing ( stencil3d  would mean also -1 to 1 in  z  direction)  Now, the code compiles. We can add another parameter  <Params   Speed= \"0.05\"   />   to our case file, run and see how the wave propagates.",
            "title": "Introducing FD"
        },
        {
            "location": "/tutorials/model-development/1.-finite-difference-wave-equation/#make-it-nicer",
            "text": "We see that the result isn't very beautiful. It is partly because of our discretization, partly because the  Fourier transform of a rectangle  isn't very nice. Let us introduce viscosity/drag to the system:  CudaDeviceFunction   void   Run ()   { \n   real_t   lap_u   =   u ( - 1 , 0 )   +   u ( 1 , 0 )   +   u ( 0 , - 1 )   +   u ( 0 , 1 )   -   4 * u ( 0 , 0 ); \n   real_t   lap_v   =   v ( - 1 , 0 )   +   v ( 1 , 0 )   +   v ( 0 , - 1 )   +   v ( 0 , 1 )   -   4 * v ( 0 , 0 ); \n   real_t   a   =   Speed   *   Speed   *   lap_u   +   Viscosity   *   lap_v ; \n   v   =   v ( 0 , 0 )   +   a ; \n   u   =   u ( 0 , 0 )   +   v ;  }   Remember:  you have to modify the  v  field access pattern, and add a  Viscosity  setting in  Dynamics.R .  Now you can play a bit with the settings to see some nice waves propagating. It can be seen now more clearly that  the domain in TCLB is always periodic . That is simply because it is the most general case. If you want to make your domain non-periodic - you must add boundary conditions - otherwise, whatever leaves on one side - comes back on the other.",
            "title": "Make it nicer:"
        },
        {
            "location": "/tutorials/model-development/1.-finite-difference-wave-equation/#node-types",
            "text": "Now we can add  node types  that will change the behavior of some, selected nodes. For instance, let us have a Dirichlet boundary condition. We want the nodes that are on the boundary to set  u  and  v  to a fixed value. Let's call such nodes  Dirichlet . We define a new node type (yes, you guessed: in  Dynamics.R ):  AddNodeType ( name = \"Dirichlet\" ,  group = \"BOUNDARY\" )   You can notice that node types have 'groups' (note: these groups, customary are with all caps). Each node can only be of one type ... from each group. You can imagine it like this: in each node we want to be able to set  separately  a boundary condition, choose a discretization model and add a heat source. But you cannot set  two  boundary conditions in the same node, from the same group.  Now, when we have this node type, we can use it to change the dynamics:  CudaDeviceFunction   void   Run ()   { \n   real_t   lap_u   =   u ( - 1 , 0 )   +   u ( 1 , 0 )   +   u ( 0 , - 1 )   +   u ( 0 , 1 )   -   4 * u ( 0 , 0 ); \n   real_t   lap_v   =   v ( - 1 , 0 )   +   v ( 1 , 0 )   +   v ( 0 , - 1 )   +   v ( 0 , 1 )   -   4 * v ( 0 , 0 ); \n   real_t   a   =   Speed   *   Speed   *   lap_u   +   Viscosity   *   lap_v ; \n   v   =   v ( 0 , 0 )   +   a ; \n   u   =   u ( 0 , 0 )   +   v ; \n   if   (( NodeType   &   NODE_BOUNDARY )   ==   NODE_Dirichlet )   { \n     u   =   Value ; \n     v   =   0 ; \n   }  }   You can notice that we re-used the same zonal setting  Value  in this boundary condition. You can also notice, that the main calculation is still executed in the Dirichlet nodes. You can test it and see which version runs faster. Such additional computation can sometimes have a favorable impact on the performance on GPU, because of thing called  branching .  Now, we can set some Dirichlet elements in the case file:  <?xml version=\"1.0\"?>  <CLBConfig   output= \"output/\" > \n         <Geometry   nx= \"128\"   ny= \"128\" > \n                 <Dirichlet   name= \"border\" > \n                         <Box   nx= \"1\" /> \n                         <Box   dx= \"-1\" /> \n                         <Box   ny= \"1\" /> \n                         <Box   dy= \"-1\" /> \n                 </Dirichlet> \n                 <None   name= \"box\" > \n                         <Box   dx= \"60\"   nx= \"20\"   dy= \"20\"   ny= \"30\" /> \n                 </None> \n     </Geometry> \n     <Model> \n                 <Params   Value= \"0\" /> \n                 <Params   Value-box= \"1\" /> \n                 <Params   Value-border= \"0\" /> \n                 <Params   Speed= \"0.05\" /> \n                 <Params   Viscosity= \"0.001\" /> \n     </Model> \n     <VTK   Iterations= \"10\" /> \n     <Solve   Iterations= \"10000\" />  </CLBConfig>   We can notice the difference immediately. The waves are bouncing from the walls now.  In this case, we had a simple situation, as we have only one group of node types (and only one type), but normally we would have to distinguish between them. It would be done with:  if   (( NodeType   &   NODE_BOUNDARY )   ==   NODE_Dirichlet )   { \n  ...  }   or  switch   ( NodeType   &   NODE_BOUNDARY )   {  case   NODE_Dirichlet : \n  ... \n  break ;  case   ... : \n  ...  }",
            "title": "Node types"
        },
        {
            "location": "/tutorials/model-development/2.-D2Q9-Single-Relexation-Time/",
            "text": "This tutorial will try to teach you how to make and use lattice Boltzmann (LB) models within the TCLB environment. First a brief overview will be given of the discrete \nlattice Boltzmann equation\n taking advantage of the Bhatnagar-Gross-Krook (BGK) collision operator (also known as single relaxation time operator) will be given, then the code required to simulate Poiseuille flow will be developed.\n\n\nThe SRT-lattice Boltzmann Equation\n\n\nThe discrete form of the Boltzmann transport equation can be expressed as:\n\n\n\n\n f_i(x+c_i,t+1)=f_i(x,t)-\\frac{1}{\\tau}(f_i(x,t)-f_i^{eq}(x,t)) \n\n\n\n\nThis describes the evolution of particle distribution functions along discrete velocities, where the right hand side is often referred to as the collision operation and the evaluation to the left hand side, the streaming operation. Note here that we are going to work in lattice units during the description of the model in which we assume $\\Delta x = \\Delta t = 1$. For the D2Q9 model, this assumption allows us to express the 9 discrete directions as,\n\n\n\n\n c = \\left( \\begin{array}& 0 & 1 & 0 & -1 & 0 & 1 & -1 & -1 & 1 \\\\ 0 & 0 & 1 & 0 & -1 & 1 & 1 & -1 & -1 \\end{array} \\right) \n\n\n\n\nAdditionally, we define the equilibrium distribution function found by an expansion of a Maxwellian distribution as,\n\n\n\n\n f_i^{eq}(x,t) = \\omega _ i \\rho \\left( 1 + \\frac{c_iu}{c_s^2}+ \\frac{(c_iu)^2}{2c_s^4} - \\frac{u^2}{2c_s^2} \\right) \n\n\n\n\nwhere,\n\n\n\n\n c_s^2 = \\frac{1}{3} \n\n\n\n\n\n\n \\omega_i=\\left\\{ \\begin{array}{ll}  \\frac{4}{9}  & i=0\\\\ \\frac{1}{9} & i=1,2,3,4\\\\ \\frac{1}{36} & i=5,6,7,8 \\end{array} \\right. \n\n\n\n\nBoundary Conditions and Force Implementation\n\n\nFor this specific example, we are looking at a flow through a channel. We can utilise periodic conditions along the x-axis but have to implement no-slip wall conditions to limit  domain along y-axis. To do this with LBM, the bounceback method is used.  Particle distribution functions that stream into a node flagged as a \"wall\" are reversed, or \"bounced-back\" in the opposite direction Therefore, in general for a D2Q9 lattice we obtain,\n\n\n\n\n \\left\\{ \\begin{array}{ll}   f_0=f'_0\\\\ f_1=f'_3\\\\ f_2=f'_4\\\\ f_3=f'_1\\\\ f_4=f'_2\\\\ f_5=f'_7\\\\ f_6=f'_8\\\\ f_7=f'_5\\\\ f_8=f'_6\\\\  \\end{array} \\right. \n\n\n\n\nwhere ' indicates the post-bounce-back direction.\n\n\nTo drive the fluid in the Poiseuille flow example, a body force will be applied. For this we consider a body force \nG\n acting in each time increment resulting in a momentum change $\\Delta\\rho u = G$ . To incorporate this, we modify the equilibrium velocity,\n\n\n\n\n\\rho u^* = \\rho u + \\tau G \n\n\n\n\nThis approach ultimately acts to relax each particle distribution function towards an equilibrium momentum that has included the time-incremental change due to the applied body force. To obtain the bulk fluid velocity, the before and after collision momentum is averaged giving,\n\n\n\n\n \\rho v = \\rho u + \\frac{1}{2} G \n\n\n\n\nand with this we now have all we the dynamics required to implement the specified example.\n\n\nModel Creation in TCLB\n\n\nAs in the previous \ntutorial\n, we want to set up a folder named \nd2q9srt\n in  \n~TCLB/models/tutorial/\n and create the generic file structure (\nconf.mk\n, \nDynamics.c\n, \nDynamics.R\n).\n\n\nTo start off the model, we look to add the nine distribution functions for the nine discrete velocities. This is implemented in the \nDynamics.R\n file, but instead of adding each as its own field we look to stream the functions in the process of calling them at each node. To do this we instead add them as \nDensities\n:\n\n\nAddDensity\n(\nname\n=\n\"f[0]\"\n,\n dx\n=\n0\n,\n dy\n=\n0\n  \n)\n\nAddDensity\n(\nname\n=\n\"f[1]\"\n,\n dx\n=\n1\n,\n dy\n=\n0\n  \n)\n\nAddDensity\n(\nname\n=\n\"f[2]\"\n,\n dx\n=\n0\n,\n dy\n=\n1\n  \n)\n\nAddDensity\n(\nname\n=\n\"f[3]\"\n,\n dx\n=\n-1\n,\ndy\n=\n0\n  \n)\n\nAddDensity\n(\nname\n=\n\"f[4]\"\n,\n dx\n=\n0\n,\n dy\n=\n-1\n \n)\n\nAddDensity\n(\nname\n=\n\"f[5]\"\n,\n dx\n=\n1\n,\n dy\n=\n1\n  \n)\n\nAddDensity\n(\nname\n=\n\"f[6]\"\n,\n dx\n=\n-1\n,\ndy\n=\n1\n  \n)\n\nAddDensity\n(\nname\n=\n\"f[7]\"\n,\n dx\n=\n-1\n,\ndy\n=\n-1\n \n)\n\nAddDensity\n(\nname\n=\n\"f[8]\"\n,\n dx\n=\n1\n,\n dy\n=\n-1\n \n)\n\n\n\n\n\n\nNotice that the dx and dy coordinates correspond with the \nc\n matrix previously given. At this stage, it helps to assess what other values will be  needed to initialise and run the LBM. To start off the method, a fluid density and initial velocities must be specified, then to perform the collision operation the relaxation time  and the magnitude of the applied body force need to be defined . Additionally, from this simulation we want to be able to interrogate the macroscopic fluid velocity and density so these must be added as \nQuantities\n.  For this, we define (in \nDynamics.R\n):\n\n\nAddQuantity\n(\n name\n=\n\"U\"\n,\nunit\n=\n\"m/s\"\n,\n \nvector\n=\nTRUE\n \n)\n\nAddQuantity\n(\n name\n=\n\"Rho\"\n,\nunit\n=\n\"kg/m3\"\n \n)\n\n\nAddSetting\n(\n name\n=\n\"omega\"\n,\n comment\n=\n'inverse of relaxation time'\n)\n\nAddSetting\n(\n name\n=\n\"nu\"\n,\n omega\n=\n'1.0/(3*nu+0.5)'\n,\n default\n=\n0.16666666\n,\n comment\n=\n'viscosity'\n)\n\nAddSetting\n(\n name\n=\n\"Velocity\"\n,\ndefault\n=\n0\n,\n comment\n=\n'inlet/outlet/init velocity'\n,\n zonal\n=\nTRUE\n)\n\nAddSetting\n(\n name\n=\n\"GravitationX\"\n,\ndefault\n=\n0\n,\n comment\n=\n'body/external acceleration'\n,\n zonal\n=\nTRUE\n)\n\nAddSetting\n(\n name\n=\n\"GravitationY\"\n,\ndefault\n=\n0\n,\n comment\n=\n'body/external acceleration'\n,\n zonal\n=\nTRUE\n)\n\nAddSetting\n(\n name\n=\n\"Density\"\n,\ndefault\n=\n1\n,\n comment\n=\n'Density'\n)\n\n\n\n\n\n\nFrom the above, we have all the variables we need to implement the LBM. The first step is to initialise the lattice over the required domain, this is incorporated as part of the dynamics that are occurring in the model and must be incorporated into the \nDynamics.c\n file within the \nInit()\n function.\n\n\nCudaDeviceFunction\n \nvoid\n \nInit\n(){\n\n    \nreal_t\n \nu\n[\n2\n]\n \n=\n \n{\nVelocity\n,\n \n0.0\n};\n\n    \nreal_t\n \nd\n \n=\n \nDensity\n;\n\n    \nSetEquilibrium\n(\nd\n,\nu\n);\n\n\n}\n\n\n\n\n\n\nNotice here that we are calling on the function \nSetEquilibrium()\n within which we want to calculate the equilibrium distribution $f_i^{eq}$ for the given density and velocity fields.\n\n\nCudaDeviceFunction\n \nvoid\n \nSetEquilibrium\n(\nreal_t\n \nd\n,\n \nreal_t\n \nu\n[\n2\n])\n\n\n{\n\n\nf\n[\n0\n]\n \n=\n \n(\n \n2.\n \n+\n \n(\n \n-\nu\n[\n1\n]\n*\nu\n[\n1\n]\n \n-\n \nu\n[\n0\n]\n*\nu\n[\n0\n]\n \n)\n*\n3.\n \n)\n*\nd\n*\n2.\n/\n9.\n;\n\n\nf\n[\n1\n]\n \n=\n \n(\n \n2.\n \n+\n \n(\n \n-\nu\n[\n1\n]\n*\nu\n[\n1\n]\n \n+\n \n(\n \n1\n \n+\n \nu\n[\n0\n]\n \n)\n*\nu\n[\n0\n]\n*\n2.\n \n)\n*\n3.\n \n)\n*\nd\n/\n18.\n;\n\n\nf\n[\n2\n]\n \n=\n \n(\n \n2.\n \n+\n \n(\n \n-\nu\n[\n0\n]\n*\nu\n[\n0\n]\n \n+\n \n(\n \n1\n \n+\n \nu\n[\n1\n]\n \n)\n*\nu\n[\n1\n]\n*\n2.\n \n)\n*\n3.\n \n)\n*\nd\n/\n18.\n;\n\n\nf\n[\n3\n]\n \n=\n \n(\n \n2.\n \n+\n \n(\n \n-\nu\n[\n1\n]\n*\nu\n[\n1\n]\n \n+\n \n(\n \n-\n1\n \n+\n \nu\n[\n0\n]\n \n)\n*\nu\n[\n0\n]\n*\n2.\n \n)\n*\n3.\n \n)\n*\nd\n/\n18.\n;\n\n\nf\n[\n4\n]\n \n=\n \n(\n \n2.\n \n+\n \n(\n \n-\nu\n[\n0\n]\n*\nu\n[\n0\n]\n \n+\n \n(\n \n-\n1\n \n+\n \nu\n[\n1\n]\n \n)\n*\nu\n[\n1\n]\n*\n2.\n \n)\n*\n3.\n \n)\n*\nd\n/\n18.\n;\n\n\nf\n[\n5\n]\n \n=\n \n(\n \n1.\n \n+\n \n(\n \n(\n \n1\n \n+\n \nu\n[\n1\n]\n \n)\n*\nu\n[\n1\n]\n \n+\n \n(\n \n1\n \n+\n \nu\n[\n0\n]\n \n+\n \nu\n[\n1\n]\n*\n3.\n \n)\n*\nu\n[\n0\n]\n \n)\n*\n3.\n \n)\n*\nd\n/\n36.\n;\n\n\nf\n[\n6\n]\n \n=\n \n(\n \n1.\n \n+\n \n(\n \n(\n \n1\n \n+\n \nu\n[\n1\n]\n \n)\n*\nu\n[\n1\n]\n \n+\n \n(\n \n-\n1\n \n+\n \nu\n[\n0\n]\n \n-\n \nu\n[\n1\n]\n*\n3.\n \n)\n*\nu\n[\n0\n]\n \n)\n*\n3.\n \n)\n*\nd\n/\n36.\n;\n\n\nf\n[\n7\n]\n \n=\n \n(\n \n1.\n \n+\n \n(\n \n(\n \n-\n1\n \n+\n \nu\n[\n1\n]\n \n)\n*\nu\n[\n1\n]\n \n+\n \n(\n \n-\n1\n \n+\n \nu\n[\n0\n]\n \n+\n \nu\n[\n1\n]\n*\n3.\n \n)\n*\nu\n[\n0\n]\n \n)\n*\n3.\n \n)\n*\nd\n/\n36.\n;\n\n\nf\n[\n8\n]\n \n=\n \n(\n \n1.\n \n+\n \n(\n \n(\n \n-\n1\n \n+\n \nu\n[\n1\n]\n \n)\n*\nu\n[\n1\n]\n \n+\n \n(\n \n1\n \n+\n \nu\n[\n0\n]\n \n-\n \nu\n[\n1\n]\n*\n3.\n \n)\n*\nu\n[\n0\n]\n \n)\n*\n3.\n \n)\n*\nd\n/\n36.\n;\n\n\n}\n\n\n\n\n\n\nWith the equilibrium function taken care of, we can now look at updating our initialised lattice. For this, the streaming operation is taken care of with the specification of \nDensities\n that we made. The collision operation however needs to be implemented and bounce-back for nodes flagged as walls. To do this, we define the \nrun()\n function to describe what happens at each node at each timestep.\n\n\nCudaDeviceFunction\n \nvoid\n \nRun\n()\n \n{\n\n\n// This defines the dynamics that we run at each node in the domain.\n\n    \nswitch\n \n(\nNodeType\n \n&\n \nNODE_BOUNDARY\n)\n \n{\n\n    \ncase\n \nNODE_Wall\n:\n\n        \nBounceBack\n();\n\n        \nbreak\n;\n\n    \n}\n\n    \nif\n \n((\nNodeType\n \n&\n \nNODE_BOUNDARY\n)\n \n==\n \nNODE_BGK\n)\n \n    \n{\n\n        \nCollisionBGK\n();\n\n    \n}\n\n\n}\n\n\n\n\n\n\nDon't forget to declare new node types in \nDynamics.R\n.\n\n\nAdditionally, in all \nDynamics.c\n files the \nColor()\n function is required. (even with \n./configure --disable-graphics\n).\n\n\nCudaDeviceFunction\n \nfloat2\n \nColor\n()\n \n{\n\n  \nfloat2\n \nret\n;\n\n  \nret\n.\nx\n \n=\n \n0\n;\n\n  \nret\n.\ny\n \n=\n \n1\n;\n\n  \nreturn\n \nret\n;\n\n\n}\n\n\n\n\n\n\nThe switch function described can also be used for the implementation of velocity/pressure boundaries, but these will not be discussed in this tutorial. As can be seen above, we need to define functions that describe both the \nBounceBack()\n and \nCollisionBGK()\n operations. The bounce-back operation occurs as described in the theory component of this tutorial where distribution functions are reversed:\n\n\nCudaDeviceFunction\n \nvoid\n \nBounceBack\n()\n \n{\n\n\n// Method to reverse distribution functions along the bounding nodes.\n\n        \nreal_t\n \nuf\n;\n\n    \nuf\n \n=\n \nf\n[\n3\n];\n\n    \nf\n[\n3\n]\n \n=\n \nf\n[\n1\n];\n\n    \nf\n[\n1\n]\n \n=\n \nuf\n;\n\n    \nuf\n \n=\n \nf\n[\n4\n];\n\n    \nf\n[\n4\n]\n \n=\n \nf\n[\n2\n];\n\n    \nf\n[\n2\n]\n \n=\n \nuf\n;\n\n    \nuf\n \n=\n \nf\n[\n7\n];\n\n    \nf\n[\n7\n]\n \n=\n \nf\n[\n5\n];\n\n    \nf\n[\n5\n]\n \n=\n \nuf\n;\n\n    \nuf\n \n=\n \nf\n[\n8\n];\n\n    \nf\n[\n8\n]\n \n=\n \nf\n[\n6\n];\n\n    \nf\n[\n6\n]\n \n=\n \nuf\n;\n\n\n}\n\n\n\n\n\n\nThe BGK collision, from the left hand side of the discrete Boltzmann equation:\n\n\nCudaDeviceFunction\n \nvoid\n \nCollisionBGK\n()\n \n{\n\n\n// Here we perform a single relaxation time collision operation.\n\n\n// We save memory here by using a single dummy variable\n\n    \nreal_t\n \nu\n[\n2\n],\n \nd\n,\n \nf_temp\n[\n9\n];\n\n    \nd\n \n=\n \ngetRho\n();\n\n    \n// pu* = pu + rG\n\n    \nu\n[\n0\n]\n \n=\n \n((\n \nf\n[\n8\n]\n-\nf\n[\n7\n]\n-\nf\n[\n6\n]\n+\nf\n[\n5\n]\n-\nf\n[\n3\n]\n+\nf\n[\n1\n]\n \n)\n/\nd\n \n+\n \nGravitationX\n/\nomega\n \n);\n\n    \nu\n[\n1\n]\n \n=\n \n((\n-\nf\n[\n8\n]\n-\nf\n[\n7\n]\n+\nf\n[\n6\n]\n+\nf\n[\n5\n]\n-\nf\n[\n4\n]\n+\nf\n[\n2\n]\n \n)\n/\nd\n \n+\n \nGravitationY\n/\nomega\n \n);\n\n    \nf_temp\n[\n0\n]\n \n=\n \nf\n[\n0\n];\n\n    \nf_temp\n[\n1\n]\n \n=\n \nf\n[\n1\n];\n\n    \nf_temp\n[\n2\n]\n \n=\n \nf\n[\n2\n];\n\n    \nf_temp\n[\n3\n]\n \n=\n \nf\n[\n3\n];\n\n    \nf_temp\n[\n4\n]\n \n=\n \nf\n[\n4\n];\n\n    \nf_temp\n[\n5\n]\n \n=\n \nf\n[\n5\n];\n\n    \nf_temp\n[\n6\n]\n \n=\n \nf\n[\n6\n];\n\n    \nf_temp\n[\n7\n]\n \n=\n \nf\n[\n7\n];\n\n    \nf_temp\n[\n8\n]\n \n=\n \nf\n[\n8\n];\n\n    \nSetEquilibrium\n(\nd\n,\n \nu\n);\n \n//stores equilibrium distribution in f[0]-f[8]\n\n    \nf\n[\n0\n]\n \n=\n \nf_temp\n[\n0\n]\n \n-\n \nomega\n*\n(\nf_temp\n[\n0\n]\n-\nf\n[\n0\n]);\n  \n    \nf\n[\n1\n]\n \n=\n \nf_temp\n[\n1\n]\n \n-\n \nomega\n*\n(\nf_temp\n[\n1\n]\n-\nf\n[\n1\n]);\n\n    \nf\n[\n2\n]\n \n=\n \nf_temp\n[\n2\n]\n \n-\n \nomega\n*\n(\nf_temp\n[\n2\n]\n-\nf\n[\n2\n]);\n\n    \nf\n[\n3\n]\n \n=\n \nf_temp\n[\n3\n]\n \n-\n \nomega\n*\n(\nf_temp\n[\n3\n]\n-\nf\n[\n3\n]);\n  \n    \nf\n[\n4\n]\n \n=\n \nf_temp\n[\n4\n]\n \n-\n \nomega\n*\n(\nf_temp\n[\n4\n]\n-\nf\n[\n4\n]);\n\n    \nf\n[\n5\n]\n \n=\n \nf_temp\n[\n5\n]\n \n-\n \nomega\n*\n(\nf_temp\n[\n5\n]\n-\nf\n[\n5\n]);\n\n    \nf\n[\n6\n]\n \n=\n \nf_temp\n[\n6\n]\n \n-\n \nomega\n*\n(\nf_temp\n[\n6\n]\n-\nf\n[\n6\n]);\n  \n    \nf\n[\n7\n]\n \n=\n \nf_temp\n[\n7\n]\n \n-\n \nomega\n*\n(\nf_temp\n[\n7\n]\n-\nf\n[\n7\n]);\n\n    \nf\n[\n8\n]\n \n=\n \nf_temp\n[\n8\n]\n \n-\n \nomega\n*\n(\nf_temp\n[\n8\n]\n-\nf\n[\n8\n]);\n\n\n}\n\n\n\n\n\n\nWith all the dynamics described, all that is left to do now is calculate the macroscopic variables using \nGet\n functions to correspond with the Quantities stated in \nDynamics.R\n.The macroscopic density is the sum of all the distribution functions and the momentum is the sum of the distribution functions multiplied by the discrete velocity directions.\n\n\nCudaDeviceFunction\n \nreal_t\n \ngetRho\n()\n \n{\n\n\n// This function defines the macroscopic density at the current node.\n\n    \nreturn\n \nf\n[\n8\n]\n+\nf\n[\n7\n]\n+\nf\n[\n6\n]\n+\nf\n[\n5\n]\n+\nf\n[\n4\n]\n+\nf\n[\n3\n]\n+\nf\n[\n2\n]\n+\nf\n[\n1\n]\n+\nf\n[\n0\n];\n\n\n}\n\n\n\nCudaDeviceFunction\n \nvector_t\n \ngetU\n()\n \n{\n\n\n// This function defines the macroscopic velocity at the current node.\n\n    \nreal_t\n \nd\n \n=\n \nf\n[\n8\n]\n+\nf\n[\n7\n]\n+\nf\n[\n6\n]\n+\nf\n[\n5\n]\n+\nf\n[\n4\n]\n+\nf\n[\n3\n]\n+\nf\n[\n2\n]\n+\nf\n[\n1\n]\n+\nf\n[\n0\n];\n\n    \nvector_t\n \nu\n;\n\n    \n// pv = pu + G/2\n\n    \nu\n.\nx\n \n=\n \n((\n \nf\n[\n8\n]\n-\nf\n[\n7\n]\n-\nf\n[\n6\n]\n+\nf\n[\n5\n]\n-\nf\n[\n3\n]\n+\nf\n[\n1\n]\n \n)\n/\nd\n \n+\n \nGravitationX\n*\n0.5\n \n);\n\n    \nu\n.\ny\n \n=\n \n((\n-\nf\n[\n8\n]\n-\nf\n[\n7\n]\n+\nf\n[\n6\n]\n+\nf\n[\n5\n]\n-\nf\n[\n4\n]\n+\nf\n[\n2\n]\n \n)\n/\nd\n \n+\n \nGravitationY\n*\n0.5\n \n);\n\n    \nu\n.\nz\n \n=\n \n0\n;\n\n    \nreturn\n \nu\n;\n\n\n}\n\n\n\n\n\n\nSetting up a Simulation\n\n\nIn order validate this example, we want to specify the relation between physical and lattice units. For this, we need provide the relations for the spatial and time dimensions. The most natural way to do this is to give the physical \ndx\n size and the actual fluid viscosity. This information is stored at the start of the \nxml\n input file under the parent heading of \n<Units>\n, for this you want to first create a new file by the name of \nd2q9_poiseuille.xml\n:\n\n\n<?xml version=\"1.0\"?>\n\n\n<CLBConfig\n \nversion=\n\"2.0\"\n \noutput=\n\"output/\"\n>\n\n    \n<Units>\n\n        \n<Params\n \nsize=\n\"0.0005m\"\n \ngauge=\n\"1\"\n/>\n\n        \n<Params\n \nnu=\n\"1e-5m2/s\"\n \ngauge=\n\"0.1666666666\"\n/>\n\n    \n</Units>\n\n\n\n\n\n\nThe reason for this, is it gives not only a view of how to implement physical values in TCLB but gives a straightforward method to calculate the expected maximum physical velocity. We do this through a comparison of the maximum velocity which in Poiseuille is given by:\n\n\n\n\n u_{max} = \\frac{gH^2}{8\\nu} \n\n\n\n\nThe setup of the test simulation domain is arbitrary and different values can be tested from those shown here. A channel of \n0.02m\n length and \n0.0095m\n height is chosen with an applied body force of \n0.000311634m/s^2\n. As stated above one lattice spacing is equal to \n0.0005m\n so the total size of the simulation domain will be \n0.02 x (0.0095+2*0.0005) m\n. This is defined as the geometry of the system in the xml set up file noting that the in-built \n<Channel>\n function is used to specify the bottom and top nodes as walls:\n\n\n<Geometry\n \nnx=\n\"0.02m\"\n \nny=\n\"0.0105m\"\n>\n\n    \n<BGK><Box/></BGK>\n\n    \n<Wall\n \nmask=\n\"ALL\"\n>\n\n        \n<Channel/>\n\n    \n</Wall>\n\n\n</Geometry>\n\n\n\n\n\n\nHere we can see that the collision method specified for the cells in the entire domain is BGK to align with the \nRun\n function. Following on from the geometry of the domain, the model specific settings (defined in \nDynamics.R\n) need to be defined. For this we take a fluid of density \n1000kg/m^3\n and choose a relaxation time of the value 1.\n\n\n<Model>\n\n    \n<Params\n \nVelocity=\n\"0.0\"\n/>\n\n    \n<Params\n \nomega=\n\"1.0\"\n/>\n\n    \n<Params\n \nGravitationX=\n\"0.000311634m/s2\"\n/>\n\n    \n<Params\n \nDensity=\n\"1000kg/m3\"\n/>\n\n\n</Model>\n\n\n\n\n\n\nThe final step is to output the desired quantities both at the start (so we can be sure that we have initialised the lattice correctly) and after the final solution step.\n\n\n    \n<VTK/>\n\n    \n<VTK\n \nIterations=\n\"50000\"\n/>\n\n    \n<Solve\n \nIterations=\n\"50000\"\n/>\n\n\n</CLBConfig>\n\n\n\n\n\n\nWith the model and set-up files created, we can now look to make and run d2q9srt. To do this first enter the TCLB directory and call the run file along with the input file location, after this, the analysis can be performed in Paraview:\n\n\nmake d2q9srt\nCLB/d2q9srt/main d2q9_poiseuille.xml\nparaview output/d2q9_poiseuille_VTK_P00_..pvti\n\n\n\n\n\nIn case the calculations are run on CPU, an mpi run can also be initiated e.g:\n\n\nmpirun -np \n4\n CLB/d2q9srt/main d2q9_poiseuille.xml\n\n\n\n\n\nFrom the analytical equation given before, we expect a maximum velocity of \n0.000351562m/s\n, while in the results it is found to be \n0.00035293m/s\n showing an error of 0.389%.",
            "title": "D2Q9 Single Relexation Time (SRT)"
        },
        {
            "location": "/tutorials/model-development/2.-D2Q9-Single-Relexation-Time/#the-srt-lattice-boltzmann-equation",
            "text": "The discrete form of the Boltzmann transport equation can be expressed as:    f_i(x+c_i,t+1)=f_i(x,t)-\\frac{1}{\\tau}(f_i(x,t)-f_i^{eq}(x,t))    This describes the evolution of particle distribution functions along discrete velocities, where the right hand side is often referred to as the collision operation and the evaluation to the left hand side, the streaming operation. Note here that we are going to work in lattice units during the description of the model in which we assume $\\Delta x = \\Delta t = 1$. For the D2Q9 model, this assumption allows us to express the 9 discrete directions as,    c = \\left( \\begin{array}& 0 & 1 & 0 & -1 & 0 & 1 & -1 & -1 & 1 \\\\ 0 & 0 & 1 & 0 & -1 & 1 & 1 & -1 & -1 \\end{array} \\right)    Additionally, we define the equilibrium distribution function found by an expansion of a Maxwellian distribution as,    f_i^{eq}(x,t) = \\omega _ i \\rho \\left( 1 + \\frac{c_iu}{c_s^2}+ \\frac{(c_iu)^2}{2c_s^4} - \\frac{u^2}{2c_s^2} \\right)    where,    c_s^2 = \\frac{1}{3}      \\omega_i=\\left\\{ \\begin{array}{ll}  \\frac{4}{9}  & i=0\\\\ \\frac{1}{9} & i=1,2,3,4\\\\ \\frac{1}{36} & i=5,6,7,8 \\end{array} \\right.",
            "title": "The SRT-lattice Boltzmann Equation"
        },
        {
            "location": "/tutorials/model-development/2.-D2Q9-Single-Relexation-Time/#boundary-conditions-and-force-implementation",
            "text": "For this specific example, we are looking at a flow through a channel. We can utilise periodic conditions along the x-axis but have to implement no-slip wall conditions to limit  domain along y-axis. To do this with LBM, the bounceback method is used.  Particle distribution functions that stream into a node flagged as a \"wall\" are reversed, or \"bounced-back\" in the opposite direction Therefore, in general for a D2Q9 lattice we obtain,    \\left\\{ \\begin{array}{ll}   f_0=f'_0\\\\ f_1=f'_3\\\\ f_2=f'_4\\\\ f_3=f'_1\\\\ f_4=f'_2\\\\ f_5=f'_7\\\\ f_6=f'_8\\\\ f_7=f'_5\\\\ f_8=f'_6\\\\  \\end{array} \\right.    where ' indicates the post-bounce-back direction.  To drive the fluid in the Poiseuille flow example, a body force will be applied. For this we consider a body force  G  acting in each time increment resulting in a momentum change $\\Delta\\rho u = G$ . To incorporate this, we modify the equilibrium velocity,   \\rho u^* = \\rho u + \\tau G    This approach ultimately acts to relax each particle distribution function towards an equilibrium momentum that has included the time-incremental change due to the applied body force. To obtain the bulk fluid velocity, the before and after collision momentum is averaged giving,    \\rho v = \\rho u + \\frac{1}{2} G    and with this we now have all we the dynamics required to implement the specified example.",
            "title": "Boundary Conditions and Force Implementation"
        },
        {
            "location": "/tutorials/model-development/2.-D2Q9-Single-Relexation-Time/#model-creation-in-tclb",
            "text": "As in the previous  tutorial , we want to set up a folder named  d2q9srt  in   ~TCLB/models/tutorial/  and create the generic file structure ( conf.mk ,  Dynamics.c ,  Dynamics.R ).  To start off the model, we look to add the nine distribution functions for the nine discrete velocities. This is implemented in the  Dynamics.R  file, but instead of adding each as its own field we look to stream the functions in the process of calling them at each node. To do this we instead add them as  Densities :  AddDensity ( name = \"f[0]\" ,  dx = 0 ,  dy = 0    ) \nAddDensity ( name = \"f[1]\" ,  dx = 1 ,  dy = 0    ) \nAddDensity ( name = \"f[2]\" ,  dx = 0 ,  dy = 1    ) \nAddDensity ( name = \"f[3]\" ,  dx = -1 , dy = 0    ) \nAddDensity ( name = \"f[4]\" ,  dx = 0 ,  dy = -1   ) \nAddDensity ( name = \"f[5]\" ,  dx = 1 ,  dy = 1    ) \nAddDensity ( name = \"f[6]\" ,  dx = -1 , dy = 1    ) \nAddDensity ( name = \"f[7]\" ,  dx = -1 , dy = -1   ) \nAddDensity ( name = \"f[8]\" ,  dx = 1 ,  dy = -1   )   Notice that the dx and dy coordinates correspond with the  c  matrix previously given. At this stage, it helps to assess what other values will be  needed to initialise and run the LBM. To start off the method, a fluid density and initial velocities must be specified, then to perform the collision operation the relaxation time  and the magnitude of the applied body force need to be defined . Additionally, from this simulation we want to be able to interrogate the macroscopic fluid velocity and density so these must be added as  Quantities .  For this, we define (in  Dynamics.R ):  AddQuantity (  name = \"U\" , unit = \"m/s\" ,   vector = TRUE   ) \nAddQuantity (  name = \"Rho\" , unit = \"kg/m3\"   ) \n\nAddSetting (  name = \"omega\" ,  comment = 'inverse of relaxation time' ) \nAddSetting (  name = \"nu\" ,  omega = '1.0/(3*nu+0.5)' ,  default = 0.16666666 ,  comment = 'viscosity' ) \nAddSetting (  name = \"Velocity\" , default = 0 ,  comment = 'inlet/outlet/init velocity' ,  zonal = TRUE ) \nAddSetting (  name = \"GravitationX\" , default = 0 ,  comment = 'body/external acceleration' ,  zonal = TRUE ) \nAddSetting (  name = \"GravitationY\" , default = 0 ,  comment = 'body/external acceleration' ,  zonal = TRUE ) \nAddSetting (  name = \"Density\" , default = 1 ,  comment = 'Density' )   From the above, we have all the variables we need to implement the LBM. The first step is to initialise the lattice over the required domain, this is incorporated as part of the dynamics that are occurring in the model and must be incorporated into the  Dynamics.c  file within the  Init()  function.  CudaDeviceFunction   void   Init (){ \n     real_t   u [ 2 ]   =   { Velocity ,   0.0 }; \n     real_t   d   =   Density ; \n     SetEquilibrium ( d , u );  }   Notice here that we are calling on the function  SetEquilibrium()  within which we want to calculate the equilibrium distribution $f_i^{eq}$ for the given density and velocity fields.  CudaDeviceFunction   void   SetEquilibrium ( real_t   d ,   real_t   u [ 2 ])  {  f [ 0 ]   =   (   2.   +   (   - u [ 1 ] * u [ 1 ]   -   u [ 0 ] * u [ 0 ]   ) * 3.   ) * d * 2. / 9. ;  f [ 1 ]   =   (   2.   +   (   - u [ 1 ] * u [ 1 ]   +   (   1   +   u [ 0 ]   ) * u [ 0 ] * 2.   ) * 3.   ) * d / 18. ;  f [ 2 ]   =   (   2.   +   (   - u [ 0 ] * u [ 0 ]   +   (   1   +   u [ 1 ]   ) * u [ 1 ] * 2.   ) * 3.   ) * d / 18. ;  f [ 3 ]   =   (   2.   +   (   - u [ 1 ] * u [ 1 ]   +   (   - 1   +   u [ 0 ]   ) * u [ 0 ] * 2.   ) * 3.   ) * d / 18. ;  f [ 4 ]   =   (   2.   +   (   - u [ 0 ] * u [ 0 ]   +   (   - 1   +   u [ 1 ]   ) * u [ 1 ] * 2.   ) * 3.   ) * d / 18. ;  f [ 5 ]   =   (   1.   +   (   (   1   +   u [ 1 ]   ) * u [ 1 ]   +   (   1   +   u [ 0 ]   +   u [ 1 ] * 3.   ) * u [ 0 ]   ) * 3.   ) * d / 36. ;  f [ 6 ]   =   (   1.   +   (   (   1   +   u [ 1 ]   ) * u [ 1 ]   +   (   - 1   +   u [ 0 ]   -   u [ 1 ] * 3.   ) * u [ 0 ]   ) * 3.   ) * d / 36. ;  f [ 7 ]   =   (   1.   +   (   (   - 1   +   u [ 1 ]   ) * u [ 1 ]   +   (   - 1   +   u [ 0 ]   +   u [ 1 ] * 3.   ) * u [ 0 ]   ) * 3.   ) * d / 36. ;  f [ 8 ]   =   (   1.   +   (   (   - 1   +   u [ 1 ]   ) * u [ 1 ]   +   (   1   +   u [ 0 ]   -   u [ 1 ] * 3.   ) * u [ 0 ]   ) * 3.   ) * d / 36. ;  }   With the equilibrium function taken care of, we can now look at updating our initialised lattice. For this, the streaming operation is taken care of with the specification of  Densities  that we made. The collision operation however needs to be implemented and bounce-back for nodes flagged as walls. To do this, we define the  run()  function to describe what happens at each node at each timestep.  CudaDeviceFunction   void   Run ()   {  // This defines the dynamics that we run at each node in the domain. \n     switch   ( NodeType   &   NODE_BOUNDARY )   { \n     case   NODE_Wall : \n         BounceBack (); \n         break ; \n     } \n     if   (( NodeType   &   NODE_BOUNDARY )   ==   NODE_BGK )  \n     { \n         CollisionBGK (); \n     }  }   Don't forget to declare new node types in  Dynamics.R .  Additionally, in all  Dynamics.c  files the  Color()  function is required. (even with  ./configure --disable-graphics ).  CudaDeviceFunction   float2   Color ()   { \n   float2   ret ; \n   ret . x   =   0 ; \n   ret . y   =   1 ; \n   return   ret ;  }   The switch function described can also be used for the implementation of velocity/pressure boundaries, but these will not be discussed in this tutorial. As can be seen above, we need to define functions that describe both the  BounceBack()  and  CollisionBGK()  operations. The bounce-back operation occurs as described in the theory component of this tutorial where distribution functions are reversed:  CudaDeviceFunction   void   BounceBack ()   {  // Method to reverse distribution functions along the bounding nodes. \n         real_t   uf ; \n     uf   =   f [ 3 ]; \n     f [ 3 ]   =   f [ 1 ]; \n     f [ 1 ]   =   uf ; \n     uf   =   f [ 4 ]; \n     f [ 4 ]   =   f [ 2 ]; \n     f [ 2 ]   =   uf ; \n     uf   =   f [ 7 ]; \n     f [ 7 ]   =   f [ 5 ]; \n     f [ 5 ]   =   uf ; \n     uf   =   f [ 8 ]; \n     f [ 8 ]   =   f [ 6 ]; \n     f [ 6 ]   =   uf ;  }   The BGK collision, from the left hand side of the discrete Boltzmann equation:  CudaDeviceFunction   void   CollisionBGK ()   {  // Here we perform a single relaxation time collision operation.  // We save memory here by using a single dummy variable \n     real_t   u [ 2 ],   d ,   f_temp [ 9 ]; \n     d   =   getRho (); \n     // pu* = pu + rG \n     u [ 0 ]   =   ((   f [ 8 ] - f [ 7 ] - f [ 6 ] + f [ 5 ] - f [ 3 ] + f [ 1 ]   ) / d   +   GravitationX / omega   ); \n     u [ 1 ]   =   (( - f [ 8 ] - f [ 7 ] + f [ 6 ] + f [ 5 ] - f [ 4 ] + f [ 2 ]   ) / d   +   GravitationY / omega   ); \n     f_temp [ 0 ]   =   f [ 0 ]; \n     f_temp [ 1 ]   =   f [ 1 ]; \n     f_temp [ 2 ]   =   f [ 2 ]; \n     f_temp [ 3 ]   =   f [ 3 ]; \n     f_temp [ 4 ]   =   f [ 4 ]; \n     f_temp [ 5 ]   =   f [ 5 ]; \n     f_temp [ 6 ]   =   f [ 6 ]; \n     f_temp [ 7 ]   =   f [ 7 ]; \n     f_temp [ 8 ]   =   f [ 8 ]; \n     SetEquilibrium ( d ,   u );   //stores equilibrium distribution in f[0]-f[8] \n     f [ 0 ]   =   f_temp [ 0 ]   -   omega * ( f_temp [ 0 ] - f [ 0 ]);   \n     f [ 1 ]   =   f_temp [ 1 ]   -   omega * ( f_temp [ 1 ] - f [ 1 ]); \n     f [ 2 ]   =   f_temp [ 2 ]   -   omega * ( f_temp [ 2 ] - f [ 2 ]); \n     f [ 3 ]   =   f_temp [ 3 ]   -   omega * ( f_temp [ 3 ] - f [ 3 ]);   \n     f [ 4 ]   =   f_temp [ 4 ]   -   omega * ( f_temp [ 4 ] - f [ 4 ]); \n     f [ 5 ]   =   f_temp [ 5 ]   -   omega * ( f_temp [ 5 ] - f [ 5 ]); \n     f [ 6 ]   =   f_temp [ 6 ]   -   omega * ( f_temp [ 6 ] - f [ 6 ]);   \n     f [ 7 ]   =   f_temp [ 7 ]   -   omega * ( f_temp [ 7 ] - f [ 7 ]); \n     f [ 8 ]   =   f_temp [ 8 ]   -   omega * ( f_temp [ 8 ] - f [ 8 ]);  }   With all the dynamics described, all that is left to do now is calculate the macroscopic variables using  Get  functions to correspond with the Quantities stated in  Dynamics.R .The macroscopic density is the sum of all the distribution functions and the momentum is the sum of the distribution functions multiplied by the discrete velocity directions.  CudaDeviceFunction   real_t   getRho ()   {  // This function defines the macroscopic density at the current node. \n     return   f [ 8 ] + f [ 7 ] + f [ 6 ] + f [ 5 ] + f [ 4 ] + f [ 3 ] + f [ 2 ] + f [ 1 ] + f [ 0 ];  }  CudaDeviceFunction   vector_t   getU ()   {  // This function defines the macroscopic velocity at the current node. \n     real_t   d   =   f [ 8 ] + f [ 7 ] + f [ 6 ] + f [ 5 ] + f [ 4 ] + f [ 3 ] + f [ 2 ] + f [ 1 ] + f [ 0 ]; \n     vector_t   u ; \n     // pv = pu + G/2 \n     u . x   =   ((   f [ 8 ] - f [ 7 ] - f [ 6 ] + f [ 5 ] - f [ 3 ] + f [ 1 ]   ) / d   +   GravitationX * 0.5   ); \n     u . y   =   (( - f [ 8 ] - f [ 7 ] + f [ 6 ] + f [ 5 ] - f [ 4 ] + f [ 2 ]   ) / d   +   GravitationY * 0.5   ); \n     u . z   =   0 ; \n     return   u ;  }",
            "title": "Model Creation in TCLB"
        },
        {
            "location": "/tutorials/model-development/2.-D2Q9-Single-Relexation-Time/#setting-up-a-simulation",
            "text": "In order validate this example, we want to specify the relation between physical and lattice units. For this, we need provide the relations for the spatial and time dimensions. The most natural way to do this is to give the physical  dx  size and the actual fluid viscosity. This information is stored at the start of the  xml  input file under the parent heading of  <Units> , for this you want to first create a new file by the name of  d2q9_poiseuille.xml :  <?xml version=\"1.0\"?>  <CLBConfig   version= \"2.0\"   output= \"output/\" > \n     <Units> \n         <Params   size= \"0.0005m\"   gauge= \"1\" /> \n         <Params   nu= \"1e-5m2/s\"   gauge= \"0.1666666666\" /> \n     </Units>   The reason for this, is it gives not only a view of how to implement physical values in TCLB but gives a straightforward method to calculate the expected maximum physical velocity. We do this through a comparison of the maximum velocity which in Poiseuille is given by:    u_{max} = \\frac{gH^2}{8\\nu}    The setup of the test simulation domain is arbitrary and different values can be tested from those shown here. A channel of  0.02m  length and  0.0095m  height is chosen with an applied body force of  0.000311634m/s^2 . As stated above one lattice spacing is equal to  0.0005m  so the total size of the simulation domain will be  0.02 x (0.0095+2*0.0005) m . This is defined as the geometry of the system in the xml set up file noting that the in-built  <Channel>  function is used to specify the bottom and top nodes as walls:  <Geometry   nx= \"0.02m\"   ny= \"0.0105m\" > \n     <BGK><Box/></BGK> \n     <Wall   mask= \"ALL\" > \n         <Channel/> \n     </Wall>  </Geometry>   Here we can see that the collision method specified for the cells in the entire domain is BGK to align with the  Run  function. Following on from the geometry of the domain, the model specific settings (defined in  Dynamics.R ) need to be defined. For this we take a fluid of density  1000kg/m^3  and choose a relaxation time of the value 1.  <Model> \n     <Params   Velocity= \"0.0\" /> \n     <Params   omega= \"1.0\" /> \n     <Params   GravitationX= \"0.000311634m/s2\" /> \n     <Params   Density= \"1000kg/m3\" />  </Model>   The final step is to output the desired quantities both at the start (so we can be sure that we have initialised the lattice correctly) and after the final solution step.       <VTK/> \n     <VTK   Iterations= \"50000\" /> \n     <Solve   Iterations= \"50000\" />  </CLBConfig>   With the model and set-up files created, we can now look to make and run d2q9srt. To do this first enter the TCLB directory and call the run file along with the input file location, after this, the analysis can be performed in Paraview:  make d2q9srt\nCLB/d2q9srt/main d2q9_poiseuille.xml\nparaview output/d2q9_poiseuille_VTK_P00_..pvti  In case the calculations are run on CPU, an mpi run can also be initiated e.g:  mpirun -np  4  CLB/d2q9srt/main d2q9_poiseuille.xml  From the analytical equation given before, we expect a maximum velocity of  0.000351562m/s , while in the results it is found to be  0.00035293m/s  showing an error of 0.389%.",
            "title": "Setting up a Simulation"
        },
        {
            "location": "/tutorials/model-development/3.-D2Q9-ShanChen-SRT/",
            "text": "Introduction\n\n\nThis tutorial will teach you how to use lattice Boltzmann method (LBM) to simulate a simple single-component multi-phase system with a contact angle within the TCLB environment. \nIt is assumed that the you have already completed the previous tutorial, namely 'D2Q9 Single Relaxation Time'.\nThe source code of completed 'D2Q9 Single Relaxation Time' tutorial is given \nhere\n # TODO\n\n\nFirst, a brief repetition of SRT and overview of the Schan-Chen model (AKA Pseudo Potential) \nlattice Boltzmann equation\n will be given.\nThen, we will code the model step by step.\n\n\nThe SRT-lattice Boltzmann Equation:\n\n\nAs in the previous example, the discrete form of the Boltzmann transport equation is expressed as:\n\n\n\n\n f_i(\\mathbf{x} + \\mathbf{c}_i, t + 1) = f_i(\\mathbf{x},t) - \\frac{1}{\\tau}(f_i(\\mathbf{x},t)-f_i^{eq}(\\mathbf{x},t)) \n\n\n\n\nThis describes the evolution of particle distribution functions along discrete velocities, where the right hand side is often referred to as the collision operation and the evaluation to the left hand side, the streaming operation. Note here that we are going to work in lattice units during the description of the model in which we assume $ \\Delta x = \\Delta t = 1 $. For the D2Q9 model, this assumption allows us to express the 9 discrete directions as,\n\n\n\n\n \\mathbf{c} = \\begin{pmatrix}\n0 & 1 & 0 & -1 & 0 & 1 & -1 & -1 & 1 \\\\\n0 & 0 & 1 & 0 & -1 & 1 & 1 & -1 & -1\n\\end{pmatrix} \n\n\n\n\nAdditionally, we define the equilibrium distribution function found by an expansion of a Maxwellian distribution as,\n\n\n\n\n f_i^{eq}(\\mathbf{x},t) = \\omega_i \\rho \\left( 1 +\\frac{\\mathbf{c}_i.\\mathbf{u}}{c_s^2}+\\frac{(\\mathbf{c}_i.\\mathbf{u})^2}{2c_s^4} - \\frac{\\mathbf{u}^2}{2c_s^2}\\right) \n\n\n\n\nwhere,\n\n\n\n\n c_s^2 = \\frac{1}{3} \n\n\n\n\n\n\n w_i = \\begin{cases}\n\\frac{4}{9} &\\quad \\quad i=0 \\\\\n\\frac{1}{9} &\\quad \\quad i=1-4\\\\\n\\frac{1}{36}&\\quad \\quad i=5-8\n\\end{cases} \n\n\n\n\nBoundary Conditions\n\n\nIn this tutorial we will investigate a droplet in a box. \n\n\nThe box is defined by no-slip wall boundary conditions. \nTo do this with LBM, the bounceback method is used. In this, particle distribution functions that stream into a node flagged as a \"wall\" are reversed, or \"bounced-back\" in the direction they came. \nTherefore, in general for a D2Q9 lattice we obtain:\n\n\n\n\n \\begin{cases}\nf_0 = f'_0 \\\\\nf_1 = f'_3 \\\\\nf_2 = f'_4 \\\\\nf_3 = f'_1 \\\\\nf_4 = f'_2 \\\\\nf_5 = f'_7 \\\\\nf_6 = f'_8 \\\\\nf_7 = f'_5 \\\\\nf_8 = f'_6\n\\end{cases} \n\n\n\n\nwhere the ' indicates the post-bounce-back direction. \nYou can observe that \n\n\n\n\n \\mathbf{c}_{\\overline{i}} = - \\mathbf{c}_{i} \n\n\n\n\nForce Implementation\n\n\nThe pseudo-potential model uses a \u201cbottom-up\u201d approach. \nThis mean, that the microscopic interaction between fluid elements is postulated, the results is the macroscopic separation of phases.\nDepending on the 'postulation' different Equations Of State can be achieved.\n\n\nWithout digging into details, the pseudo-potential field is frequently defined as:\n\n\n\n\n \\psi(\\rho) = \\rho_0 [1 - exp(-\\rho/\\rho_0)] \n\n\n\n\nThen, the fluid - fluid interaction force is given by:\n\n\n\n\n \\mathbf{F}_{ff}(\\mathbf{x})=  -G_{ff} \\; \\psi(x)  \\sum_{i=1}^n w_i \\, \\psi(\\mathbf{x} + \\mathbf{c_i} \\Delta t) \\mathbf{c_i} \\Delta t \n\n\n\n\nwhere $G_{ff}$ is a scalar used t adjust interaction strength. \n\n\nSince the momentum change is $ \\Delta \\rho u = F $ we can account for the presence of force, be will incorporate it into equlibrium momentum. \n\n\n\n\n \\rho \\mathbf{u}^{eq} = \\rho \\mathbf{u} + \\tau \\mathbf{F} \n\n\n\n\nIf there are more forces (like  Gravity, Fluid-Fluid and Solid-Fluid interaction), we can simply sum them into  \nF\n :\n\n\n\n\n \\mathbf{F} = \\mathbf{G} + \\mathbf{F}_{ff} + \\mathbf{F}_{sf} \n\n\n\n\nThis approach ultimately acts to relax each particle distribution function towards an equilibrium momentum that has included the time-incremental change due to the applied body force. To obtain the bulk fluid velocity, the before and after collision momentum is averaged giving,\n\n\n\n\n u = \\frac{1}{\\rho} \\sum_{i=1}^n  f_i \\mathbf{c_i} + \\frac{ \\mathbf{F} \\Delta t}{ 2 \\rho} \n\n\n\n\nand with this we have all we the dynamics required to implement the specified example.\n\n\nModel Creation in TCLB\n\n\nDynamics.R\n\n\nAs per the \nFD wave equation tutorial\n, we want to set up a folder named 'myPseudoPotential' in the \n/models/\n folder within TCLB. Additionally, the generic file structure needs to be created consisting of \nconf.mk, Dynamics.c, Dynamics.R\n. \n\n\nTo start off the model, we look to add the nine distribution functions for the nine discrete velocities. This is implemented in the \nDynamics.R\n file, but instead of adding each as its own field we look to stream the functions in the process of calling them at each node. To do this we instead add them as \nDensities\n:\n\n\n# Fluid Density Populations\n\nAddDensity\n(\n name\n=\n\"f[0]\"\n,\n dx\n=\n \n0\n,\n dy\n=\n \n0\n,\n group\n=\n\"f\"\n)\n\nAddDensity\n(\n name\n=\n\"f[1]\"\n,\n dx\n=\n \n1\n,\n dy\n=\n \n0\n,\n group\n=\n\"f\"\n)\n\nAddDensity\n(\n name\n=\n\"f[2]\"\n,\n dx\n=\n \n0\n,\n dy\n=\n \n1\n,\n group\n=\n\"f\"\n)\n\nAddDensity\n(\n name\n=\n\"f[3]\"\n,\n dx\n=\n-1\n,\n dy\n=\n \n0\n,\n group\n=\n\"f\"\n)\n\nAddDensity\n(\n name\n=\n\"f[4]\"\n,\n dx\n=\n \n0\n,\n dy\n=\n-1\n,\n group\n=\n\"f\"\n)\n\nAddDensity\n(\n name\n=\n\"f[5]\"\n,\n dx\n=\n \n1\n,\n dy\n=\n \n1\n,\n group\n=\n\"f\"\n)\n\nAddDensity\n(\n name\n=\n\"f[6]\"\n,\n dx\n=\n-1\n,\n dy\n=\n \n1\n,\n group\n=\n\"f\"\n)\n\nAddDensity\n(\n name\n=\n\"f[7]\"\n,\n dx\n=\n-1\n,\n dy\n=\n-1\n,\n group\n=\n\"f\"\n)\n\nAddDensity\n(\n name\n=\n\"f[8]\"\n,\n dx\n=\n \n1\n,\n dy\n=\n-1\n,\n group\n=\n\"f\"\n)\n\n\n\n\n\n\nThen we add pseudopotential field and one more field which will be used to distinguish whether neighbouring cell is a fluid or a wall.\n\n\n# Pseudopotential field\n\nAddField\n(\n\"psi\"\n,\n stencil2d\n=\n1\n,\n group\n=\n\"pp\"\n)\n\nAddField\n(\n\"neighbour_type\"\n,\n stencil2d\n=\n1\n,\n group\n=\n\"neighbour_type_group\"\n)\n\n\n\n\n\n\nNext we will define 'Initialization list' and 'Iteration list' \nEach iteration consists of two stages, one resposible for update of 'f' population and the other one used to calculate the 'psi' field.\n\n\n# Initialization list\n\nAddStage\n(\n\"BaseInit\"\n     \n,\n \n\"Init\"\n,\n save\n=\nFields\n$\ngroup \n%in%\n \nc\n(\n\"f\"\n,\n \n\"neighbour_type_group\"\n),\n load\n=\nDensityAll\n$\ngroup\n==\n\"f\"\n)\n\n\n\n# Iteration list\n\nAddStage\n(\n\"BaseIteration\"\n,\n \n\"Run\"\n     \n,\n  save\n=\nFields\n$\ngroup \n%in%\n \nc\n(\n\"f\"\n,\n \n\"neighbour_type_group\"\n)\n \n,\n load\n=\nDensityAll\n$\ngroup \n%in%\n \nc\n(\n\"f\"\n,\n\"neighbour_type_group\"\n))\n\nAddStage\n(\n\"PsiIteration\"\n \n,\n \n\"calcPsi\"\n \n,\n  save\n=\nFields\n$\nname\n==\n\"psi\"\n,\n load\n=\nDensityAll\n$\ngroup \n%in%\n \nc\n(\n\"f\"\n))\n\n\nAddAction\n(\n\"Init\"\n     \n,\n \nc\n(\n\"BaseInit\"\n,\n      \n\"PsiIteration\"\n))\n\nAddAction\n(\n\"Iteration\"\n,\n \nc\n(\n\"BaseIteration\"\n,\n \n\"PsiIteration\"\n))\n\n\n\n\n\n\nCaveat\n\n\nIn TCLB core there is buffer 'A' and 'B'. During each iteration it switches the values from 'A' to 'B' and vice-versa. Thus if you save 'x' only during initialization you will see the old value of 'x' coming back each second iteration.\nTo fix it he have to add the 'save' command during each iteration in Dynamics.R\nSimalarly, in Dynamics.c the 'x' must saved during execution of Run() function like \nx = x(0,0)\n, but we will come back to it later.\n\n\nThis is the reason why we have to save the \nneighbour_type_group\n during the \nBaseIteration\n even if its value is not changed.\n\n\nFinally we can define the output variables:\n\n\n# Output Values\n\nAddQuantity\n(\n name\n=\n\"U\"\n,\n    unit\n=\n\"m/s\"\n,\n \nvector\n=\nTRUE\n \n)\n\nAddQuantity\n(\n name\n=\n\"Ueq\"\n,\n  unit\n=\n\"m/s\"\n,\n \nvector\n=\nTRUE\n \n)\n\nAddQuantity\n(\n name\n=\n\"Rho\"\n,\n  unit\n=\n\"kg/m3\"\n \n)\n\nAddQuantity\n(\n name\n=\n\"Psi\"\n,\n  unit\n=\n\"1\"\n \n)\n\nAddQuantity\n(\n name\n=\n\"Neighbour_type\"\n,\n  unit\n=\n\"1\"\n \n)\n\nAddQuantity\n(\n name\n=\n\"F_ff\"\n,\n unit\n=\n\"N\"\n,\n \nvector\n=\nTRUE\n)\n\nAddQuantity\n(\n name\n=\n\"F_sf\"\n,\n unit\n=\n\"N\"\n,\n \nvector\n=\nTRUE\n)\n\n\n\n\n\n\nAnd parameters used as input:\n\n\n# Model Specific Parameters\n\nAddSetting\n(\n name\n=\n\"omega\"\n,\n comment\n=\n'inverse of relaxation time'\n)\n\nAddSetting\n(\n name\n=\n\"nu\"\n,\n omega\n=\n'1.0/(3*nu+0.5)'\n,\n default\n=\n0.16666666\n,\n comment\n=\n'viscosity'\n)\n\nAddSetting\n(\n name\n=\n\"VelocityX\"\n,\ndefault\n=\n0\n,\n comment\n=\n'inlet/outlet/init velocity'\n,\n zonal\n=\nTRUE\n)\n\nAddSetting\n(\n name\n=\n\"VelocityY\"\n,\ndefault\n=\n0\n,\n comment\n=\n'inlet/outlet/init velocity'\n,\n zonal\n=\nTRUE\n)\n\nAddSetting\n(\n name\n=\n\"GravitationX\"\n,\ndefault\n=\n0\n,\n comment\n=\n'body/external acceleration'\n,\n zonal\n=\nTRUE\n)\n\nAddSetting\n(\n name\n=\n\"GravitationY\"\n,\ndefault\n=\n0\n,\n comment\n=\n'body/external acceleration'\n,\n zonal\n=\nTRUE\n)\n\nAddSetting\n(\n name\n=\n\"Density\"\n,\ndefault\n=\n1\n,\n comment\n=\n'Density'\n,\nzonal\n=\nTRUE\n)\n\n\nAddSetting\n(\n name\n=\n\"G_ff\"\n,\ndefault\n=\n0\n,\n comment\n=\n'fluid-fluid interaction strength'\n)\n\nAddSetting\n(\n name\n=\n\"G_sf\"\n,\ndefault\n=\n0\n,\n comment\n=\n'fluid-solid interaction strength'\n)\n\n\n\n\n\n\nDynamics.c\n\n\nFrom the above, we have all the variables we need to implement the LBM. The first step is to initialise the lattice over the required domain, this is incorporated as part of the dynamics that are occurring in the model and must be incorporated into the \nDynamics.c\n file within the \nInit()\n function.\n\n\nCudaDeviceFunction\n \nvoid\n \nInit\n(){\n\n    \nreal_t\n \nu\n[\n2\n]\n \n=\n \n{\nVelocityX\n,\n \nVelocityY\n};\n\n    \nreal_t\n \nd\n \n=\n \nDensity\n;\n\n    \nSetEquilibrium\n(\nd\n,\nu\n);\n\n\n    \nneighbour_type\n=\n0\n;\n\n\n    \nif\n \n((\nNodeType\n \n&\n \nNODE_BOUNDARY\n)\n \n==\n \nNODE_Wall\n)\n \n{\n\n        \nneighbour_type\n=\n1\n;\n\n    \n}\n \n\n}\n\n\n\n\n\n\nSame as in previous tutorial,  we are calling on the function \nSetEquilibrium()\n within which we want to calculate the equilibrium distribution \n for the given density and velocity fields.\n\n\nCudaDeviceFunction\n \nvoid\n \nSetEquilibrium\n(\nreal_t\n \nd\n,\n \nreal_t\n \nu\n[\n2\n])\n\n\n{\n\n\nf\n[\n0\n]\n \n=\n \n(\n \n2.\n \n+\n \n(\n \n-\nu\n[\n1\n]\n*\nu\n[\n1\n]\n \n-\n \nu\n[\n0\n]\n*\nu\n[\n0\n]\n \n)\n*\n3.\n \n)\n*\nd\n*\n2.\n/\n9.\n;\n\n\nf\n[\n1\n]\n \n=\n \n(\n \n2.\n \n+\n \n(\n \n-\nu\n[\n1\n]\n*\nu\n[\n1\n]\n \n+\n \n(\n \n1\n \n+\n \nu\n[\n0\n]\n \n)\n*\nu\n[\n0\n]\n*\n2.\n \n)\n*\n3.\n \n)\n*\nd\n/\n18.\n;\n\n\nf\n[\n2\n]\n \n=\n \n(\n \n2.\n \n+\n \n(\n \n-\nu\n[\n0\n]\n*\nu\n[\n0\n]\n \n+\n \n(\n \n1\n \n+\n \nu\n[\n1\n]\n \n)\n*\nu\n[\n1\n]\n*\n2.\n \n)\n*\n3.\n \n)\n*\nd\n/\n18.\n;\n\n\nf\n[\n3\n]\n \n=\n \n(\n \n2.\n \n+\n \n(\n \n-\nu\n[\n1\n]\n*\nu\n[\n1\n]\n \n+\n \n(\n \n-\n1\n \n+\n \nu\n[\n0\n]\n \n)\n*\nu\n[\n0\n]\n*\n2.\n \n)\n*\n3.\n \n)\n*\nd\n/\n18.\n;\n\n\nf\n[\n4\n]\n \n=\n \n(\n \n2.\n \n+\n \n(\n \n-\nu\n[\n0\n]\n*\nu\n[\n0\n]\n \n+\n \n(\n \n-\n1\n \n+\n \nu\n[\n1\n]\n \n)\n*\nu\n[\n1\n]\n*\n2.\n \n)\n*\n3.\n \n)\n*\nd\n/\n18.\n;\n\n\nf\n[\n5\n]\n \n=\n \n(\n \n1.\n \n+\n \n(\n \n(\n \n1\n \n+\n \nu\n[\n1\n]\n \n)\n*\nu\n[\n1\n]\n \n+\n \n(\n \n1\n \n+\n \nu\n[\n0\n]\n \n+\n \nu\n[\n1\n]\n*\n3.\n \n)\n*\nu\n[\n0\n]\n \n)\n*\n3.\n \n)\n*\nd\n/\n36.\n;\n\n\nf\n[\n6\n]\n \n=\n \n(\n \n1.\n \n+\n \n(\n \n(\n \n1\n \n+\n \nu\n[\n1\n]\n \n)\n*\nu\n[\n1\n]\n \n+\n \n(\n \n-\n1\n \n+\n \nu\n[\n0\n]\n \n-\n \nu\n[\n1\n]\n*\n3.\n \n)\n*\nu\n[\n0\n]\n \n)\n*\n3.\n \n)\n*\nd\n/\n36.\n;\n\n\nf\n[\n7\n]\n \n=\n \n(\n \n1.\n \n+\n \n(\n \n(\n \n-\n1\n \n+\n \nu\n[\n1\n]\n \n)\n*\nu\n[\n1\n]\n \n+\n \n(\n \n-\n1\n \n+\n \nu\n[\n0\n]\n \n+\n \nu\n[\n1\n]\n*\n3.\n \n)\n*\nu\n[\n0\n]\n \n)\n*\n3.\n \n)\n*\nd\n/\n36.\n;\n\n\nf\n[\n8\n]\n \n=\n \n(\n \n1.\n \n+\n \n(\n \n(\n \n-\n1\n \n+\n \nu\n[\n1\n]\n \n)\n*\nu\n[\n1\n]\n \n+\n \n(\n \n1\n \n+\n \nu\n[\n0\n]\n \n-\n \nu\n[\n1\n]\n*\n3.\n \n)\n*\nu\n[\n0\n]\n \n)\n*\n3.\n \n)\n*\nd\n/\n36.\n;\n\n\n}\n\n\n\n\n\n\nWith the equilibrium function taken care of, we can now look at updating our initialised lattice. For this, the streaming operation is taken care of with the specification of \nDensities\n that we made. The collision operation however needs to be implemented and bounce-back for nodes flagged as walls. To do this, we define the \nrun()\n function to describe what happens at each node at each timestep.\n\n\nCudaDeviceFunction\n \nvoid\n \nRun\n()\n \n{\n\n    \n// This defines the dynamics that we run at each node in the domain.\n\n    \nswitch\n \n(\nNodeType\n \n&\n \nNODE_BOUNDARY\n)\n \n{\n\n    \ncase\n \nNODE_Solid\n:\n\n    \ncase\n \nNODE_Wall\n:\n\n        \nBounceBack\n();\n\n        \nbreak\n;\n\n    \n}\n\n    \nif\n \n(\nNodeType\n \n&\n \nNODE_MRT\n)\n \n    \n{\n\n        \nCollisionBGK\n();\n\n    \n}\n\n\n    \nneighbour_type\n \n=\n \nneighbour_type\n(\n0\n,\n0\n);\n \n\n}\n\n\n\n\n\n\nHere is the line \nneighbour_type = neighbour_type(0,0);\n which was discussed in the \nCaveat\n \n\n\nSame as in D2Q9 SRT Tutorial, we need to define functions that describe both the \nBounceBack()\n and \nCollisionBGK()\n operations. \nThe bounce-back operation occurs as described in the theory component of this tutorial where distribution functions are reversed:\n\n\nsome markdown heading\n\n\nCudaDeviceFunction\n \nvoid\n \nBounceBack\n()\n \n{\n\n    \n// Method to reverse distribution functions along the bounding nodes.\n\n    \nreal_t\n \nuf\n;\n\n    \nuf\n \n=\n \nf\n[\n3\n];\n\n    \nf\n[\n3\n]\n \n=\n \nf\n[\n1\n];\n\n    \nf\n[\n1\n]\n \n=\n \nuf\n;\n\n    \nuf\n \n=\n \nf\n[\n4\n];\n\n    \nf\n[\n4\n]\n \n=\n \nf\n[\n2\n];\n\n    \nf\n[\n2\n]\n \n=\n \nuf\n;\n\n    \nuf\n \n=\n \nf\n[\n7\n];\n\n    \nf\n[\n7\n]\n \n=\n \nf\n[\n5\n];\n\n    \nf\n[\n5\n]\n \n=\n \nuf\n;\n\n    \nuf\n \n=\n \nf\n[\n8\n];\n\n    \nf\n[\n8\n]\n \n=\n \nf\n[\n6\n];\n\n    \nf\n[\n6\n]\n \n=\n \nuf\n;\n\n\n}\n\n\n\n\n\n\nWhile the BGK collision involved implementing the left hand side of the discrete Boltzmann equation.\n\n\nCudaDeviceFunction\n \nvoid\n \nCollisionBGK\n()\n \n{\n\n    \n// Here we perform a single relaxation time collision operation.\n\n    \n// We save memory here by using a single dummy variable\n\n    \nreal_t\n \nu_eq\n[\n2\n],\n \nd\n,\n \nf_temp\n[\n9\n];\n\n    \nd\n \n=\n \ngetRho\n();\n\n\n    \nvector_t\n \nu_eq_vect\n \n=\n \ngetUeq\n();\n\n    \nu_eq\n[\n0\n]\n \n=\n \nu_eq_vect\n.\nx\n;\n \n    \nu_eq\n[\n1\n]\n \n=\n \nu_eq_vect\n.\ny\n;\n\n\n    \nf_temp\n[\n0\n]\n \n=\n \nf\n[\n0\n];\n\n    \nf_temp\n[\n1\n]\n \n=\n \nf\n[\n1\n];\n\n    \nf_temp\n[\n2\n]\n \n=\n \nf\n[\n2\n];\n\n    \nf_temp\n[\n3\n]\n \n=\n \nf\n[\n3\n];\n\n    \nf_temp\n[\n4\n]\n \n=\n \nf\n[\n4\n];\n\n    \nf_temp\n[\n5\n]\n \n=\n \nf\n[\n5\n];\n\n    \nf_temp\n[\n6\n]\n \n=\n \nf\n[\n6\n];\n\n    \nf_temp\n[\n7\n]\n \n=\n \nf\n[\n7\n];\n\n    \nf_temp\n[\n8\n]\n \n=\n \nf\n[\n8\n];\n\n    \nSetEquilibrium\n(\nd\n,\n \nu_eq\n);\n \n//stores equilibrium distribution in f[0]-f[8]\n\n    \nf\n[\n0\n]\n \n=\n \nf_temp\n[\n0\n]\n \n-\n \nomega\n*\n(\nf_temp\n[\n0\n]\n-\nf\n[\n0\n]);\n  \n    \nf\n[\n1\n]\n \n=\n \nf_temp\n[\n1\n]\n \n-\n \nomega\n*\n(\nf_temp\n[\n1\n]\n-\nf\n[\n1\n]);\n\n    \nf\n[\n2\n]\n \n=\n \nf_temp\n[\n2\n]\n \n-\n \nomega\n*\n(\nf_temp\n[\n2\n]\n-\nf\n[\n2\n]);\n\n    \nf\n[\n3\n]\n \n=\n \nf_temp\n[\n3\n]\n \n-\n \nomega\n*\n(\nf_temp\n[\n3\n]\n-\nf\n[\n3\n]);\n  \n    \nf\n[\n4\n]\n \n=\n \nf_temp\n[\n4\n]\n \n-\n \nomega\n*\n(\nf_temp\n[\n4\n]\n-\nf\n[\n4\n]);\n\n    \nf\n[\n5\n]\n \n=\n \nf_temp\n[\n5\n]\n \n-\n \nomega\n*\n(\nf_temp\n[\n5\n]\n-\nf\n[\n5\n]);\n\n    \nf\n[\n6\n]\n \n=\n \nf_temp\n[\n6\n]\n \n-\n \nomega\n*\n(\nf_temp\n[\n6\n]\n-\nf\n[\n6\n]);\n  \n    \nf\n[\n7\n]\n \n=\n \nf_temp\n[\n7\n]\n \n-\n \nomega\n*\n(\nf_temp\n[\n7\n]\n-\nf\n[\n7\n]);\n\n    \nf\n[\n8\n]\n \n=\n \nf_temp\n[\n8\n]\n \n-\n \nomega\n*\n(\nf_temp\n[\n8\n]\n-\nf\n[\n8\n]);\n\n\n}\n\n\n\n\n\n\ncreate an anchor\n\nIn this model we will use the Schan-Chen forcing shceme, which says the forcing term has to be added to the equibrium velocity.\n\nu^{eq} = \\frac{1}{\\rho} \\sum_{i=1}^n  f_i \\mathbf{c_i} + \\frac{\\tau \\mathbf{F} }{\\rho}\n\n\n\n\nCudaDeviceFunction\n \nvector_t\n \ngetUeq\n()\n \n{\n\n    \nreal_t\n \nd\n \n=\n \ngetRho\n();\n\n    \nvector_t\n \nF_ff\n \n=\n \ngetF_ff\n();\n\n    \nvector_t\n \nF_sf\n \n=\n \ngetF_sf\n();\n\n    \nvector_t\n \nu_eq\n;\n\n\n    \nu_eq\n.\nx\n \n=\n \n(\n \nf\n[\n8\n]\n-\nf\n[\n7\n]\n-\nf\n[\n6\n]\n+\nf\n[\n5\n]\n-\nf\n[\n3\n]\n+\nf\n[\n1\n]\n \n)\n/\nd\n;\n\n    \nu_eq\n.\ny\n \n=\n \n(\n-\nf\n[\n8\n]\n-\nf\n[\n7\n]\n+\nf\n[\n6\n]\n+\nf\n[\n5\n]\n-\nf\n[\n4\n]\n+\nf\n[\n2\n]\n \n)\n/\nd\n;\n\n\n    \nu_eq\n.\nx\n \n+=\n \n(\nGravitationX\n \n+\n \n(\nF_ff\n.\nx\n \n+\n \nF_sf\n.\nx\n)\n/\nd\n)\n \n/\n \nomega\n;\n\n    \nu_eq\n.\ny\n \n+=\n \n(\nGravitationY\n \n+\n \n(\nF_ff\n.\ny\n \n+\n \nF_sf\n.\ny\n)\n/\nd\n)\n \n/\n \nomega\n;\n\n    \nu_eq\n.\nz\n \n=\n \n0\n;\n\n\n    \nreturn\n \nu_eq\n;\n\n\n}\n\n\n\n\n\n\nNext step is to define the forcing functions.\n\n\nFirst, we have to find the pseudopotential field:\n\n\n\n\n \\psi(\\rho) = \\rho_0 [1 - exp(-\\rho/\\rho_0)] \n\nwhere the reference density $ rho_0 $ is usually set to 1.\n\n\nCudaDeviceFunction\n \nvoid\n \ncalcPsi\n()\n \n{\n\n    \n// Calculate psi at each point so that pseudopotential force can be found.\n\n    \n// eq 9.102 p369 from book: 'The Lattice Boltzmann Method: Principles and Practice'\n\n    \n// T. Kr\u00fcger, H. Kusumaatmaja, A. Kuzmin, O. Shardt, G. Silva, E.M. Viggen\n\n\n    \nreal_t\n \nrho\n \n=\n \ngetRho\n();\n\n    \npsi\n \n=\n \n1\n \n-\n \nexp\n(\n-\nrho\n);\n\n\n}\n\n\n\n\n\n\nThe fluid - fluid interaction force is given by:\n\n\n\n\n \\mathbf{F}_{ff}(\\mathbf{x})=  -G_{ff} \\; \\psi(x)  \\sum_{i=1}^n w_i \\, \\psi(\\mathbf{x} + \\mathbf{c_i} \\Delta t) \\mathbf{c_i} \\Delta t \n\nwhere $G_{ff}$ is a scalar used t adjust interaction strength. \n\n\nCudaDeviceFunction\n \nvector_t\n \ngetF_ff\n()\n \n{\n\n    \n// fluid - fluid interaction force \n\n    \n// eq 9.105 p 372 from book: 'The Lattice Boltzmann Method: Principles and Practice'\n\n    \n// T. Kr\u00fcger, H. Kusumaatmaja, A. Kuzmin, O. Shardt, G. Silva, E.M. Viggen\n\n    \nvector_t\n \nF_ff\n;\n\n    \nF_ff\n.\nx\n \n=\n \n0\n;\n\n    \nF_ff\n.\ny\n \n=\n \n0\n;\n\n    \nF_ff\n.\nz\n \n=\n \n0\n;\n\n\n    \nF_ff\n.\nx\n \n=\n  \n(\n \npsi\n(\n1\n,\n-\n1\n)\n-\npsi\n(\n-\n1\n,\n-\n1\n)\n+\npsi\n(\n1\n,\n1\n)\n-\npsi\n(\n-\n1\n,\n1\n))\n/\n9.\n \n+\n \n(\npsi\n(\n1\n,\n0\n)\n-\npsi\n(\n-\n1\n,\n0\n))\n/\n36.\n;\n\n    \nF_ff\n.\ny\n \n=\n  \n(\n-\npsi\n(\n1\n,\n-\n1\n)\n-\npsi\n(\n-\n1\n,\n-\n1\n)\n+\npsi\n(\n1\n,\n1\n)\n+\npsi\n(\n-\n1\n,\n1\n))\n/\n9.\n \n+\n \n(\npsi\n(\n0\n,\n1\n)\n-\npsi\n(\n0\n,\n-\n1\n))\n/\n36.\n;\n\n\n    \nF_ff\n.\nx\n \n*=\n \n-\nG_ff\n*\npsi\n(\n0\n,\n0\n);\n \n    \nF_ff\n.\ny\n \n*=\n \n-\nG_ff\n*\npsi\n(\n0\n,\n0\n);\n\n\n    \n// alternative version with dynamic access to the 'psi' field.\n\n    \n// for (int i=0; i< 9; i++){\n\n    \n//     F_ff.x += wf[i] * psi_dyn(d2q9_ex[i], d2q9_ey[i])*d2q9_ex[i];\n\n    \n//     F_ff.y += wf[i] * psi_dyn(d2q9_ex[i], d2q9_ey[i])*d2q9_ey[i];\n\n    \n// }\n\n\n    \nreturn\n \nF_ff\n;\n\n\n}\n\n\n\n\n\n\nThe solid-fluid force can be expressed in a similar manner:\n\n \\mathbf{F}_{sf}(\\mathbf{x})=  -G_{sf} \\;  \\psi(x) \\sum_{i=1}^n w_i \\, s(\\mathbf{x} + \\mathbf{c_i} \\Delta t) \\mathbf{c_i} \\Delta t \n\n\n\n\nPlaying with the values of $G_{sf}$ one can find a desired contact angle. \nUnfortunately there is no straighforward method to know the value of $G_{sf}$ without numerical experiments.\n\n\nThe $s(\\mathbf{x} + \\mathbf{c_i} \\Delta t)$ is a switch function used to distiguish fluid and solid nodes.\nIt takes a value of 1 for solid-fluid interaction and 0 when neighbouring nodes are both fluid.\nIn TCLB, simpest way (not necessary most efficient) to realize it is to add additional field in Dynamics.R\n\n\nAddField\n(\n\"neighbour_type\"\n,\n stencil2d\n=\n1\n,\n group\n=\n\"neighbour_type_group\"\n)\n\n\n\n\n\n\nThen, we have to prescribe the value in the initialization step\n\n\nCudaDeviceFunction\n \nvoid\n \nInit\n(){\n\n    \nreal_t\n \nu\n[\n2\n]\n \n=\n \n{\nVelocityX\n,\n \nVelocityY\n};\n\n    \nreal_t\n \nd\n \n=\n \nDensity\n;\n\n    \nSetEquilibrium\n(\nd\n,\nu\n);\n\n\n    \nneighbour_type\n=\n0\n;\n\n\n    \nif\n \n((\nNodeType\n \n&\n \nNODE_BOUNDARY\n)\n \n==\n \nNODE_Wall\n)\n \n{\n\n        \nneighbour_type\n=\n1\n;\n\n    \n}\n \n\n}\n\n\n\n\n\n\nFinally, we can code the solid-fluid force:\n\n\nCudaDeviceFunction\n \nvector_t\n \ngetF_sf\n()\n \n{\n\n    \n// fluid - solid interaction force \n\n    \n// eq 9.116 p376 from book: 'The Lattice Boltzmann Method: Principles and Practice'\n\n    \n// T. Kr\u00fcger, H. Kusumaatmaja, A. Kuzmin, O. Shardt, G. Silva, E.M. Viggen\n\n    \nvector_t\n \nF_sf\n;\n\n    \nF_sf\n.\nx\n \n=\n \n0\n;\n\n    \nF_sf\n.\ny\n \n=\n \n0\n;\n\n    \nF_sf\n.\nz\n \n=\n \n0\n;\n\n\n    \nfor\n \n(\nint\n \ni\n=\n0\n;\n \ni\n<\n \n9\n;\n \ni\n++\n){\n\n        \nF_sf\n.\nx\n \n+=\n \nwf\n[\ni\n]\n \n*\nd2q9_ex\n[\ni\n]\n \n*\n \nneighbour_type_dyn\n(\nd2q9_ex\n[\ni\n],\n \nd2q9_ey\n[\ni\n]);\n\n        \nF_sf\n.\ny\n \n+=\n \nwf\n[\ni\n]\n \n*\nd2q9_ey\n[\ni\n]\n \n*\n \nneighbour_type_dyn\n(\nd2q9_ex\n[\ni\n],\n \nd2q9_ey\n[\ni\n]);\n\n    \n}\n\n\n    \nF_sf\n.\nx\n \n*=\n \n-\nG_sf\n*\npsi\n(\n0\n,\n0\n);\n \n    \nF_sf\n.\ny\n \n*=\n \n-\nG_sf\n*\npsi\n(\n0\n,\n0\n);\n \n\n    \nreturn\n \nF_sf\n;\n\n\n}\n\n\n\n\n\n\nSetting up a Simulation\n\n\nCreate a configuration file, \nmy_pp_config.xml\n in example/\n\n\n<?xml version=\"1.0\"?>\n\n\n<CLBConfig\n \noutput=\n\"output/\"\n>\n\n        \n<Geometry\n \nnx=\n\"128\"\n \nny=\n\"128\"\n>\n\n        \n<MRT><Box/></MRT>\n\n                \n<Wall\n \nmask=\n\"ALL\"\n \nname=\n\"border\"\n \n>\n\n                        \n<Box\n \nnx=\n\"1\"\n/>\n\n                        \n<Box\n \ndx=\n\"-1\"\n/>\n\n                        \n<Box\n \nny=\n\"1\"\n/>\n\n                        \n<Box\n \ndy=\n\"-1\"\n/>\n\n                \n</Wall>\n\n                \n<None\n \nname=\n\"blobb\"\n>\n\n                        \n<!-- <Box dx=\"50\" nx=\"28\" dy=\"50\" ny=\"28\"/> -->\n\n                        \n<Sphere\n \nny=\n\"48\"\n \nnx=\n\"48\"\n \ndx=\n\"40\"\n \ndy=\n\"0\"\n \n/>\n \n                \n</None>\n\n        \n</Geometry>\n\n        \n<Model>\n\n                \n<Params\n \nDensity=\n\"0.056\"\n/>\n\n                \n<Params\n \nDensity-blobb=\n\"2.659\"\n/>\n\n                \n<Params\n \nG_ff=\n\"-6.0\"\n/>\n\n                \n<Params\n \nG_sf=\n\"-3.7\"\n/>\n\n                \n<Params\n \nnu=\n\"0.166\"\n/>\n\n                \n<!-- <Params GravitationY=\"-1e-5\"/> -->\n\n        \n</Model>\n\n        \n<Solve\n \nIterations=\n\"1000\"\n \noutput=\n\"output/\"\n>\n \n<VTK\n \nIterations=\n\"10\"\n/>\n \n</Solve>\n \n        \n<Failcheck\n \nIterations=\n\"1000\"\n \n/>\n\n        \n<Solve\n \nIterations=\n\"50000\"\n \noutput=\n\"output/\"\n>\n \n<VTK\n \nIterations=\n\"500\"\n/>\n \n</Solve>\n\n\n</CLBConfig>\n\n\n\n\n\n\nYou can play with the configuration file, for example switching from \n  to \n placed in the middle of domain.\nTry different values of solid-fluid interaction constant $G_sf$ and see how it affects the contact angle.\n\n\nWith the model and set-up files created, we can now look to make and run \nmyPseudoPotential\n. \nEnter the TCLB directory and call the run file along with the input file location, after this, the analysis can be performed in Paraview:\n\n\nmake myPseudoPotential\nCLB/myPseudoPotential/main example/multiphase/pseudo_potential/my_pp_config.xml\nparaview output/my_pp_config_VTK_P00_..pvti\n\n\n\n\n\nTo run in parallel an mpi run can also be initiated:\n\n\nmpirun -np \n8\n CLB/myPseudoPotential/main example/multiphase/pseudo_potential/my_pp_config.xml\n\n\n\n\n\nIt it interesting to observe that the droplet shrinks and extends before reaching the steady state.\nEven then, you can observe so called \npasasitic currents\n being a numerical artefact. Sometimes, they can be so large that the droplet will move!\n\n\nReferences\n\n\nThe pseudo potential model comes from the work of X. Shan and H. Chen:\n\n\nX. Shan, H. Chen, Phys. Rev. E 47(3), 1815 (1993)\n\n\nX. Shan, G. Doolen, J. Stat. Phys. 81(1), 379 (1995)\n\n\nA good starting point explaining the 'zoo' of various LBM models is a modern (2017) book of T. Kr\u00fcger, H. Kusumaatmaja, A. Kuzmin, O. Shardt, G. Silva, E.M. Viggen 'The Lattice Boltzmann Method: Principles and Practice'.",
            "title": "D2Q9 Schan-Chen SRT"
        },
        {
            "location": "/tutorials/model-development/3.-D2Q9-ShanChen-SRT/#introduction",
            "text": "This tutorial will teach you how to use lattice Boltzmann method (LBM) to simulate a simple single-component multi-phase system with a contact angle within the TCLB environment. \nIt is assumed that the you have already completed the previous tutorial, namely 'D2Q9 Single Relaxation Time'.\nThe source code of completed 'D2Q9 Single Relaxation Time' tutorial is given  here  # TODO  First, a brief repetition of SRT and overview of the Schan-Chen model (AKA Pseudo Potential)  lattice Boltzmann equation  will be given.\nThen, we will code the model step by step.",
            "title": "Introduction"
        },
        {
            "location": "/tutorials/model-development/3.-D2Q9-ShanChen-SRT/#the-srt-lattice-boltzmann-equation",
            "text": "As in the previous example, the discrete form of the Boltzmann transport equation is expressed as:    f_i(\\mathbf{x} + \\mathbf{c}_i, t + 1) = f_i(\\mathbf{x},t) - \\frac{1}{\\tau}(f_i(\\mathbf{x},t)-f_i^{eq}(\\mathbf{x},t))    This describes the evolution of particle distribution functions along discrete velocities, where the right hand side is often referred to as the collision operation and the evaluation to the left hand side, the streaming operation. Note here that we are going to work in lattice units during the description of the model in which we assume $ \\Delta x = \\Delta t = 1 $. For the D2Q9 model, this assumption allows us to express the 9 discrete directions as,    \\mathbf{c} = \\begin{pmatrix}\n0 & 1 & 0 & -1 & 0 & 1 & -1 & -1 & 1 \\\\\n0 & 0 & 1 & 0 & -1 & 1 & 1 & -1 & -1\n\\end{pmatrix}    Additionally, we define the equilibrium distribution function found by an expansion of a Maxwellian distribution as,    f_i^{eq}(\\mathbf{x},t) = \\omega_i \\rho \\left( 1 +\\frac{\\mathbf{c}_i.\\mathbf{u}}{c_s^2}+\\frac{(\\mathbf{c}_i.\\mathbf{u})^2}{2c_s^4} - \\frac{\\mathbf{u}^2}{2c_s^2}\\right)    where,    c_s^2 = \\frac{1}{3}      w_i = \\begin{cases}\n\\frac{4}{9} &\\quad \\quad i=0 \\\\\n\\frac{1}{9} &\\quad \\quad i=1-4\\\\\n\\frac{1}{36}&\\quad \\quad i=5-8\n\\end{cases}",
            "title": "The SRT-lattice Boltzmann Equation:"
        },
        {
            "location": "/tutorials/model-development/3.-D2Q9-ShanChen-SRT/#boundary-conditions",
            "text": "In this tutorial we will investigate a droplet in a box.   The box is defined by no-slip wall boundary conditions. \nTo do this with LBM, the bounceback method is used. In this, particle distribution functions that stream into a node flagged as a \"wall\" are reversed, or \"bounced-back\" in the direction they came. \nTherefore, in general for a D2Q9 lattice we obtain:    \\begin{cases}\nf_0 = f'_0 \\\\\nf_1 = f'_3 \\\\\nf_2 = f'_4 \\\\\nf_3 = f'_1 \\\\\nf_4 = f'_2 \\\\\nf_5 = f'_7 \\\\\nf_6 = f'_8 \\\\\nf_7 = f'_5 \\\\\nf_8 = f'_6\n\\end{cases}    where the ' indicates the post-bounce-back direction. \nYou can observe that     \\mathbf{c}_{\\overline{i}} = - \\mathbf{c}_{i}",
            "title": "Boundary Conditions"
        },
        {
            "location": "/tutorials/model-development/3.-D2Q9-ShanChen-SRT/#force-implementation",
            "text": "The pseudo-potential model uses a \u201cbottom-up\u201d approach. \nThis mean, that the microscopic interaction between fluid elements is postulated, the results is the macroscopic separation of phases.\nDepending on the 'postulation' different Equations Of State can be achieved.  Without digging into details, the pseudo-potential field is frequently defined as:    \\psi(\\rho) = \\rho_0 [1 - exp(-\\rho/\\rho_0)]    Then, the fluid - fluid interaction force is given by:    \\mathbf{F}_{ff}(\\mathbf{x})=  -G_{ff} \\; \\psi(x)  \\sum_{i=1}^n w_i \\, \\psi(\\mathbf{x} + \\mathbf{c_i} \\Delta t) \\mathbf{c_i} \\Delta t    where $G_{ff}$ is a scalar used t adjust interaction strength.   Since the momentum change is $ \\Delta \\rho u = F $ we can account for the presence of force, be will incorporate it into equlibrium momentum.     \\rho \\mathbf{u}^{eq} = \\rho \\mathbf{u} + \\tau \\mathbf{F}    If there are more forces (like  Gravity, Fluid-Fluid and Solid-Fluid interaction), we can simply sum them into   F  :    \\mathbf{F} = \\mathbf{G} + \\mathbf{F}_{ff} + \\mathbf{F}_{sf}    This approach ultimately acts to relax each particle distribution function towards an equilibrium momentum that has included the time-incremental change due to the applied body force. To obtain the bulk fluid velocity, the before and after collision momentum is averaged giving,    u = \\frac{1}{\\rho} \\sum_{i=1}^n  f_i \\mathbf{c_i} + \\frac{ \\mathbf{F} \\Delta t}{ 2 \\rho}    and with this we have all we the dynamics required to implement the specified example.",
            "title": "Force Implementation"
        },
        {
            "location": "/tutorials/model-development/3.-D2Q9-ShanChen-SRT/#model-creation-in-tclb",
            "text": "",
            "title": "Model Creation in TCLB"
        },
        {
            "location": "/tutorials/model-development/3.-D2Q9-ShanChen-SRT/#dynamicsr",
            "text": "As per the  FD wave equation tutorial , we want to set up a folder named 'myPseudoPotential' in the  /models/  folder within TCLB. Additionally, the generic file structure needs to be created consisting of  conf.mk, Dynamics.c, Dynamics.R .   To start off the model, we look to add the nine distribution functions for the nine discrete velocities. This is implemented in the  Dynamics.R  file, but instead of adding each as its own field we look to stream the functions in the process of calling them at each node. To do this we instead add them as  Densities :  # Fluid Density Populations \nAddDensity (  name = \"f[0]\" ,  dx =   0 ,  dy =   0 ,  group = \"f\" ) \nAddDensity (  name = \"f[1]\" ,  dx =   1 ,  dy =   0 ,  group = \"f\" ) \nAddDensity (  name = \"f[2]\" ,  dx =   0 ,  dy =   1 ,  group = \"f\" ) \nAddDensity (  name = \"f[3]\" ,  dx = -1 ,  dy =   0 ,  group = \"f\" ) \nAddDensity (  name = \"f[4]\" ,  dx =   0 ,  dy = -1 ,  group = \"f\" ) \nAddDensity (  name = \"f[5]\" ,  dx =   1 ,  dy =   1 ,  group = \"f\" ) \nAddDensity (  name = \"f[6]\" ,  dx = -1 ,  dy =   1 ,  group = \"f\" ) \nAddDensity (  name = \"f[7]\" ,  dx = -1 ,  dy = -1 ,  group = \"f\" ) \nAddDensity (  name = \"f[8]\" ,  dx =   1 ,  dy = -1 ,  group = \"f\" )   Then we add pseudopotential field and one more field which will be used to distinguish whether neighbouring cell is a fluid or a wall.  # Pseudopotential field \nAddField ( \"psi\" ,  stencil2d = 1 ,  group = \"pp\" ) \nAddField ( \"neighbour_type\" ,  stencil2d = 1 ,  group = \"neighbour_type_group\" )   Next we will define 'Initialization list' and 'Iteration list' \nEach iteration consists of two stages, one resposible for update of 'f' population and the other one used to calculate the 'psi' field.  # Initialization list \nAddStage ( \"BaseInit\"       ,   \"Init\" ,  save = Fields $ group  %in%   c ( \"f\" ,   \"neighbour_type_group\" ),  load = DensityAll $ group == \"f\" )  # Iteration list \nAddStage ( \"BaseIteration\" ,   \"Run\"       ,   save = Fields $ group  %in%   c ( \"f\" ,   \"neighbour_type_group\" )   ,  load = DensityAll $ group  %in%   c ( \"f\" , \"neighbour_type_group\" )) \nAddStage ( \"PsiIteration\"   ,   \"calcPsi\"   ,   save = Fields $ name == \"psi\" ,  load = DensityAll $ group  %in%   c ( \"f\" )) \n\nAddAction ( \"Init\"       ,   c ( \"BaseInit\" ,        \"PsiIteration\" )) \nAddAction ( \"Iteration\" ,   c ( \"BaseIteration\" ,   \"PsiIteration\" ))",
            "title": "Dynamics.R"
        },
        {
            "location": "/tutorials/model-development/3.-D2Q9-ShanChen-SRT/#caveat",
            "text": "In TCLB core there is buffer 'A' and 'B'. During each iteration it switches the values from 'A' to 'B' and vice-versa. Thus if you save 'x' only during initialization you will see the old value of 'x' coming back each second iteration.\nTo fix it he have to add the 'save' command during each iteration in Dynamics.R\nSimalarly, in Dynamics.c the 'x' must saved during execution of Run() function like  x = x(0,0) , but we will come back to it later.  This is the reason why we have to save the  neighbour_type_group  during the  BaseIteration  even if its value is not changed.  Finally we can define the output variables:  # Output Values \nAddQuantity (  name = \"U\" ,     unit = \"m/s\" ,   vector = TRUE   ) \nAddQuantity (  name = \"Ueq\" ,   unit = \"m/s\" ,   vector = TRUE   ) \nAddQuantity (  name = \"Rho\" ,   unit = \"kg/m3\"   ) \nAddQuantity (  name = \"Psi\" ,   unit = \"1\"   ) \nAddQuantity (  name = \"Neighbour_type\" ,   unit = \"1\"   ) \nAddQuantity (  name = \"F_ff\" ,  unit = \"N\" ,   vector = TRUE ) \nAddQuantity (  name = \"F_sf\" ,  unit = \"N\" ,   vector = TRUE )   And parameters used as input:  # Model Specific Parameters \nAddSetting (  name = \"omega\" ,  comment = 'inverse of relaxation time' ) \nAddSetting (  name = \"nu\" ,  omega = '1.0/(3*nu+0.5)' ,  default = 0.16666666 ,  comment = 'viscosity' ) \nAddSetting (  name = \"VelocityX\" , default = 0 ,  comment = 'inlet/outlet/init velocity' ,  zonal = TRUE ) \nAddSetting (  name = \"VelocityY\" , default = 0 ,  comment = 'inlet/outlet/init velocity' ,  zonal = TRUE ) \nAddSetting (  name = \"GravitationX\" , default = 0 ,  comment = 'body/external acceleration' ,  zonal = TRUE ) \nAddSetting (  name = \"GravitationY\" , default = 0 ,  comment = 'body/external acceleration' ,  zonal = TRUE ) \nAddSetting (  name = \"Density\" , default = 1 ,  comment = 'Density' , zonal = TRUE ) \n\nAddSetting (  name = \"G_ff\" , default = 0 ,  comment = 'fluid-fluid interaction strength' ) \nAddSetting (  name = \"G_sf\" , default = 0 ,  comment = 'fluid-solid interaction strength' )",
            "title": "Caveat"
        },
        {
            "location": "/tutorials/model-development/3.-D2Q9-ShanChen-SRT/#dynamicsc",
            "text": "From the above, we have all the variables we need to implement the LBM. The first step is to initialise the lattice over the required domain, this is incorporated as part of the dynamics that are occurring in the model and must be incorporated into the  Dynamics.c  file within the  Init()  function.  CudaDeviceFunction   void   Init (){ \n     real_t   u [ 2 ]   =   { VelocityX ,   VelocityY }; \n     real_t   d   =   Density ; \n     SetEquilibrium ( d , u ); \n\n     neighbour_type = 0 ; \n\n     if   (( NodeType   &   NODE_BOUNDARY )   ==   NODE_Wall )   { \n         neighbour_type = 1 ; \n     }   }   Same as in previous tutorial,  we are calling on the function  SetEquilibrium()  within which we want to calculate the equilibrium distribution   for the given density and velocity fields.  CudaDeviceFunction   void   SetEquilibrium ( real_t   d ,   real_t   u [ 2 ])  {  f [ 0 ]   =   (   2.   +   (   - u [ 1 ] * u [ 1 ]   -   u [ 0 ] * u [ 0 ]   ) * 3.   ) * d * 2. / 9. ;  f [ 1 ]   =   (   2.   +   (   - u [ 1 ] * u [ 1 ]   +   (   1   +   u [ 0 ]   ) * u [ 0 ] * 2.   ) * 3.   ) * d / 18. ;  f [ 2 ]   =   (   2.   +   (   - u [ 0 ] * u [ 0 ]   +   (   1   +   u [ 1 ]   ) * u [ 1 ] * 2.   ) * 3.   ) * d / 18. ;  f [ 3 ]   =   (   2.   +   (   - u [ 1 ] * u [ 1 ]   +   (   - 1   +   u [ 0 ]   ) * u [ 0 ] * 2.   ) * 3.   ) * d / 18. ;  f [ 4 ]   =   (   2.   +   (   - u [ 0 ] * u [ 0 ]   +   (   - 1   +   u [ 1 ]   ) * u [ 1 ] * 2.   ) * 3.   ) * d / 18. ;  f [ 5 ]   =   (   1.   +   (   (   1   +   u [ 1 ]   ) * u [ 1 ]   +   (   1   +   u [ 0 ]   +   u [ 1 ] * 3.   ) * u [ 0 ]   ) * 3.   ) * d / 36. ;  f [ 6 ]   =   (   1.   +   (   (   1   +   u [ 1 ]   ) * u [ 1 ]   +   (   - 1   +   u [ 0 ]   -   u [ 1 ] * 3.   ) * u [ 0 ]   ) * 3.   ) * d / 36. ;  f [ 7 ]   =   (   1.   +   (   (   - 1   +   u [ 1 ]   ) * u [ 1 ]   +   (   - 1   +   u [ 0 ]   +   u [ 1 ] * 3.   ) * u [ 0 ]   ) * 3.   ) * d / 36. ;  f [ 8 ]   =   (   1.   +   (   (   - 1   +   u [ 1 ]   ) * u [ 1 ]   +   (   1   +   u [ 0 ]   -   u [ 1 ] * 3.   ) * u [ 0 ]   ) * 3.   ) * d / 36. ;  }   With the equilibrium function taken care of, we can now look at updating our initialised lattice. For this, the streaming operation is taken care of with the specification of  Densities  that we made. The collision operation however needs to be implemented and bounce-back for nodes flagged as walls. To do this, we define the  run()  function to describe what happens at each node at each timestep.  CudaDeviceFunction   void   Run ()   { \n     // This defines the dynamics that we run at each node in the domain. \n     switch   ( NodeType   &   NODE_BOUNDARY )   { \n     case   NODE_Solid : \n     case   NODE_Wall : \n         BounceBack (); \n         break ; \n     } \n     if   ( NodeType   &   NODE_MRT )  \n     { \n         CollisionBGK (); \n     } \n\n     neighbour_type   =   neighbour_type ( 0 , 0 );   }   Here is the line  neighbour_type = neighbour_type(0,0);  which was discussed in the  Caveat    Same as in D2Q9 SRT Tutorial, we need to define functions that describe both the  BounceBack()  and  CollisionBGK()  operations. \nThe bounce-back operation occurs as described in the theory component of this tutorial where distribution functions are reversed:",
            "title": "Dynamics.c"
        },
        {
            "location": "/tutorials/model-development/3.-D2Q9-ShanChen-SRT/#some-markdown-heading",
            "text": "CudaDeviceFunction   void   BounceBack ()   { \n     // Method to reverse distribution functions along the bounding nodes. \n     real_t   uf ; \n     uf   =   f [ 3 ]; \n     f [ 3 ]   =   f [ 1 ]; \n     f [ 1 ]   =   uf ; \n     uf   =   f [ 4 ]; \n     f [ 4 ]   =   f [ 2 ]; \n     f [ 2 ]   =   uf ; \n     uf   =   f [ 7 ]; \n     f [ 7 ]   =   f [ 5 ]; \n     f [ 5 ]   =   uf ; \n     uf   =   f [ 8 ]; \n     f [ 8 ]   =   f [ 6 ]; \n     f [ 6 ]   =   uf ;  }   While the BGK collision involved implementing the left hand side of the discrete Boltzmann equation.  CudaDeviceFunction   void   CollisionBGK ()   { \n     // Here we perform a single relaxation time collision operation. \n     // We save memory here by using a single dummy variable \n     real_t   u_eq [ 2 ],   d ,   f_temp [ 9 ]; \n     d   =   getRho (); \n\n     vector_t   u_eq_vect   =   getUeq (); \n     u_eq [ 0 ]   =   u_eq_vect . x ;  \n     u_eq [ 1 ]   =   u_eq_vect . y ; \n\n     f_temp [ 0 ]   =   f [ 0 ]; \n     f_temp [ 1 ]   =   f [ 1 ]; \n     f_temp [ 2 ]   =   f [ 2 ]; \n     f_temp [ 3 ]   =   f [ 3 ]; \n     f_temp [ 4 ]   =   f [ 4 ]; \n     f_temp [ 5 ]   =   f [ 5 ]; \n     f_temp [ 6 ]   =   f [ 6 ]; \n     f_temp [ 7 ]   =   f [ 7 ]; \n     f_temp [ 8 ]   =   f [ 8 ]; \n     SetEquilibrium ( d ,   u_eq );   //stores equilibrium distribution in f[0]-f[8] \n     f [ 0 ]   =   f_temp [ 0 ]   -   omega * ( f_temp [ 0 ] - f [ 0 ]);   \n     f [ 1 ]   =   f_temp [ 1 ]   -   omega * ( f_temp [ 1 ] - f [ 1 ]); \n     f [ 2 ]   =   f_temp [ 2 ]   -   omega * ( f_temp [ 2 ] - f [ 2 ]); \n     f [ 3 ]   =   f_temp [ 3 ]   -   omega * ( f_temp [ 3 ] - f [ 3 ]);   \n     f [ 4 ]   =   f_temp [ 4 ]   -   omega * ( f_temp [ 4 ] - f [ 4 ]); \n     f [ 5 ]   =   f_temp [ 5 ]   -   omega * ( f_temp [ 5 ] - f [ 5 ]); \n     f [ 6 ]   =   f_temp [ 6 ]   -   omega * ( f_temp [ 6 ] - f [ 6 ]);   \n     f [ 7 ]   =   f_temp [ 7 ]   -   omega * ( f_temp [ 7 ] - f [ 7 ]); \n     f [ 8 ]   =   f_temp [ 8 ]   -   omega * ( f_temp [ 8 ] - f [ 8 ]);  }   create an anchor \nIn this model we will use the Schan-Chen forcing shceme, which says the forcing term has to be added to the equibrium velocity. u^{eq} = \\frac{1}{\\rho} \\sum_{i=1}^n  f_i \\mathbf{c_i} + \\frac{\\tau \\mathbf{F} }{\\rho}   CudaDeviceFunction   vector_t   getUeq ()   { \n     real_t   d   =   getRho (); \n     vector_t   F_ff   =   getF_ff (); \n     vector_t   F_sf   =   getF_sf (); \n     vector_t   u_eq ; \n\n     u_eq . x   =   (   f [ 8 ] - f [ 7 ] - f [ 6 ] + f [ 5 ] - f [ 3 ] + f [ 1 ]   ) / d ; \n     u_eq . y   =   ( - f [ 8 ] - f [ 7 ] + f [ 6 ] + f [ 5 ] - f [ 4 ] + f [ 2 ]   ) / d ; \n\n     u_eq . x   +=   ( GravitationX   +   ( F_ff . x   +   F_sf . x ) / d )   /   omega ; \n     u_eq . y   +=   ( GravitationY   +   ( F_ff . y   +   F_sf . y ) / d )   /   omega ; \n     u_eq . z   =   0 ; \n\n     return   u_eq ;  }   Next step is to define the forcing functions.  First, we have to find the pseudopotential field:    \\psi(\\rho) = \\rho_0 [1 - exp(-\\rho/\\rho_0)]  \nwhere the reference density $ rho_0 $ is usually set to 1.  CudaDeviceFunction   void   calcPsi ()   { \n     // Calculate psi at each point so that pseudopotential force can be found. \n     // eq 9.102 p369 from book: 'The Lattice Boltzmann Method: Principles and Practice' \n     // T. Kr\u00fcger, H. Kusumaatmaja, A. Kuzmin, O. Shardt, G. Silva, E.M. Viggen \n\n     real_t   rho   =   getRho (); \n     psi   =   1   -   exp ( - rho );  }   The fluid - fluid interaction force is given by:    \\mathbf{F}_{ff}(\\mathbf{x})=  -G_{ff} \\; \\psi(x)  \\sum_{i=1}^n w_i \\, \\psi(\\mathbf{x} + \\mathbf{c_i} \\Delta t) \\mathbf{c_i} \\Delta t  \nwhere $G_{ff}$ is a scalar used t adjust interaction strength.   CudaDeviceFunction   vector_t   getF_ff ()   { \n     // fluid - fluid interaction force  \n     // eq 9.105 p 372 from book: 'The Lattice Boltzmann Method: Principles and Practice' \n     // T. Kr\u00fcger, H. Kusumaatmaja, A. Kuzmin, O. Shardt, G. Silva, E.M. Viggen \n     vector_t   F_ff ; \n     F_ff . x   =   0 ; \n     F_ff . y   =   0 ; \n     F_ff . z   =   0 ; \n\n     F_ff . x   =    (   psi ( 1 , - 1 ) - psi ( - 1 , - 1 ) + psi ( 1 , 1 ) - psi ( - 1 , 1 )) / 9.   +   ( psi ( 1 , 0 ) - psi ( - 1 , 0 )) / 36. ; \n     F_ff . y   =    ( - psi ( 1 , - 1 ) - psi ( - 1 , - 1 ) + psi ( 1 , 1 ) + psi ( - 1 , 1 )) / 9.   +   ( psi ( 0 , 1 ) - psi ( 0 , - 1 )) / 36. ; \n\n     F_ff . x   *=   - G_ff * psi ( 0 , 0 );  \n     F_ff . y   *=   - G_ff * psi ( 0 , 0 ); \n\n     // alternative version with dynamic access to the 'psi' field. \n     // for (int i=0; i< 9; i++){ \n     //     F_ff.x += wf[i] * psi_dyn(d2q9_ex[i], d2q9_ey[i])*d2q9_ex[i]; \n     //     F_ff.y += wf[i] * psi_dyn(d2q9_ex[i], d2q9_ey[i])*d2q9_ey[i]; \n     // } \n\n     return   F_ff ;  }   The solid-fluid force can be expressed in a similar manner:  \\mathbf{F}_{sf}(\\mathbf{x})=  -G_{sf} \\;  \\psi(x) \\sum_{i=1}^n w_i \\, s(\\mathbf{x} + \\mathbf{c_i} \\Delta t) \\mathbf{c_i} \\Delta t    Playing with the values of $G_{sf}$ one can find a desired contact angle. \nUnfortunately there is no straighforward method to know the value of $G_{sf}$ without numerical experiments.  The $s(\\mathbf{x} + \\mathbf{c_i} \\Delta t)$ is a switch function used to distiguish fluid and solid nodes.\nIt takes a value of 1 for solid-fluid interaction and 0 when neighbouring nodes are both fluid.\nIn TCLB, simpest way (not necessary most efficient) to realize it is to add additional field in Dynamics.R  AddField ( \"neighbour_type\" ,  stencil2d = 1 ,  group = \"neighbour_type_group\" )   Then, we have to prescribe the value in the initialization step  CudaDeviceFunction   void   Init (){ \n     real_t   u [ 2 ]   =   { VelocityX ,   VelocityY }; \n     real_t   d   =   Density ; \n     SetEquilibrium ( d , u ); \n\n     neighbour_type = 0 ; \n\n     if   (( NodeType   &   NODE_BOUNDARY )   ==   NODE_Wall )   { \n         neighbour_type = 1 ; \n     }   }   Finally, we can code the solid-fluid force:  CudaDeviceFunction   vector_t   getF_sf ()   { \n     // fluid - solid interaction force  \n     // eq 9.116 p376 from book: 'The Lattice Boltzmann Method: Principles and Practice' \n     // T. Kr\u00fcger, H. Kusumaatmaja, A. Kuzmin, O. Shardt, G. Silva, E.M. Viggen \n     vector_t   F_sf ; \n     F_sf . x   =   0 ; \n     F_sf . y   =   0 ; \n     F_sf . z   =   0 ; \n\n     for   ( int   i = 0 ;   i <   9 ;   i ++ ){ \n         F_sf . x   +=   wf [ i ]   * d2q9_ex [ i ]   *   neighbour_type_dyn ( d2q9_ex [ i ],   d2q9_ey [ i ]); \n         F_sf . y   +=   wf [ i ]   * d2q9_ey [ i ]   *   neighbour_type_dyn ( d2q9_ex [ i ],   d2q9_ey [ i ]); \n     } \n\n     F_sf . x   *=   - G_sf * psi ( 0 , 0 );  \n     F_sf . y   *=   - G_sf * psi ( 0 , 0 );  \n\n     return   F_sf ;  }",
            "title": "some markdown heading"
        },
        {
            "location": "/tutorials/model-development/3.-D2Q9-ShanChen-SRT/#setting-up-a-simulation",
            "text": "Create a configuration file,  my_pp_config.xml  in example/  <?xml version=\"1.0\"?>  <CLBConfig   output= \"output/\" > \n         <Geometry   nx= \"128\"   ny= \"128\" > \n         <MRT><Box/></MRT> \n                 <Wall   mask= \"ALL\"   name= \"border\"   > \n                         <Box   nx= \"1\" /> \n                         <Box   dx= \"-1\" /> \n                         <Box   ny= \"1\" /> \n                         <Box   dy= \"-1\" /> \n                 </Wall> \n                 <None   name= \"blobb\" > \n                         <!-- <Box dx=\"50\" nx=\"28\" dy=\"50\" ny=\"28\"/> --> \n                         <Sphere   ny= \"48\"   nx= \"48\"   dx= \"40\"   dy= \"0\"   />  \n                 </None> \n         </Geometry> \n         <Model> \n                 <Params   Density= \"0.056\" /> \n                 <Params   Density-blobb= \"2.659\" /> \n                 <Params   G_ff= \"-6.0\" /> \n                 <Params   G_sf= \"-3.7\" /> \n                 <Params   nu= \"0.166\" /> \n                 <!-- <Params GravitationY=\"-1e-5\"/> --> \n         </Model> \n         <Solve   Iterations= \"1000\"   output= \"output/\" >   <VTK   Iterations= \"10\" />   </Solve>  \n         <Failcheck   Iterations= \"1000\"   /> \n         <Solve   Iterations= \"50000\"   output= \"output/\" >   <VTK   Iterations= \"500\" />   </Solve>  </CLBConfig>   You can play with the configuration file, for example switching from    to   placed in the middle of domain.\nTry different values of solid-fluid interaction constant $G_sf$ and see how it affects the contact angle.  With the model and set-up files created, we can now look to make and run  myPseudoPotential . \nEnter the TCLB directory and call the run file along with the input file location, after this, the analysis can be performed in Paraview:  make myPseudoPotential\nCLB/myPseudoPotential/main example/multiphase/pseudo_potential/my_pp_config.xml\nparaview output/my_pp_config_VTK_P00_..pvti  To run in parallel an mpi run can also be initiated:  mpirun -np  8  CLB/myPseudoPotential/main example/multiphase/pseudo_potential/my_pp_config.xml  It it interesting to observe that the droplet shrinks and extends before reaching the steady state.\nEven then, you can observe so called  pasasitic currents  being a numerical artefact. Sometimes, they can be so large that the droplet will move!",
            "title": "Setting up a Simulation"
        },
        {
            "location": "/tutorials/model-development/3.-D2Q9-ShanChen-SRT/#references",
            "text": "The pseudo potential model comes from the work of X. Shan and H. Chen:  X. Shan, H. Chen, Phys. Rev. E 47(3), 1815 (1993)  X. Shan, G. Doolen, J. Stat. Phys. 81(1), 379 (1995)  A good starting point explaining the 'zoo' of various LBM models is a modern (2017) book of T. Kr\u00fcger, H. Kusumaatmaja, A. Kuzmin, O. Shardt, G. Silva, E.M. Viggen 'The Lattice Boltzmann Method: Principles and Practice'.",
            "title": "References"
        },
        {
            "location": "/tutorials/particles/particles-in-pipe/",
            "text": "Particles in a Pipe\n\n\n\n\nWarning\n\n\nAll these features related to particles are supported only in the\n\nparticle\n branch\n\n\n\n\nCase\n\n\nThe case consists of 5 balls of radious 30, placed along Y axis, connected\nby a narrowing cone, like on a picture:\n\n\n\n\nThe particles will be placed in the wide section, and driven by the force\napplied to the flow.\n\n\nGeometry\n\n\nWe will use the OpenSCAD software to create the geometry. It will consist of\nfour balls connected by a narrowing channel.\n\n\nOpenSCAD\n\n\nYou can install OpenSCAD with:\n\n\nsudo apt install openscad\n\n\n\n\n\nThe OpenSCAD allow us to create geometries with a script.\n\n\nR=30;\nD=60;\ntranslate([R,0,R]) {\n    sphere(d=R*2);\n    for (x=[1:4]) {\n        translate([0,x*D,0]) {\n            sphere(d=R*2);\n        }\n    }\n    rotate([-90,0,0]) cylinder(h=8*R,r1=R,r2=R/2);\n    rotate([90,0,0]) cylinder(h=3*R,r1=R,r2=R);\n    translate([0,4*D,0]) rotate([-90,0,0]) cylinder(h=3*R,r1=R,r2=R);\n}\n\n\n\n\n\nYou should get a geometry like this:\n\n\n\n\n\n\n    \nPipe test-case for TCLB\n\n    by \n\u0141 \u0141aniewski-Wo\u0142\u0142k\n\n    on \nSketchfab\n\n\n\n\n\n\n\nFrom OpenSCAD you can export into several file formats. Export an\nASCII STL file \"pipe_txt.stl\". Sadly, it is rare for any software to support ASCII STL\nfiles (which is also the case with TCLB). To create both binary stl file and\nMSH file for ESYS-Particle with a util program provided with TCLB:\n\n\ntools/stlutil -f pipe_txt.stl -o pipe.stl\ntools/stlutil -f pipe_txt.stl -o pipe.msh\n\n\n\n\n\nESYS-Particle simulation\n\n\n\n\nNote\n\n\nFor installation of ESYS-Particle, please refer to the \nreference\n\n\n\n\nConfiguration\n\n\nThe ESYS-Particle is simulation is set up in a python script \"pipe.py\". At\nthe begining of the script we have to initialize the \nsim\n object:\n\n\nfrom\n \nesys.lsm\n \nimport\n \n*\n\n\nfrom\n \nesys.lsm.util\n \nimport\n \nVec3\n,\n \nBoundingBox\n\n\nfrom\n \nesys.lsm.geometry\n \nimport\n \n*\n\n\n\nsim\n \n=\n \nLsmMpi\n(\nnumWorkerProcesses\n=\n1\n,\n \nmpiDimList\n=\n[\n1\n,\n1\n,\n1\n])\n\n\nsim\n.\ninitNeighbourSearch\n(\n \nparticleType\n=\n\"RotSphere\"\n,\n \ngridSpacing\n=\n38\n,\n \nverletDist\n=\n0.7\n \n)\n\n\nsim\n.\nsetSpatialDomain\n(\n\n    \nBoundingBox\n(\nVec3\n(\n0\n,\n0\n,\n0\n),\n \nVec3\n(\n64\n,\n240\n,\n64\n)),\n\n    \ncircDimList\n \n=\n \n[\nFalse\n,\n \nFalse\n,\n \nFalse\n]\n\n\n)\n\n\nsim\n.\nsetTimeStepSize\n(\n1\n)\n\n\nsim\n.\nsetNumTimeSteps\n(\n10000\n)\n\n\n\n\n\n\nFirst we read in the mesh:\n\n\nsim\n.\nreadMesh\n(\n\n    \nfileName\n \n=\n \n\"pipe.msh\"\n,\n\n    \nmeshName\n \n=\n \n\"floor_mesh_wall\"\n\n\n)\n\n\n\n\n\n\nThen we add a set of particles, randomly packed in a rectangle:\n\n\ngeoRandomBlock\n \n=\n \nRandomBoxPacker\n(\n\n            \nminRadius\n \n=\n \n4.0000\n,\n\n            \nmaxRadius\n \n=\n \n15.0000\n,\n\n            \ncubicPackRadius\n \n=\n \n11.0000\n,\n\n            \nmaxInsertFails\n \n=\n \n1000\n,\n\n            \nbBox\n \n=\n \nBoundingBox\n(\n\n            \nVec3\n(\n9.0000\n,\n \n2.0000\n,\n \n9.0000\n),\n\n            \nVec3\n(\n51.0000\n,\n \n60.0000\n,\n \n51.0000\n)\n\n    \n),\n\n    \ncircDimList\n \n=\n \n[\nFalse\n,\n \nFalse\n,\n \nFalse\n],\n\n    \ntolerance\n \n=\n \n1.0000e-05\n\n\n)\n\n\ngeoRandomBlock\n.\ngenerate\n()\n\n\ngeoRandomBlock_particles\n \n=\n \ngeoRandomBlock\n.\ngetSimpleSphereCollection\n()\n\n\nsim\n.\ncreateParticles\n(\ngeoRandomBlock_particles\n)\n\n\n\n\n\n\nWe add friction interaction between particles:\n\n\nnormalK\n \n=\n \n3\n;\n\n\nsim\n.\ncreateInteractionGroup\n \n(\n\n    \nRotFrictionPrms\n \n(\n\n        \nname\n \n=\n \n\"friction\"\n,\n\n        \nnormalK\n \n=\n \nnormalK\n,\n\n        \ndynamicMu\n \n=\n \n0.6\n,\n\n        \nshearK\n \n=\n \nnormalK\n/\n10.0\n,\n\n        \nstaticMu\n \n=\n \n0.6\n,\n\n        \nscaling\n \n=\n \nTrue\n\n    \n)\n\n\n)\n\n\n\n\n\n\nand elastic interaction between particles and mesh wall:\n\n\nsim\n.\ncreateInteractionGroup\n \n(\n\n    \nNRotElasticTriMeshPrms\n \n(\n\n        \nname\n \n=\n \n\"floorWall_repell\"\n,\n\n        \nmeshName\n \n=\n \n\"floor_mesh_wall\"\n,\n\n        \nnormalK\n \n=\n \nnormalK\n\n    \n)\n\n\n)\n\n\n\n\n\n\nTo start up the movement we add a small acceleration ($10^{-5}$):\n\n\nsim\n.\ncreateInteractionGroup\n \n(\n\n    \nGravityPrms\n \n(\n\n        \nname\n \n=\n \n\"gravity\"\n,\n\n        \nacceleration\n \n=\n \nVec3\n(\n0.0000\n,\n \n1e-5\n,\n \n0.0000\n)\n\n    \n)\n\n\n)\n\n\n\n\n\n\nTo visualize the results, we add a check-pointer, which will write dump\nfiles:\n\n\nsim\n.\ncreateCheckPointer\n \n(\n\n    \nCheckPointPrms\n \n(\n\n        \nfileNamePrefix\n \n=\n \n\"flow_data\"\n,\n\n        \nbeginTimeStep\n \n=\n \n0\n,\n\n        \nendTimeStep\n \n=\n \n20000\n,\n\n        \ntimeStepIncr\n \n=\n \n100\n\n    \n)\n\n\n)\n\n\n\n\n\n\nFinnaly, we finish the \"pipe.py\" file with the execution of the simulation:\n\n\nsim\n.\nrun\n()\n\n\n\n\n\n\nRunning ESYS-Particle\n\n\nWe declared that we will use 1 worker process. ESYS works in a master-slave\narchitecture, where master process is a python interpreter. That means that\nwe need to run our simulation with two processes:\n\n\nmpirun -np \n2\n esysparticle pipe.py\n\n\n\n\n\n\n\nPost-Processing\n\n\nTo learn how to post-process results from ESYS-Particle please refer\nto \nanother section of this manual\n\n\n\n\nTCLB Simulation\n\n\nThe fluid flow simulation will be a simple periodic flow in a pipe with\ngravity force.\n\n\nTo run the example we will use the \nd3q27_cumulant_part\n model.\n\n\nmake -j \n4\n d3q27_cumulant_part\n\n\n\n\n\n\n\nCompilation\n\n\nFor instructions on how to compile and run TCLB please refer to the\n\nGetting Started guide\n\n\n\n\nConfiguration\n\n\nLike any TCLB configuration (\npipe.xml\n) we start with declaring the output directory,\nsize of domain and initialize the domain with the collision operator:\n\n\n<CLBConfig\n \nversion=\n\"2.0\"\n \noutput=\n\"output/3D/\"\n>\n\n        \n<Geometry\n \nnx=\n\"64\"\n \nny=\n\"240\"\n \nnz=\n\"64\"\n>\n\n        \n<MRT><Box/></MRT>\n\n\n\n\n\n\nNow we can add our STL geometry. We want mark all elements \noutside\n of the\ngeometry with \nWall\n elements (and switch off collision):\n\n\n                \n<Wall\n \nmask=\n\"ALL\"\n>\n\n                       \n<STL\n \nfile=\n\"pipe.stl\"\n \nside=\n\"out\"\n/>\n\n                \n</Wall>\n\n\n\n\n\n\nWe now close the geometry element and begin to set up the simulation\nsettings:\n\n\n        \n</Geometry>\n\n        \n<Model>\n\n                \n<Params\n \nForceY=\n\"0.0001\"\n/>\n\n                \n<Params\n \nomega=\n\"1.0\"\n/>\n\n    \n</Model>\n\n\n\n\n\n\nAfter that we have everything ready. We can declare what output we need and\nhow many iterations we wan to execute:\n\n\n        \n<Failcheck\n \nIterations=\n\"1000\"\n/>\n\n        \n<VTK/>\n\n        \n<VTK\n \nIterations=\n\"1000\"\n \nwhat=\n\"U,Solid\"\n/>\n\n        \n<Solve\n \nIterations=\n\"10000\"\n/>\n\n\n</CLBConfig>\n\n\n\n\n\n\nRunning TCLB\n\n\nIf we are running on GPU, at this stage we can use a single GPU:\n\n\nCLB/d3q27_cumulant_part/main pipe.xml\n\n\n\n\n\nIf you are running on CPU, it's probably best to use all the avaliable CPU\ncores:\n\n\nmpirun -np \n4\n CLB/d3q27_cumulant_part/main pipe.xml\n\n\n\n\n\nResults\n\n\nIn ParaView you can inspect the results. The initiali VTK drop includes all\nfields, which means that you can check if the boudaries are in the right\nplaces etc. You can also check what is the maximal velocity.\n\n\nCombining TCLB and ESYS simulations\n\n\nConfiguration\n\n\nTo combine the two simulations we add the \n<RemoteForceInterface>\n element\nto the configuration file (say \npipe_dem.xml\n) to the \n<Model>\n container.\nThis will include our settings for the particle simulation:\n\n\n        \n<RemoteForceInterface\n \nIterations=\n\"10000\"\n \nparticle=\n\"RotSphere\"\n \nverletDist=\n\"0.7\"\n \ngridSpacing=\n\"38\"\n>\n\nsim.readMesh(\n    fileName = \"pipe.msh\",\n    meshName = \"floor_mesh_wall\"\n)\n\ngeoRandomBlock = RandomBoxPacker(\n    minRadius = 4.0000,\n    maxRadius = 15.0000,\n    cubicPackRadius = 11.0000,\n    maxInsertFails = 1000,\n    bBox = BoundingBox(\n    Vec3(9.0000, 2.0000, 9.0000),\n    Vec3(51.0000, 60.0000, 51.0000)\n    ),\n    circDimList = [False, False, False],\n    tolerance = 1.0000e-05\n    )\ngeoRandomBlock.generate()\ngeoRandomBlock_particles = geoRandomBlock.getSimpleSphereCollection()\nsim.createParticles(geoRandomBlock_particles)\nsim.setParticleDensity (   tag = 0,   mask = -1,   Density = 2.0)\n\nnormalK = 3;\n\nsim.createInteractionGroup (\n    RotFrictionPrms (\n        name = \"friction\",\n        normalK = normalK,\n        dynamicMu = 0.6,\n        shearK = normalK/10.0,\n        staticMu = 0.6,\n        scaling = True\n        )\n    )\n\nsim.createInteractionGroup (\n    NRotElasticTriMeshPrms (\n        name = \"floorWall_repell\",\n        meshName = \"floor_mesh_wall\",\n        normalK = normalK\n        )\n    )\n\nsim.createInteractionGroup (\n    GravityPrms (\n        name = \"gravity\",\n        acceleration = Vec3(0.0000, 1e-5, 0.0000)\n        )\n    )\n\nsim.createCheckPointer (\n    CheckPointPrms (\n        fileNamePrefix = \"flow_data\",\n        beginTimeStep = 0,\n        endTimeStep = 20000,\n        timeStepIncr = 100\n        )\n    )\n        \n</RemoteForceInterface>\n\n\n\n\n\n\nWe deleted the now the gravity force acting on the particles, and rely only\non the force applied to the fluid flow.\n\n\nRunning TCLB and ESYS\n\n\nOur simulation is set up to be executed in a Spawning approach. This means\nthat we will run TCLB, and TCLB will dynamically spawn ESYS-Particle code.\n\n\nTo say to MPI that we have a limited number of slots for process execution\n(cores), we need to create a hostfile:\n\n\nlocalhost\nlocalhost\nlocalhost\nlocalhost\n\n\n\n\n\nThis hostfile is very simple, and just says that we have 4 avaliable slots\non our computer (localhost). In a multi-computer setup (eg. cluster), we\nwould specify all the nodes involved.\n\n\nNow we can run TCLB with:\n\n\nmpirun -hostfile hostfile -np \n1\n CLB/d3q27_cumulant_part/main pipe.xml\n\n\n\n\n\nThis will execute a single process of TCLB, which will in turn spawn 3\nprocesses of ESYS (it will fill up the avaliable space). This means that it\nwill run a single master process and 2 worker processes. It will also\ngenerate the Python setup file for ESYS, with appropriate division of the\ndomain and number of processes. You can inspect the generated file, which is\nit \noutput/pipe_ESYS.py\n.\n\n\nMPMD\n\n\nWe can also run the case in a Multiple Program Multiple Data (MPMD) approach.\nThis means executing both programs at the same time. As ESYS is executed\nimmediately, we have to provide our own Python configuration file. In our\ncase, we can use the \noutput/pipe_ESYS.py\n as the template.\n\n\nTo run the both codes we use the runmpi's MPMD syntax:\n\n\nmpirun -np \n1\n CLB/d3q27_cumulant_part/main pipe.xml : -np \n3\n esysparticle pipe.py\n\n\n\n\n\nAs the configuration for ESYS is not generated we can delete all contents of\nthe \n<RemoteForceInterface>\n XML element (but we have to keep it, so that\nTCLB knows we want to connect with ESYS.\n\n\nResults\n\n\nBoth the fluid results and particle data can be loaded into ParaView.\nParaView also reads stl files. The example results look like this:",
            "title": "Particles in a Pipe"
        },
        {
            "location": "/tutorials/particles/particles-in-pipe/#particles-in-a-pipe",
            "text": "Warning  All these features related to particles are supported only in the particle  branch",
            "title": "Particles in a Pipe"
        },
        {
            "location": "/tutorials/particles/particles-in-pipe/#case",
            "text": "The case consists of 5 balls of radious 30, placed along Y axis, connected\nby a narrowing cone, like on a picture:   The particles will be placed in the wide section, and driven by the force\napplied to the flow.",
            "title": "Case"
        },
        {
            "location": "/tutorials/particles/particles-in-pipe/#geometry",
            "text": "We will use the OpenSCAD software to create the geometry. It will consist of\nfour balls connected by a narrowing channel.",
            "title": "Geometry"
        },
        {
            "location": "/tutorials/particles/particles-in-pipe/#openscad",
            "text": "You can install OpenSCAD with:  sudo apt install openscad  The OpenSCAD allow us to create geometries with a script.  R=30;\nD=60;\ntranslate([R,0,R]) {\n    sphere(d=R*2);\n    for (x=[1:4]) {\n        translate([0,x*D,0]) {\n            sphere(d=R*2);\n        }\n    }\n    rotate([-90,0,0]) cylinder(h=8*R,r1=R,r2=R/2);\n    rotate([90,0,0]) cylinder(h=3*R,r1=R,r2=R);\n    translate([0,4*D,0]) rotate([-90,0,0]) cylinder(h=3*R,r1=R,r2=R);\n}  You should get a geometry like this:   \n     Pipe test-case for TCLB \n    by  \u0141 \u0141aniewski-Wo\u0142\u0142k \n    on  Sketchfab    From OpenSCAD you can export into several file formats. Export an\nASCII STL file \"pipe_txt.stl\". Sadly, it is rare for any software to support ASCII STL\nfiles (which is also the case with TCLB). To create both binary stl file and\nMSH file for ESYS-Particle with a util program provided with TCLB:  tools/stlutil -f pipe_txt.stl -o pipe.stl\ntools/stlutil -f pipe_txt.stl -o pipe.msh",
            "title": "OpenSCAD"
        },
        {
            "location": "/tutorials/particles/particles-in-pipe/#esys-particle-simulation",
            "text": "Note  For installation of ESYS-Particle, please refer to the  reference",
            "title": "ESYS-Particle simulation"
        },
        {
            "location": "/tutorials/particles/particles-in-pipe/#configuration",
            "text": "The ESYS-Particle is simulation is set up in a python script \"pipe.py\". At\nthe begining of the script we have to initialize the  sim  object:  from   esys.lsm   import   *  from   esys.lsm.util   import   Vec3 ,   BoundingBox  from   esys.lsm.geometry   import   *  sim   =   LsmMpi ( numWorkerProcesses = 1 ,   mpiDimList = [ 1 , 1 , 1 ])  sim . initNeighbourSearch (   particleType = \"RotSphere\" ,   gridSpacing = 38 ,   verletDist = 0.7   )  sim . setSpatialDomain ( \n     BoundingBox ( Vec3 ( 0 , 0 , 0 ),   Vec3 ( 64 , 240 , 64 )), \n     circDimList   =   [ False ,   False ,   False ]  )  sim . setTimeStepSize ( 1 )  sim . setNumTimeSteps ( 10000 )   First we read in the mesh:  sim . readMesh ( \n     fileName   =   \"pipe.msh\" , \n     meshName   =   \"floor_mesh_wall\"  )   Then we add a set of particles, randomly packed in a rectangle:  geoRandomBlock   =   RandomBoxPacker ( \n             minRadius   =   4.0000 , \n             maxRadius   =   15.0000 , \n             cubicPackRadius   =   11.0000 , \n             maxInsertFails   =   1000 , \n             bBox   =   BoundingBox ( \n             Vec3 ( 9.0000 ,   2.0000 ,   9.0000 ), \n             Vec3 ( 51.0000 ,   60.0000 ,   51.0000 ) \n     ), \n     circDimList   =   [ False ,   False ,   False ], \n     tolerance   =   1.0000e-05  )  geoRandomBlock . generate ()  geoRandomBlock_particles   =   geoRandomBlock . getSimpleSphereCollection ()  sim . createParticles ( geoRandomBlock_particles )   We add friction interaction between particles:  normalK   =   3 ;  sim . createInteractionGroup   ( \n     RotFrictionPrms   ( \n         name   =   \"friction\" , \n         normalK   =   normalK , \n         dynamicMu   =   0.6 , \n         shearK   =   normalK / 10.0 , \n         staticMu   =   0.6 , \n         scaling   =   True \n     )  )   and elastic interaction between particles and mesh wall:  sim . createInteractionGroup   ( \n     NRotElasticTriMeshPrms   ( \n         name   =   \"floorWall_repell\" , \n         meshName   =   \"floor_mesh_wall\" , \n         normalK   =   normalK \n     )  )   To start up the movement we add a small acceleration ($10^{-5}$):  sim . createInteractionGroup   ( \n     GravityPrms   ( \n         name   =   \"gravity\" , \n         acceleration   =   Vec3 ( 0.0000 ,   1e-5 ,   0.0000 ) \n     )  )   To visualize the results, we add a check-pointer, which will write dump\nfiles:  sim . createCheckPointer   ( \n     CheckPointPrms   ( \n         fileNamePrefix   =   \"flow_data\" , \n         beginTimeStep   =   0 , \n         endTimeStep   =   20000 , \n         timeStepIncr   =   100 \n     )  )   Finnaly, we finish the \"pipe.py\" file with the execution of the simulation:  sim . run ()",
            "title": "Configuration"
        },
        {
            "location": "/tutorials/particles/particles-in-pipe/#running-esys-particle",
            "text": "We declared that we will use 1 worker process. ESYS works in a master-slave\narchitecture, where master process is a python interpreter. That means that\nwe need to run our simulation with two processes:  mpirun -np  2  esysparticle pipe.py   Post-Processing  To learn how to post-process results from ESYS-Particle please refer\nto  another section of this manual",
            "title": "Running ESYS-Particle"
        },
        {
            "location": "/tutorials/particles/particles-in-pipe/#tclb-simulation",
            "text": "The fluid flow simulation will be a simple periodic flow in a pipe with\ngravity force.  To run the example we will use the  d3q27_cumulant_part  model.  make -j  4  d3q27_cumulant_part   Compilation  For instructions on how to compile and run TCLB please refer to the Getting Started guide",
            "title": "TCLB Simulation"
        },
        {
            "location": "/tutorials/particles/particles-in-pipe/#configuration_1",
            "text": "Like any TCLB configuration ( pipe.xml ) we start with declaring the output directory,\nsize of domain and initialize the domain with the collision operator:  <CLBConfig   version= \"2.0\"   output= \"output/3D/\" > \n         <Geometry   nx= \"64\"   ny= \"240\"   nz= \"64\" > \n         <MRT><Box/></MRT>   Now we can add our STL geometry. We want mark all elements  outside  of the\ngeometry with  Wall  elements (and switch off collision):                   <Wall   mask= \"ALL\" > \n                        <STL   file= \"pipe.stl\"   side= \"out\" /> \n                 </Wall>   We now close the geometry element and begin to set up the simulation\nsettings:           </Geometry> \n         <Model> \n                 <Params   ForceY= \"0.0001\" /> \n                 <Params   omega= \"1.0\" /> \n     </Model>   After that we have everything ready. We can declare what output we need and\nhow many iterations we wan to execute:           <Failcheck   Iterations= \"1000\" /> \n         <VTK/> \n         <VTK   Iterations= \"1000\"   what= \"U,Solid\" /> \n         <Solve   Iterations= \"10000\" />  </CLBConfig>",
            "title": "Configuration"
        },
        {
            "location": "/tutorials/particles/particles-in-pipe/#running-tclb",
            "text": "If we are running on GPU, at this stage we can use a single GPU:  CLB/d3q27_cumulant_part/main pipe.xml  If you are running on CPU, it's probably best to use all the avaliable CPU\ncores:  mpirun -np  4  CLB/d3q27_cumulant_part/main pipe.xml",
            "title": "Running TCLB"
        },
        {
            "location": "/tutorials/particles/particles-in-pipe/#results",
            "text": "In ParaView you can inspect the results. The initiali VTK drop includes all\nfields, which means that you can check if the boudaries are in the right\nplaces etc. You can also check what is the maximal velocity.",
            "title": "Results"
        },
        {
            "location": "/tutorials/particles/particles-in-pipe/#combining-tclb-and-esys-simulations",
            "text": "",
            "title": "Combining TCLB and ESYS simulations"
        },
        {
            "location": "/tutorials/particles/particles-in-pipe/#configuration_2",
            "text": "To combine the two simulations we add the  <RemoteForceInterface>  element\nto the configuration file (say  pipe_dem.xml ) to the  <Model>  container.\nThis will include our settings for the particle simulation:           <RemoteForceInterface   Iterations= \"10000\"   particle= \"RotSphere\"   verletDist= \"0.7\"   gridSpacing= \"38\" > \nsim.readMesh(\n    fileName = \"pipe.msh\",\n    meshName = \"floor_mesh_wall\"\n)\n\ngeoRandomBlock = RandomBoxPacker(\n    minRadius = 4.0000,\n    maxRadius = 15.0000,\n    cubicPackRadius = 11.0000,\n    maxInsertFails = 1000,\n    bBox = BoundingBox(\n    Vec3(9.0000, 2.0000, 9.0000),\n    Vec3(51.0000, 60.0000, 51.0000)\n    ),\n    circDimList = [False, False, False],\n    tolerance = 1.0000e-05\n    )\ngeoRandomBlock.generate()\ngeoRandomBlock_particles = geoRandomBlock.getSimpleSphereCollection()\nsim.createParticles(geoRandomBlock_particles)\nsim.setParticleDensity (   tag = 0,   mask = -1,   Density = 2.0)\n\nnormalK = 3;\n\nsim.createInteractionGroup (\n    RotFrictionPrms (\n        name = \"friction\",\n        normalK = normalK,\n        dynamicMu = 0.6,\n        shearK = normalK/10.0,\n        staticMu = 0.6,\n        scaling = True\n        )\n    )\n\nsim.createInteractionGroup (\n    NRotElasticTriMeshPrms (\n        name = \"floorWall_repell\",\n        meshName = \"floor_mesh_wall\",\n        normalK = normalK\n        )\n    )\n\nsim.createInteractionGroup (\n    GravityPrms (\n        name = \"gravity\",\n        acceleration = Vec3(0.0000, 1e-5, 0.0000)\n        )\n    )\n\nsim.createCheckPointer (\n    CheckPointPrms (\n        fileNamePrefix = \"flow_data\",\n        beginTimeStep = 0,\n        endTimeStep = 20000,\n        timeStepIncr = 100\n        )\n    )\n         </RemoteForceInterface>   We deleted the now the gravity force acting on the particles, and rely only\non the force applied to the fluid flow.",
            "title": "Configuration"
        },
        {
            "location": "/tutorials/particles/particles-in-pipe/#running-tclb-and-esys",
            "text": "Our simulation is set up to be executed in a Spawning approach. This means\nthat we will run TCLB, and TCLB will dynamically spawn ESYS-Particle code.  To say to MPI that we have a limited number of slots for process execution\n(cores), we need to create a hostfile:  localhost\nlocalhost\nlocalhost\nlocalhost  This hostfile is very simple, and just says that we have 4 avaliable slots\non our computer (localhost). In a multi-computer setup (eg. cluster), we\nwould specify all the nodes involved.  Now we can run TCLB with:  mpirun -hostfile hostfile -np  1  CLB/d3q27_cumulant_part/main pipe.xml  This will execute a single process of TCLB, which will in turn spawn 3\nprocesses of ESYS (it will fill up the avaliable space). This means that it\nwill run a single master process and 2 worker processes. It will also\ngenerate the Python setup file for ESYS, with appropriate division of the\ndomain and number of processes. You can inspect the generated file, which is\nit  output/pipe_ESYS.py .",
            "title": "Running TCLB and ESYS"
        },
        {
            "location": "/tutorials/particles/particles-in-pipe/#mpmd",
            "text": "We can also run the case in a Multiple Program Multiple Data (MPMD) approach.\nThis means executing both programs at the same time. As ESYS is executed\nimmediately, we have to provide our own Python configuration file. In our\ncase, we can use the  output/pipe_ESYS.py  as the template.  To run the both codes we use the runmpi's MPMD syntax:  mpirun -np  1  CLB/d3q27_cumulant_part/main pipe.xml : -np  3  esysparticle pipe.py  As the configuration for ESYS is not generated we can delete all contents of\nthe  <RemoteForceInterface>  XML element (but we have to keep it, so that\nTCLB knows we want to connect with ESYS.",
            "title": "MPMD"
        },
        {
            "location": "/tutorials/particles/particles-in-pipe/#results_1",
            "text": "Both the fluid results and particle data can be loaded into ParaView.\nParaView also reads stl files. The example results look like this:",
            "title": "Results"
        }
    ]
}